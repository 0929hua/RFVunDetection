Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xbf]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xbf
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xbf
0xa: JUMPI 0xbf V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xc4]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x84bcc8a
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xc4
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x84bcc8a
0x20: V14 = EQ V12 0x84bcc8a
0x21: V15 = 0xc4
0x24: JUMPI 0xc4 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xe5]
---
0x25 DUP1
0x26 PUSH4 0x1fdaa5e8
0x2b EQ
0x2c PUSH2 0xe5
0x2f JUMPI
---
0x26: V16 = 0x1fdaa5e8
0x2b: V17 = EQ 0x1fdaa5e8 V12
0x2c: V18 = 0xe5
0x2f: JUMPI 0xe5 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x120]
---
0x30 DUP1
0x31 PUSH4 0x29c45cb6
0x36 EQ
0x37 PUSH2 0x120
0x3a JUMPI
---
0x31: V19 = 0x29c45cb6
0x36: V20 = EQ 0x29c45cb6 V12
0x37: V21 = 0x120
0x3a: JUMPI 0x120 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x14e]
---
0x3b DUP1
0x3c PUSH4 0x42d43264
0x41 EQ
0x42 PUSH2 0x14e
0x45 JUMPI
---
0x3c: V22 = 0x42d43264
0x41: V23 = EQ 0x42d43264 V12
0x42: V24 = 0x14e
0x45: JUMPI 0x14e V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x189]
---
0x46 DUP1
0x47 PUSH4 0x49ef3811
0x4c EQ
0x4d PUSH2 0x189
0x50 JUMPI
---
0x47: V25 = 0x49ef3811
0x4c: V26 = EQ 0x49ef3811 V12
0x4d: V27 = 0x189
0x50: JUMPI 0x189 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x1bf]
---
0x51 DUP1
0x52 PUSH4 0x6971cc7f
0x57 EQ
0x58 PUSH2 0x1bf
0x5b JUMPI
---
0x52: V28 = 0x6971cc7f
0x57: V29 = EQ 0x6971cc7f V12
0x58: V30 = 0x1bf
0x5b: JUMPI 0x1bf V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x1fa]
---
0x5c DUP1
0x5d PUSH4 0x6eba2b13
0x62 EQ
0x63 PUSH2 0x1fa
0x66 JUMPI
---
0x5d: V31 = 0x6eba2b13
0x62: V32 = EQ 0x6eba2b13 V12
0x63: V33 = 0x1fa
0x66: JUMPI 0x1fa V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x25e]
---
0x67 DUP1
0x68 PUSH4 0x6fcca69b
0x6d EQ
0x6e PUSH2 0x25e
0x71 JUMPI
---
0x68: V34 = 0x6fcca69b
0x6d: V35 = EQ 0x6fcca69b V12
0x6e: V36 = 0x25e
0x71: JUMPI 0x25e V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x28f]
---
0x72 DUP1
0x73 PUSH4 0xaa767289
0x78 EQ
0x79 PUSH2 0x28f
0x7c JUMPI
---
0x73: V37 = 0xaa767289
0x78: V38 = EQ 0xaa767289 V12
0x79: V39 = 0x28f
0x7c: JUMPI 0x28f V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x2c0]
---
0x7d DUP1
0x7e PUSH4 0xc205456d
0x83 EQ
0x84 PUSH2 0x2c0
0x87 JUMPI
---
0x7e: V40 = 0xc205456d
0x83: V41 = EQ 0xc205456d V12
0x84: V42 = 0x2c0
0x87: JUMPI 0x2c0 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x2e4]
---
0x88 DUP1
0x89 PUSH4 0xcbe10737
0x8e EQ
0x8f PUSH2 0x2e4
0x92 JUMPI
---
0x89: V43 = 0xcbe10737
0x8e: V44 = EQ 0xcbe10737 V12
0x8f: V45 = 0x2e4
0x92: JUMPI 0x2e4 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x320]
---
0x93 DUP1
0x94 PUSH4 0xd34dd1f0
0x99 EQ
0x9a PUSH2 0x320
0x9d JUMPI
---
0x94: V46 = 0xd34dd1f0
0x99: V47 = EQ 0xd34dd1f0 V12
0x9a: V48 = 0x320
0x9d: JUMPI 0x320 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x344]
---
0x9e DUP1
0x9f PUSH4 0xe16a4b61
0xa4 EQ
0xa5 PUSH2 0x344
0xa8 JUMPI
---
0x9f: V49 = 0xe16a4b61
0xa4: V50 = EQ 0xe16a4b61 V12
0xa5: V51 = 0x344
0xa8: JUMPI 0x344 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x375]
---
0xa9 DUP1
0xaa PUSH4 0xf40e8471
0xaf EQ
0xb0 PUSH2 0x375
0xb3 JUMPI
---
0xaa: V52 = 0xf40e8471
0xaf: V53 = EQ 0xf40e8471 V12
0xb0: V54 = 0x375
0xb3: JUMPI 0x375 V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x3ea]
---
0xb4 DUP1
0xb5 PUSH4 0xf851a440
0xba EQ
0xbb PUSH2 0x3ea
0xbe JUMPI
---
0xb5: V55 = 0xf851a440
0xba: V56 = EQ 0xf851a440 V12
0xbb: V57 = 0x3ea
0xbe: JUMPI 0x3ea V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc3]
---
Predecessors: [0x0, 0xb4, 0x7ec, 0x897]
Successors: []
---
0xbf JUMPDEST
0xc0 PUSH1 0x0
0xc2 DUP1
0xc3 REVERT
---
0xbf: JUMPDEST 
0xc0: V58 = 0x0
0xc3: REVERT 0x0 0x0
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xc4
[0xc4:0xca]
---
Predecessors: [0xb]
Successors: [0xcb, 0xcf]
---
0xc4 JUMPDEST
0xc5 CALLVALUE
0xc6 ISZERO
0xc7 PUSH2 0xcf
0xca JUMPI
---
0xc4: JUMPDEST 
0xc5: V59 = CALLVALUE
0xc6: V60 = ISZERO V59
0xc7: V61 = 0xcf
0xca: JUMPI 0xcf V60
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xcb
[0xcb:0xce]
---
Predecessors: [0xc4]
Successors: []
---
0xcb PUSH1 0x0
0xcd DUP1
0xce REVERT
---
0xcb: V62 = 0x0
0xce: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xcf
[0xcf:0xe2]
---
Predecessors: [0xc4]
Successors: [0x419]
---
0xcf JUMPDEST
0xd0 PUSH2 0xe3
0xd3 PUSH1 0x1
0xd5 PUSH1 0xa0
0xd7 PUSH1 0x2
0xd9 EXP
0xda SUB
0xdb PUSH1 0x4
0xdd CALLDATALOAD
0xde AND
0xdf PUSH2 0x419
0xe2 JUMP
---
0xcf: JUMPDEST 
0xd0: V63 = 0xe3
0xd3: V64 = 0x1
0xd5: V65 = 0xa0
0xd7: V66 = 0x2
0xd9: V67 = EXP 0x2 0xa0
0xda: V68 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdb: V69 = 0x4
0xdd: V70 = CALLDATALOAD 0x4
0xde: V71 = AND V70 0xffffffffffffffffffffffffffffffffffffffff
0xdf: V72 = 0x419
0xe2: JUMP 0x419
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xe3, V71]
Exit stack: [V12, 0xe3, V71]

================================

Block 0xe3
[0xe3:0xe4]
---
Predecessors: [0x605, 0x9d5, 0xad0, 0xf48]
Successors: []
---
0xe3 JUMPDEST
0xe4 STOP
---
0xe3: JUMPDEST 
0xe4: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe5
[0xe5:0xeb]
---
Predecessors: [0x25]
Successors: [0xec, 0xf0]
---
0xe5 JUMPDEST
0xe6 CALLVALUE
0xe7 ISZERO
0xe8 PUSH2 0xf0
0xeb JUMPI
---
0xe5: JUMPDEST 
0xe6: V73 = CALLVALUE
0xe7: V74 = ISZERO V73
0xe8: V75 = 0xf0
0xeb: JUMPI 0xf0 V74
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xec
[0xec:0xef]
---
Predecessors: [0xe5]
Successors: []
---
0xec PUSH1 0x0
0xee DUP1
0xef REVERT
---
0xec: V76 = 0x0
0xef: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf0
[0xf0:0x103]
---
Predecessors: [0xe5]
Successors: [0x608]
---
0xf0 JUMPDEST
0xf1 PUSH2 0x104
0xf4 PUSH1 0x1
0xf6 PUSH1 0xa0
0xf8 PUSH1 0x2
0xfa EXP
0xfb SUB
0xfc PUSH1 0x4
0xfe CALLDATALOAD
0xff AND
0x100 PUSH2 0x608
0x103 JUMP
---
0xf0: JUMPDEST 
0xf1: V77 = 0x104
0xf4: V78 = 0x1
0xf6: V79 = 0xa0
0xf8: V80 = 0x2
0xfa: V81 = EXP 0x2 0xa0
0xfb: V82 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfc: V83 = 0x4
0xfe: V84 = CALLDATALOAD 0x4
0xff: V85 = AND V84 0xffffffffffffffffffffffffffffffffffffffff
0x100: V86 = 0x608
0x103: JUMP 0x608
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x104, V85]
Exit stack: [V12, 0x104, V85]

================================

Block 0x104
[0x104:0x11f]
---
Predecessors: [0x627, 0x685, 0x9ff, 0xfc6]
Successors: []
---
0x104 JUMPDEST
0x105 PUSH1 0x40
0x107 MLOAD
0x108 PUSH1 0x1
0x10a PUSH1 0xa0
0x10c PUSH1 0x2
0x10e EXP
0x10f SUB
0x110 SWAP1
0x111 SWAP2
0x112 AND
0x113 DUP2
0x114 MSTORE
0x115 PUSH1 0x20
0x117 ADD
0x118 PUSH1 0x40
0x11a MLOAD
0x11b DUP1
0x11c SWAP2
0x11d SUB
0x11e SWAP1
0x11f RETURN
---
0x104: JUMPDEST 
0x105: V87 = 0x40
0x107: V88 = M[0x40]
0x108: V89 = 0x1
0x10a: V90 = 0xa0
0x10c: V91 = 0x2
0x10e: V92 = EXP 0x2 0xa0
0x10f: V93 = SUB 0x10000000000000000000000000000000000000000 0x1
0x112: V94 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x114: M[V88] = V94
0x115: V95 = 0x20
0x117: V96 = ADD 0x20 V88
0x118: V97 = 0x40
0x11a: V98 = M[0x40]
0x11d: V99 = SUB V96 V98
0x11f: RETURN V98 V99
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x120
[0x120:0x126]
---
Predecessors: [0x30]
Successors: [0x127, 0x12b]
---
0x120 JUMPDEST
0x121 CALLVALUE
0x122 ISZERO
0x123 PUSH2 0x12b
0x126 JUMPI
---
0x120: JUMPDEST 
0x121: V100 = CALLVALUE
0x122: V101 = ISZERO V100
0x123: V102 = 0x12b
0x126: JUMPI 0x12b V101
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x127
[0x127:0x12a]
---
Predecessors: [0x120]
Successors: []
---
0x127 PUSH1 0x0
0x129 DUP1
0x12a REVERT
---
0x127: V103 = 0x0
0x12a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x12b
[0x12b:0x13b]
---
Predecessors: [0x120]
Successors: [0x62c]
---
0x12b JUMPDEST
0x12c PUSH2 0x13c
0x12f PUSH1 0x4
0x131 CALLDATALOAD
0x132 PUSH1 0x24
0x134 CALLDATALOAD
0x135 PUSH1 0x44
0x137 CALLDATALOAD
0x138 PUSH2 0x62c
0x13b JUMP
---
0x12b: JUMPDEST 
0x12c: V104 = 0x13c
0x12f: V105 = 0x4
0x131: V106 = CALLDATALOAD 0x4
0x132: V107 = 0x24
0x134: V108 = CALLDATALOAD 0x24
0x135: V109 = 0x44
0x137: V110 = CALLDATALOAD 0x44
0x138: V111 = 0x62c
0x13b: JUMP 0x62c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x13c, V106, V108, V110]
Exit stack: [V12, 0x13c, V106, V108, V110]

================================

Block 0x13c
[0x13c:0x14d]
---
Predecessors: [0x65d, 0xa53, 0xa82, 0xf69]
Successors: []
---
0x13c JUMPDEST
0x13d PUSH1 0x40
0x13f MLOAD
0x140 SWAP1
0x141 DUP2
0x142 MSTORE
0x143 PUSH1 0x20
0x145 ADD
0x146 PUSH1 0x40
0x148 MLOAD
0x149 DUP1
0x14a SWAP2
0x14b SUB
0x14c SWAP1
0x14d RETURN
---
0x13c: JUMPDEST 
0x13d: V112 = 0x40
0x13f: V113 = M[0x40]
0x142: M[V113] = S0
0x143: V114 = 0x20
0x145: V115 = ADD 0x20 V113
0x146: V116 = 0x40
0x148: V117 = M[0x40]
0x14b: V118 = SUB V115 V117
0x14d: RETURN V117 V118
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x14e
[0x14e:0x154]
---
Predecessors: [0x3b]
Successors: [0x155, 0x159]
---
0x14e JUMPDEST
0x14f CALLVALUE
0x150 ISZERO
0x151 PUSH2 0x159
0x154 JUMPI
---
0x14e: JUMPDEST 
0x14f: V119 = CALLVALUE
0x150: V120 = ISZERO V119
0x151: V121 = 0x159
0x154: JUMPI 0x159 V120
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x155
[0x155:0x158]
---
Predecessors: [0x14e]
Successors: []
---
0x155 PUSH1 0x0
0x157 DUP1
0x158 REVERT
---
0x155: V122 = 0x0
0x158: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x159
[0x159:0x16c]
---
Predecessors: [0x14e]
Successors: [0x666]
---
0x159 JUMPDEST
0x15a PUSH2 0x104
0x15d PUSH1 0x1
0x15f PUSH1 0xa0
0x161 PUSH1 0x2
0x163 EXP
0x164 SUB
0x165 PUSH1 0x4
0x167 CALLDATALOAD
0x168 AND
0x169 PUSH2 0x666
0x16c JUMP
---
0x159: JUMPDEST 
0x15a: V123 = 0x104
0x15d: V124 = 0x1
0x15f: V125 = 0xa0
0x161: V126 = 0x2
0x163: V127 = EXP 0x2 0xa0
0x164: V128 = SUB 0x10000000000000000000000000000000000000000 0x1
0x165: V129 = 0x4
0x167: V130 = CALLDATALOAD 0x4
0x168: V131 = AND V130 0xffffffffffffffffffffffffffffffffffffffff
0x169: V132 = 0x666
0x16c: JUMP 0x666
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x104, V131]
Exit stack: [V12, 0x104, V131]

================================

Block 0x16d
[0x16d:0x188]
---
Predecessors: []
Successors: []
---
0x16d JUMPDEST
0x16e PUSH1 0x40
0x170 MLOAD
0x171 PUSH1 0x1
0x173 PUSH1 0xa0
0x175 PUSH1 0x2
0x177 EXP
0x178 SUB
0x179 SWAP1
0x17a SWAP2
0x17b AND
0x17c DUP2
0x17d MSTORE
0x17e PUSH1 0x20
0x180 ADD
0x181 PUSH1 0x40
0x183 MLOAD
0x184 DUP1
0x185 SWAP2
0x186 SUB
0x187 SWAP1
0x188 RETURN
---
0x16d: JUMPDEST 
0x16e: V133 = 0x40
0x170: V134 = M[0x40]
0x171: V135 = 0x1
0x173: V136 = 0xa0
0x175: V137 = 0x2
0x177: V138 = EXP 0x2 0xa0
0x178: V139 = SUB 0x10000000000000000000000000000000000000000 0x1
0x17b: V140 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x17d: M[V134] = V140
0x17e: V141 = 0x20
0x180: V142 = ADD 0x20 V134
0x181: V143 = 0x40
0x183: V144 = M[0x40]
0x186: V145 = SUB V142 V144
0x188: RETURN V144 V145
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x189
[0x189:0x1bc]
---
Predecessors: [0x46]
Successors: [0x68a]
---
0x189 JUMPDEST
0x18a PUSH2 0xe3
0x18d PUSH1 0x1
0x18f PUSH1 0xa0
0x191 PUSH1 0x2
0x193 EXP
0x194 SUB
0x195 PUSH1 0x4
0x197 CALLDATALOAD
0x198 DUP2
0x199 AND
0x19a SWAP1
0x19b PUSH1 0x24
0x19d CALLDATALOAD
0x19e DUP2
0x19f AND
0x1a0 SWAP1
0x1a1 PUSH1 0x44
0x1a3 CALLDATALOAD
0x1a4 DUP2
0x1a5 AND
0x1a6 SWAP1
0x1a7 PUSH1 0x64
0x1a9 CALLDATALOAD
0x1aa SWAP1
0x1ab PUSH1 0x84
0x1ad CALLDATALOAD
0x1ae SWAP1
0x1af PUSH1 0xa4
0x1b1 CALLDATALOAD
0x1b2 DUP2
0x1b3 AND
0x1b4 SWAP1
0x1b5 PUSH1 0xc4
0x1b7 CALLDATALOAD
0x1b8 AND
0x1b9 PUSH2 0x68a
0x1bc JUMP
---
0x189: JUMPDEST 
0x18a: V146 = 0xe3
0x18d: V147 = 0x1
0x18f: V148 = 0xa0
0x191: V149 = 0x2
0x193: V150 = EXP 0x2 0xa0
0x194: V151 = SUB 0x10000000000000000000000000000000000000000 0x1
0x195: V152 = 0x4
0x197: V153 = CALLDATALOAD 0x4
0x199: V154 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x19b: V155 = 0x24
0x19d: V156 = CALLDATALOAD 0x24
0x19f: V157 = AND 0xffffffffffffffffffffffffffffffffffffffff V156
0x1a1: V158 = 0x44
0x1a3: V159 = CALLDATALOAD 0x44
0x1a5: V160 = AND 0xffffffffffffffffffffffffffffffffffffffff V159
0x1a7: V161 = 0x64
0x1a9: V162 = CALLDATALOAD 0x64
0x1ab: V163 = 0x84
0x1ad: V164 = CALLDATALOAD 0x84
0x1af: V165 = 0xa4
0x1b1: V166 = CALLDATALOAD 0xa4
0x1b3: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff V166
0x1b5: V168 = 0xc4
0x1b7: V169 = CALLDATALOAD 0xc4
0x1b8: V170 = AND V169 0xffffffffffffffffffffffffffffffffffffffff
0x1b9: V171 = 0x68a
0x1bc: JUMP 0x68a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xe3, V154, V157, V160, V162, V164, V167, V170]
Exit stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170]

================================

Block 0x1bd
[0x1bd:0x1be]
---
Predecessors: []
Successors: []
---
0x1bd JUMPDEST
0x1be STOP
---
0x1bd: JUMPDEST 
0x1be: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1bf
[0x1bf:0x1c5]
---
Predecessors: [0x51]
Successors: [0x1c6, 0x1ca]
---
0x1bf JUMPDEST
0x1c0 CALLVALUE
0x1c1 ISZERO
0x1c2 PUSH2 0x1ca
0x1c5 JUMPI
---
0x1bf: JUMPDEST 
0x1c0: V172 = CALLVALUE
0x1c1: V173 = ISZERO V172
0x1c2: V174 = 0x1ca
0x1c5: JUMPI 0x1ca V173
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1c6
[0x1c6:0x1c9]
---
Predecessors: [0x1bf]
Successors: []
---
0x1c6 PUSH1 0x0
0x1c8 DUP1
0x1c9 REVERT
---
0x1c6: V175 = 0x0
0x1c9: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ca
[0x1ca:0x1dd]
---
Predecessors: [0x1bf]
Successors: [0x9e0]
---
0x1ca JUMPDEST
0x1cb PUSH2 0x104
0x1ce PUSH1 0x1
0x1d0 PUSH1 0xa0
0x1d2 PUSH1 0x2
0x1d4 EXP
0x1d5 SUB
0x1d6 PUSH1 0x4
0x1d8 CALLDATALOAD
0x1d9 AND
0x1da PUSH2 0x9e0
0x1dd JUMP
---
0x1ca: JUMPDEST 
0x1cb: V176 = 0x104
0x1ce: V177 = 0x1
0x1d0: V178 = 0xa0
0x1d2: V179 = 0x2
0x1d4: V180 = EXP 0x2 0xa0
0x1d5: V181 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d6: V182 = 0x4
0x1d8: V183 = CALLDATALOAD 0x4
0x1d9: V184 = AND V183 0xffffffffffffffffffffffffffffffffffffffff
0x1da: V185 = 0x9e0
0x1dd: JUMP 0x9e0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x104, V184]
Exit stack: [V12, 0x104, V184]

================================

Block 0x1de
[0x1de:0x1f9]
---
Predecessors: []
Successors: []
---
0x1de JUMPDEST
0x1df PUSH1 0x40
0x1e1 MLOAD
0x1e2 PUSH1 0x1
0x1e4 PUSH1 0xa0
0x1e6 PUSH1 0x2
0x1e8 EXP
0x1e9 SUB
0x1ea SWAP1
0x1eb SWAP2
0x1ec AND
0x1ed DUP2
0x1ee MSTORE
0x1ef PUSH1 0x20
0x1f1 ADD
0x1f2 PUSH1 0x40
0x1f4 MLOAD
0x1f5 DUP1
0x1f6 SWAP2
0x1f7 SUB
0x1f8 SWAP1
0x1f9 RETURN
---
0x1de: JUMPDEST 
0x1df: V186 = 0x40
0x1e1: V187 = M[0x40]
0x1e2: V188 = 0x1
0x1e4: V189 = 0xa0
0x1e6: V190 = 0x2
0x1e8: V191 = EXP 0x2 0xa0
0x1e9: V192 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ec: V193 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1ee: M[V187] = V193
0x1ef: V194 = 0x20
0x1f1: V195 = ADD 0x20 V187
0x1f2: V196 = 0x40
0x1f4: V197 = M[0x40]
0x1f7: V198 = SUB V195 V197
0x1f9: RETURN V197 V198
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1fa
[0x1fa:0x200]
---
Predecessors: [0x5c]
Successors: [0x201, 0x205]
---
0x1fa JUMPDEST
0x1fb CALLVALUE
0x1fc ISZERO
0x1fd PUSH2 0x205
0x200 JUMPI
---
0x1fa: JUMPDEST 
0x1fb: V199 = CALLVALUE
0x1fc: V200 = ISZERO V199
0x1fd: V201 = 0x205
0x200: JUMPI 0x205 V200
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x201
[0x201:0x204]
---
Predecessors: [0x1fa]
Successors: []
---
0x201 PUSH1 0x0
0x203 DUP1
0x204 REVERT
---
0x201: V202 = 0x0
0x204: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x205
[0x205:0x218]
---
Predecessors: [0x1fa]
Successors: [0xa04]
---
0x205 JUMPDEST
0x206 PUSH2 0x219
0x209 PUSH1 0x1
0x20b PUSH1 0xa0
0x20d PUSH1 0x2
0x20f EXP
0x210 SUB
0x211 PUSH1 0x4
0x213 CALLDATALOAD
0x214 AND
0x215 PUSH2 0xa04
0x218 JUMP
---
0x205: JUMPDEST 
0x206: V203 = 0x219
0x209: V204 = 0x1
0x20b: V205 = 0xa0
0x20d: V206 = 0x2
0x20f: V207 = EXP 0x2 0xa0
0x210: V208 = SUB 0x10000000000000000000000000000000000000000 0x1
0x211: V209 = 0x4
0x213: V210 = CALLDATALOAD 0x4
0x214: V211 = AND V210 0xffffffffffffffffffffffffffffffffffffffff
0x215: V212 = 0xa04
0x218: JUMP 0xa04
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x219, V211]
Exit stack: [V12, 0x219, V211]

================================

Block 0x219
[0x219:0x25d]
---
Predecessors: [0xa4a]
Successors: []
---
0x219 JUMPDEST
0x21a PUSH1 0x40
0x21c MLOAD
0x21d PUSH1 0x1
0x21f PUSH1 0xa0
0x221 PUSH1 0x2
0x223 EXP
0x224 SUB
0x225 SWAP7
0x226 DUP8
0x227 AND
0x228 DUP2
0x229 MSTORE
0x22a SWAP5
0x22b DUP7
0x22c AND
0x22d PUSH1 0x20
0x22f DUP7
0x230 ADD
0x231 MSTORE
0x232 SWAP3
0x233 SWAP1
0x234 SWAP5
0x235 AND
0x236 PUSH1 0x40
0x238 DUP1
0x239 DUP6
0x23a ADD
0x23b SWAP2
0x23c SWAP1
0x23d SWAP2
0x23e MSTORE
0x23f PUSH1 0x60
0x241 DUP5
0x242 ADD
0x243 SWAP2
0x244 SWAP1
0x245 SWAP2
0x246 MSTORE
0x247 PUSH1 0x80
0x249 DUP4
0x24a ADD
0x24b SWAP4
0x24c SWAP1
0x24d SWAP4
0x24e MSTORE
0x24f PUSH1 0xa0
0x251 DUP3
0x252 ADD
0x253 MSTORE
0x254 PUSH1 0xc0
0x256 ADD
0x257 SWAP1
0x258 MLOAD
0x259 DUP1
0x25a SWAP2
0x25b SUB
0x25c SWAP1
0x25d RETURN
---
0x219: JUMPDEST 
0x21a: V213 = 0x40
0x21c: V214 = M[0x40]
0x21d: V215 = 0x1
0x21f: V216 = 0xa0
0x221: V217 = 0x2
0x223: V218 = EXP 0x2 0xa0
0x224: V219 = SUB 0x10000000000000000000000000000000000000000 0x1
0x227: V220 = AND 0xffffffffffffffffffffffffffffffffffffffff V1045
0x229: M[V214] = V220
0x22c: V221 = AND 0xffffffffffffffffffffffffffffffffffffffff V1046
0x22d: V222 = 0x20
0x230: V223 = ADD V214 0x20
0x231: M[V223] = V221
0x235: V224 = AND 0xffffffffffffffffffffffffffffffffffffffff V1047
0x236: V225 = 0x40
0x23a: V226 = ADD V214 0x40
0x23e: M[V226] = V224
0x23f: V227 = 0x60
0x242: V228 = ADD V214 0x60
0x246: M[V228] = V1038
0x247: V229 = 0x80
0x24a: V230 = ADD V214 0x80
0x24e: M[V230] = V1041
0x24f: V231 = 0xa0
0x252: V232 = ADD V214 0xa0
0x253: M[V232] = V1044
0x254: V233 = 0xc0
0x256: V234 = ADD 0xc0 V214
0x258: V235 = M[0x40]
0x25b: V236 = SUB V234 V235
0x25d: RETURN V235 V236
---
Entry stack: [V12, V1045, V1046, V1047, V1038, V1041, V1044]
Stack pops: 6
Stack additions: []
Exit stack: [V12]

================================

Block 0x25e
[0x25e:0x264]
---
Predecessors: [0x67]
Successors: [0x265, 0x269]
---
0x25e JUMPDEST
0x25f CALLVALUE
0x260 ISZERO
0x261 PUSH2 0x269
0x264 JUMPI
---
0x25e: JUMPDEST 
0x25f: V237 = CALLVALUE
0x260: V238 = ISZERO V237
0x261: V239 = 0x269
0x264: JUMPI 0x269 V238
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x265
[0x265:0x268]
---
Predecessors: [0x25e]
Successors: []
---
0x265 PUSH1 0x0
0x267 DUP1
0x268 REVERT
---
0x265: V240 = 0x0
0x268: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x269
[0x269:0x27c]
---
Predecessors: [0x25e]
Successors: [0xa53]
---
0x269 JUMPDEST
0x26a PUSH2 0x13c
0x26d PUSH1 0x1
0x26f PUSH1 0xa0
0x271 PUSH1 0x2
0x273 EXP
0x274 SUB
0x275 PUSH1 0x4
0x277 CALLDATALOAD
0x278 AND
0x279 PUSH2 0xa53
0x27c JUMP
---
0x269: JUMPDEST 
0x26a: V241 = 0x13c
0x26d: V242 = 0x1
0x26f: V243 = 0xa0
0x271: V244 = 0x2
0x273: V245 = EXP 0x2 0xa0
0x274: V246 = SUB 0x10000000000000000000000000000000000000000 0x1
0x275: V247 = 0x4
0x277: V248 = CALLDATALOAD 0x4
0x278: V249 = AND V248 0xffffffffffffffffffffffffffffffffffffffff
0x279: V250 = 0xa53
0x27c: JUMP 0xa53
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x13c, V249]
Exit stack: [V12, 0x13c, V249]

================================

Block 0x27d
[0x27d:0x28e]
---
Predecessors: []
Successors: []
---
0x27d JUMPDEST
0x27e PUSH1 0x40
0x280 MLOAD
0x281 SWAP1
0x282 DUP2
0x283 MSTORE
0x284 PUSH1 0x20
0x286 ADD
0x287 PUSH1 0x40
0x289 MLOAD
0x28a DUP1
0x28b SWAP2
0x28c SUB
0x28d SWAP1
0x28e RETURN
---
0x27d: JUMPDEST 
0x27e: V251 = 0x40
0x280: V252 = M[0x40]
0x283: M[V252] = S0
0x284: V253 = 0x20
0x286: V254 = ADD 0x20 V252
0x287: V255 = 0x40
0x289: V256 = M[0x40]
0x28c: V257 = SUB V254 V256
0x28e: RETURN V256 V257
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x28f
[0x28f:0x295]
---
Predecessors: [0x72]
Successors: [0x296, 0x29a]
---
0x28f JUMPDEST
0x290 CALLVALUE
0x291 ISZERO
0x292 PUSH2 0x29a
0x295 JUMPI
---
0x28f: JUMPDEST 
0x290: V258 = CALLVALUE
0x291: V259 = ISZERO V258
0x292: V260 = 0x29a
0x295: JUMPI 0x29a V259
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x296
[0x296:0x299]
---
Predecessors: [0x28f]
Successors: []
---
0x296 PUSH1 0x0
0x298 DUP1
0x299 REVERT
---
0x296: V261 = 0x0
0x299: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x29a
[0x29a:0x2ad]
---
Predecessors: [0x28f]
Successors: [0xa65]
---
0x29a JUMPDEST
0x29b PUSH2 0x13c
0x29e PUSH1 0x1
0x2a0 PUSH1 0xa0
0x2a2 PUSH1 0x2
0x2a4 EXP
0x2a5 SUB
0x2a6 PUSH1 0x4
0x2a8 CALLDATALOAD
0x2a9 AND
0x2aa PUSH2 0xa65
0x2ad JUMP
---
0x29a: JUMPDEST 
0x29b: V262 = 0x13c
0x29e: V263 = 0x1
0x2a0: V264 = 0xa0
0x2a2: V265 = 0x2
0x2a4: V266 = EXP 0x2 0xa0
0x2a5: V267 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a6: V268 = 0x4
0x2a8: V269 = CALLDATALOAD 0x4
0x2a9: V270 = AND V269 0xffffffffffffffffffffffffffffffffffffffff
0x2aa: V271 = 0xa65
0x2ad: JUMP 0xa65
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x13c, V270]
Exit stack: [V12, 0x13c, V270]

================================

Block 0x2ae
[0x2ae:0x2bf]
---
Predecessors: []
Successors: []
---
0x2ae JUMPDEST
0x2af PUSH1 0x40
0x2b1 MLOAD
0x2b2 SWAP1
0x2b3 DUP2
0x2b4 MSTORE
0x2b5 PUSH1 0x20
0x2b7 ADD
0x2b8 PUSH1 0x40
0x2ba MLOAD
0x2bb DUP1
0x2bc SWAP2
0x2bd SUB
0x2be SWAP1
0x2bf RETURN
---
0x2ae: JUMPDEST 
0x2af: V272 = 0x40
0x2b1: V273 = M[0x40]
0x2b4: M[V273] = S0
0x2b5: V274 = 0x20
0x2b7: V275 = ADD 0x20 V273
0x2b8: V276 = 0x40
0x2ba: V277 = M[0x40]
0x2bd: V278 = SUB V275 V277
0x2bf: RETURN V277 V278
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2c0
[0x2c0:0x2c6]
---
Predecessors: [0x7d]
Successors: [0x2c7, 0x2cb]
---
0x2c0 JUMPDEST
0x2c1 CALLVALUE
0x2c2 ISZERO
0x2c3 PUSH2 0x2cb
0x2c6 JUMPI
---
0x2c0: JUMPDEST 
0x2c1: V279 = CALLVALUE
0x2c2: V280 = ISZERO V279
0x2c3: V281 = 0x2cb
0x2c6: JUMPI 0x2cb V280
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c7
[0x2c7:0x2ca]
---
Predecessors: [0x2c0]
Successors: []
---
0x2c7 PUSH1 0x0
0x2c9 DUP1
0x2ca REVERT
---
0x2c7: V282 = 0x0
0x2ca: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2cb
[0x2cb:0x2e1]
---
Predecessors: [0x2c0]
Successors: [0xa87]
---
0x2cb JUMPDEST
0x2cc PUSH2 0xe3
0x2cf PUSH1 0x1
0x2d1 PUSH1 0xa0
0x2d3 PUSH1 0x2
0x2d5 EXP
0x2d6 SUB
0x2d7 PUSH1 0x4
0x2d9 CALLDATALOAD
0x2da AND
0x2db PUSH1 0x24
0x2dd CALLDATALOAD
0x2de PUSH2 0xa87
0x2e1 JUMP
---
0x2cb: JUMPDEST 
0x2cc: V283 = 0xe3
0x2cf: V284 = 0x1
0x2d1: V285 = 0xa0
0x2d3: V286 = 0x2
0x2d5: V287 = EXP 0x2 0xa0
0x2d6: V288 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d7: V289 = 0x4
0x2d9: V290 = CALLDATALOAD 0x4
0x2da: V291 = AND V290 0xffffffffffffffffffffffffffffffffffffffff
0x2db: V292 = 0x24
0x2dd: V293 = CALLDATALOAD 0x24
0x2de: V294 = 0xa87
0x2e1: JUMP 0xa87
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xe3, V291, V293]
Exit stack: [V12, 0xe3, V291, V293]

================================

Block 0x2e2
[0x2e2:0x2e3]
---
Predecessors: []
Successors: []
---
0x2e2 JUMPDEST
0x2e3 STOP
---
0x2e2: JUMPDEST 
0x2e3: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2e4
[0x2e4:0x2ea]
---
Predecessors: [0x88]
Successors: [0x2eb, 0x2ef]
---
0x2e4 JUMPDEST
0x2e5 CALLVALUE
0x2e6 ISZERO
0x2e7 PUSH2 0x2ef
0x2ea JUMPI
---
0x2e4: JUMPDEST 
0x2e5: V295 = CALLVALUE
0x2e6: V296 = ISZERO V295
0x2e7: V297 = 0x2ef
0x2ea: JUMPI 0x2ef V296
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2eb
[0x2eb:0x2ee]
---
Predecessors: [0x2e4]
Successors: []
---
0x2eb PUSH1 0x0
0x2ed DUP1
0x2ee REVERT
---
0x2eb: V298 = 0x0
0x2ee: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ef
[0x2ef:0x30b]
---
Predecessors: [0x2e4]
Successors: [0xad4]
---
0x2ef JUMPDEST
0x2f0 PUSH2 0x30c
0x2f3 PUSH1 0x1
0x2f5 PUSH1 0xa0
0x2f7 PUSH1 0x2
0x2f9 EXP
0x2fa SUB
0x2fb PUSH1 0x4
0x2fd CALLDATALOAD
0x2fe DUP2
0x2ff AND
0x300 SWAP1
0x301 PUSH1 0x24
0x303 CALLDATALOAD
0x304 AND
0x305 PUSH1 0x44
0x307 CALLDATALOAD
0x308 PUSH2 0xad4
0x30b JUMP
---
0x2ef: JUMPDEST 
0x2f0: V299 = 0x30c
0x2f3: V300 = 0x1
0x2f5: V301 = 0xa0
0x2f7: V302 = 0x2
0x2f9: V303 = EXP 0x2 0xa0
0x2fa: V304 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2fb: V305 = 0x4
0x2fd: V306 = CALLDATALOAD 0x4
0x2ff: V307 = AND 0xffffffffffffffffffffffffffffffffffffffff V306
0x301: V308 = 0x24
0x303: V309 = CALLDATALOAD 0x24
0x304: V310 = AND V309 0xffffffffffffffffffffffffffffffffffffffff
0x305: V311 = 0x44
0x307: V312 = CALLDATALOAD 0x44
0x308: V313 = 0xad4
0x30b: JUMP 0xad4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x30c, V307, V310, V312]
Exit stack: [V12, 0x30c, V307, V310, V312]

================================

Block 0x30c
[0x30c:0x31f]
---
Predecessors: [0x65d, 0xe29]
Successors: []
---
0x30c JUMPDEST
0x30d PUSH1 0x40
0x30f MLOAD
0x310 SWAP1
0x311 ISZERO
0x312 ISZERO
0x313 DUP2
0x314 MSTORE
0x315 PUSH1 0x20
0x317 ADD
0x318 PUSH1 0x40
0x31a MLOAD
0x31b DUP1
0x31c SWAP2
0x31d SUB
0x31e SWAP1
0x31f RETURN
---
0x30c: JUMPDEST 
0x30d: V314 = 0x40
0x30f: V315 = M[0x40]
0x311: V316 = ISZERO S0
0x312: V317 = ISZERO V316
0x314: M[V315] = V317
0x315: V318 = 0x20
0x317: V319 = ADD 0x20 V315
0x318: V320 = 0x40
0x31a: V321 = M[0x40]
0x31d: V322 = SUB V319 V321
0x31f: RETURN V321 V322
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x320
[0x320:0x326]
---
Predecessors: [0x93]
Successors: [0x327, 0x32b]
---
0x320 JUMPDEST
0x321 CALLVALUE
0x322 ISZERO
0x323 PUSH2 0x32b
0x326 JUMPI
---
0x320: JUMPDEST 
0x321: V323 = CALLVALUE
0x322: V324 = ISZERO V323
0x323: V325 = 0x32b
0x326: JUMPI 0x32b V324
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x327
[0x327:0x32a]
---
Predecessors: [0x320]
Successors: []
---
0x327 PUSH1 0x0
0x329 DUP1
0x32a REVERT
---
0x327: V326 = 0x0
0x32a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x32b
[0x32b:0x341]
---
Predecessors: [0x320]
Successors: [0xe32]
---
0x32b JUMPDEST
0x32c PUSH2 0xe3
0x32f PUSH1 0x1
0x331 PUSH1 0xa0
0x333 PUSH1 0x2
0x335 EXP
0x336 SUB
0x337 PUSH1 0x4
0x339 CALLDATALOAD
0x33a AND
0x33b PUSH1 0x24
0x33d CALLDATALOAD
0x33e PUSH2 0xe32
0x341 JUMP
---
0x32b: JUMPDEST 
0x32c: V327 = 0xe3
0x32f: V328 = 0x1
0x331: V329 = 0xa0
0x333: V330 = 0x2
0x335: V331 = EXP 0x2 0xa0
0x336: V332 = SUB 0x10000000000000000000000000000000000000000 0x1
0x337: V333 = 0x4
0x339: V334 = CALLDATALOAD 0x4
0x33a: V335 = AND V334 0xffffffffffffffffffffffffffffffffffffffff
0x33b: V336 = 0x24
0x33d: V337 = CALLDATALOAD 0x24
0x33e: V338 = 0xe32
0x341: JUMP 0xe32
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xe3, V335, V337]
Exit stack: [V12, 0xe3, V335, V337]

================================

Block 0x342
[0x342:0x343]
---
Predecessors: []
Successors: []
---
0x342 JUMPDEST
0x343 STOP
---
0x342: JUMPDEST 
0x343: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x344
[0x344:0x34a]
---
Predecessors: [0x9e]
Successors: [0x34b, 0x34f]
---
0x344 JUMPDEST
0x345 CALLVALUE
0x346 ISZERO
0x347 PUSH2 0x34f
0x34a JUMPI
---
0x344: JUMPDEST 
0x345: V339 = CALLVALUE
0x346: V340 = ISZERO V339
0x347: V341 = 0x34f
0x34a: JUMPI 0x34f V340
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x34b
[0x34b:0x34e]
---
Predecessors: [0x344]
Successors: []
---
0x34b PUSH1 0x0
0x34d DUP1
0x34e REVERT
---
0x34b: V342 = 0x0
0x34e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x34f
[0x34f:0x362]
---
Predecessors: [0x344]
Successors: [0xf4c]
---
0x34f JUMPDEST
0x350 PUSH2 0x13c
0x353 PUSH1 0x1
0x355 PUSH1 0xa0
0x357 PUSH1 0x2
0x359 EXP
0x35a SUB
0x35b PUSH1 0x4
0x35d CALLDATALOAD
0x35e AND
0x35f PUSH2 0xf4c
0x362 JUMP
---
0x34f: JUMPDEST 
0x350: V343 = 0x13c
0x353: V344 = 0x1
0x355: V345 = 0xa0
0x357: V346 = 0x2
0x359: V347 = EXP 0x2 0xa0
0x35a: V348 = SUB 0x10000000000000000000000000000000000000000 0x1
0x35b: V349 = 0x4
0x35d: V350 = CALLDATALOAD 0x4
0x35e: V351 = AND V350 0xffffffffffffffffffffffffffffffffffffffff
0x35f: V352 = 0xf4c
0x362: JUMP 0xf4c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x13c, V351]
Exit stack: [V12, 0x13c, V351]

================================

Block 0x363
[0x363:0x374]
---
Predecessors: []
Successors: []
---
0x363 JUMPDEST
0x364 PUSH1 0x40
0x366 MLOAD
0x367 SWAP1
0x368 DUP2
0x369 MSTORE
0x36a PUSH1 0x20
0x36c ADD
0x36d PUSH1 0x40
0x36f MLOAD
0x370 DUP1
0x371 SWAP2
0x372 SUB
0x373 SWAP1
0x374 RETURN
---
0x363: JUMPDEST 
0x364: V353 = 0x40
0x366: V354 = M[0x40]
0x369: M[V354] = S0
0x36a: V355 = 0x20
0x36c: V356 = ADD 0x20 V354
0x36d: V357 = 0x40
0x36f: V358 = M[0x40]
0x372: V359 = SUB V356 V358
0x374: RETURN V358 V359
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x375
[0x375:0x37b]
---
Predecessors: [0xa9]
Successors: [0x37c, 0x380]
---
0x375 JUMPDEST
0x376 CALLVALUE
0x377 ISZERO
0x378 PUSH2 0x380
0x37b JUMPI
---
0x375: JUMPDEST 
0x376: V360 = CALLVALUE
0x377: V361 = ISZERO V360
0x378: V362 = 0x380
0x37b: JUMPI 0x380 V361
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x37c
[0x37c:0x37f]
---
Predecessors: [0x375]
Successors: []
---
0x37c PUSH1 0x0
0x37e DUP1
0x37f REVERT
---
0x37c: V363 = 0x0
0x37f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x380
[0x380:0x393]
---
Predecessors: [0x375]
Successors: [0xf6e]
---
0x380 JUMPDEST
0x381 PUSH2 0x394
0x384 PUSH1 0x1
0x386 PUSH1 0xa0
0x388 PUSH1 0x2
0x38a EXP
0x38b SUB
0x38c PUSH1 0x4
0x38e CALLDATALOAD
0x38f AND
0x390 PUSH2 0xf6e
0x393 JUMP
---
0x380: JUMPDEST 
0x381: V364 = 0x394
0x384: V365 = 0x1
0x386: V366 = 0xa0
0x388: V367 = 0x2
0x38a: V368 = EXP 0x2 0xa0
0x38b: V369 = SUB 0x10000000000000000000000000000000000000000 0x1
0x38c: V370 = 0x4
0x38e: V371 = CALLDATALOAD 0x4
0x38f: V372 = AND V371 0xffffffffffffffffffffffffffffffffffffffff
0x390: V373 = 0xf6e
0x393: JUMP 0xf6e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x394, V372]
Exit stack: [V12, 0x394, V372]

================================

Block 0x394
[0x394:0x3e9]
---
Predecessors: [0xf6e]
Successors: []
---
0x394 JUMPDEST
0x395 PUSH1 0x40
0x397 MLOAD
0x398 PUSH1 0x1
0x39a PUSH1 0xa0
0x39c PUSH1 0x2
0x39e EXP
0x39f SUB
0x3a0 SWAP9
0x3a1 DUP10
0x3a2 AND
0x3a3 DUP2
0x3a4 MSTORE
0x3a5 SWAP7
0x3a6 DUP9
0x3a7 AND
0x3a8 PUSH1 0x20
0x3aa DUP9
0x3ab ADD
0x3ac MSTORE
0x3ad SWAP5
0x3ae DUP8
0x3af AND
0x3b0 PUSH1 0x40
0x3b2 DUP1
0x3b3 DUP9
0x3b4 ADD
0x3b5 SWAP2
0x3b6 SWAP1
0x3b7 SWAP2
0x3b8 MSTORE
0x3b9 SWAP4
0x3ba DUP8
0x3bb AND
0x3bc PUSH1 0x60
0x3be DUP8
0x3bf ADD
0x3c0 MSTORE
0x3c1 SWAP2
0x3c2 SWAP1
0x3c3 SWAP6
0x3c4 AND
0x3c5 PUSH1 0x80
0x3c7 DUP6
0x3c8 ADD
0x3c9 MSTORE
0x3ca PUSH1 0xa0
0x3cc DUP5
0x3cd ADD
0x3ce SWAP5
0x3cf SWAP1
0x3d0 SWAP5
0x3d1 MSTORE
0x3d2 PUSH1 0xc0
0x3d4 DUP4
0x3d5 ADD
0x3d6 SWAP4
0x3d7 SWAP1
0x3d8 SWAP4
0x3d9 MSTORE
0x3da PUSH1 0xe0
0x3dc DUP3
0x3dd ADD
0x3de MSTORE
0x3df PUSH2 0x100
0x3e2 ADD
0x3e3 SWAP1
0x3e4 MLOAD
0x3e5 DUP1
0x3e6 SWAP2
0x3e7 SUB
0x3e8 SWAP1
0x3e9 RETURN
---
0x394: JUMPDEST 
0x395: V374 = 0x40
0x397: V375 = M[0x40]
0x398: V376 = 0x1
0x39a: V377 = 0xa0
0x39c: V378 = 0x2
0x39e: V379 = EXP 0x2 0xa0
0x39f: V380 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a2: V381 = AND 0xffffffffffffffffffffffffffffffffffffffff V1543
0x3a4: M[V375] = V381
0x3a7: V382 = AND 0xffffffffffffffffffffffffffffffffffffffff V1544
0x3a8: V383 = 0x20
0x3ab: V384 = ADD V375 0x20
0x3ac: M[V384] = V382
0x3af: V385 = AND 0xffffffffffffffffffffffffffffffffffffffff V1545
0x3b0: V386 = 0x40
0x3b4: V387 = ADD V375 0x40
0x3b8: M[V387] = V385
0x3bb: V388 = AND 0xffffffffffffffffffffffffffffffffffffffff V1546
0x3bc: V389 = 0x60
0x3bf: V390 = ADD V375 0x60
0x3c0: M[V390] = V388
0x3c4: V391 = AND 0xffffffffffffffffffffffffffffffffffffffff V1547
0x3c5: V392 = 0x80
0x3c8: V393 = ADD V375 0x80
0x3c9: M[V393] = V391
0x3ca: V394 = 0xa0
0x3cd: V395 = ADD V375 0xa0
0x3d1: M[V395] = V1531
0x3d2: V396 = 0xc0
0x3d5: V397 = ADD V375 0xc0
0x3d9: M[V397] = V1534
0x3da: V398 = 0xe0
0x3dd: V399 = ADD V375 0xe0
0x3de: M[V399] = V1537
0x3df: V400 = 0x100
0x3e2: V401 = ADD 0x100 V375
0x3e4: V402 = M[0x40]
0x3e7: V403 = SUB V401 V402
0x3e9: RETURN V402 V403
---
Entry stack: [V12, 0x394, V1543, V1544, V1545, V1546, V1547, V1531, V1534, V1537]
Stack pops: 8
Stack additions: []
Exit stack: [V12, 0x394]

================================

Block 0x3ea
[0x3ea:0x3f0]
---
Predecessors: [0xb4]
Successors: [0x3f1, 0x3f5]
---
0x3ea JUMPDEST
0x3eb CALLVALUE
0x3ec ISZERO
0x3ed PUSH2 0x3f5
0x3f0 JUMPI
---
0x3ea: JUMPDEST 
0x3eb: V404 = CALLVALUE
0x3ec: V405 = ISZERO V404
0x3ed: V406 = 0x3f5
0x3f0: JUMPI 0x3f5 V405
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3f1
[0x3f1:0x3f4]
---
Predecessors: [0x3ea]
Successors: []
---
0x3f1 PUSH1 0x0
0x3f3 DUP1
0x3f4 REVERT
---
0x3f1: V407 = 0x0
0x3f4: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3f5
[0x3f5:0x3fc]
---
Predecessors: [0x3ea]
Successors: [0xfc6]
---
0x3f5 JUMPDEST
0x3f6 PUSH2 0x104
0x3f9 PUSH2 0xfc6
0x3fc JUMP
---
0x3f5: JUMPDEST 
0x3f6: V408 = 0x104
0x3f9: V409 = 0xfc6
0x3fc: JUMP 0xfc6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x104]
Exit stack: [V12, 0x104]

================================

Block 0x3fd
[0x3fd:0x418]
---
Predecessors: []
Successors: []
---
0x3fd JUMPDEST
0x3fe PUSH1 0x40
0x400 MLOAD
0x401 PUSH1 0x1
0x403 PUSH1 0xa0
0x405 PUSH1 0x2
0x407 EXP
0x408 SUB
0x409 SWAP1
0x40a SWAP2
0x40b AND
0x40c DUP2
0x40d MSTORE
0x40e PUSH1 0x20
0x410 ADD
0x411 PUSH1 0x40
0x413 MLOAD
0x414 DUP1
0x415 SWAP2
0x416 SUB
0x417 SWAP1
0x418 RETURN
---
0x3fd: JUMPDEST 
0x3fe: V410 = 0x40
0x400: V411 = M[0x40]
0x401: V412 = 0x1
0x403: V413 = 0xa0
0x405: V414 = 0x2
0x407: V415 = EXP 0x2 0xa0
0x408: V416 = SUB 0x10000000000000000000000000000000000000000 0x1
0x40b: V417 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x40d: M[V411] = V417
0x40e: V418 = 0x20
0x410: V419 = ADD 0x20 V411
0x411: V420 = 0x40
0x413: V421 = M[0x40]
0x416: V422 = SUB V419 V421
0x418: RETURN V421 V422
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x419
[0x419:0x43e]
---
Predecessors: [0xcf]
Successors: [0x43f, 0x463]
---
0x419 JUMPDEST
0x41a PUSH1 0x1
0x41c PUSH1 0xa0
0x41e PUSH1 0x2
0x420 EXP
0x421 SUB
0x422 DUP1
0x423 DUP3
0x424 AND
0x425 PUSH1 0x0
0x427 SWAP1
0x428 DUP2
0x429 MSTORE
0x42a PUSH1 0x1
0x42c PUSH1 0x20
0x42e MSTORE
0x42f PUSH1 0x40
0x431 SWAP1
0x432 SHA3
0x433 SLOAD
0x434 CALLER
0x435 DUP3
0x436 AND
0x437 SWAP2
0x438 AND
0x439 EQ
0x43a DUP1
0x43b PUSH2 0x463
0x43e JUMPI
---
0x419: JUMPDEST 
0x41a: V423 = 0x1
0x41c: V424 = 0xa0
0x41e: V425 = 0x2
0x420: V426 = EXP 0x2 0xa0
0x421: V427 = SUB 0x10000000000000000000000000000000000000000 0x1
0x424: V428 = AND V71 0xffffffffffffffffffffffffffffffffffffffff
0x425: V429 = 0x0
0x429: M[0x0] = V428
0x42a: V430 = 0x1
0x42c: V431 = 0x20
0x42e: M[0x20] = 0x1
0x42f: V432 = 0x40
0x432: V433 = SHA3 0x0 0x40
0x433: V434 = S[V433]
0x434: V435 = CALLER
0x436: V436 = AND 0xffffffffffffffffffffffffffffffffffffffff V435
0x438: V437 = AND 0xffffffffffffffffffffffffffffffffffffffff V434
0x439: V438 = EQ V437 V436
0x43b: V439 = 0x463
0x43e: JUMPI 0x463 V438
---
Entry stack: [V12, 0xe3, V71]
Stack pops: 1
Stack additions: [S0, V438]
Exit stack: [V12, 0xe3, V71, V438]

================================

Block 0x43f
[0x43f:0x462]
---
Predecessors: [0x419]
Successors: [0x463]
---
0x43f POP
0x440 PUSH1 0x1
0x442 PUSH1 0xa0
0x444 PUSH1 0x2
0x446 EXP
0x447 SUB
0x448 DUP1
0x449 DUP3
0x44a AND
0x44b PUSH1 0x0
0x44d SWAP1
0x44e DUP2
0x44f MSTORE
0x450 PUSH1 0x1
0x452 PUSH1 0x20
0x454 MSTORE
0x455 PUSH1 0x40
0x457 SWAP1
0x458 SHA3
0x459 PUSH1 0x4
0x45b ADD
0x45c SLOAD
0x45d ORIGIN
0x45e DUP3
0x45f AND
0x460 SWAP2
0x461 AND
0x462 EQ
---
0x440: V440 = 0x1
0x442: V441 = 0xa0
0x444: V442 = 0x2
0x446: V443 = EXP 0x2 0xa0
0x447: V444 = SUB 0x10000000000000000000000000000000000000000 0x1
0x44a: V445 = AND V71 0xffffffffffffffffffffffffffffffffffffffff
0x44b: V446 = 0x0
0x44f: M[0x0] = V445
0x450: V447 = 0x1
0x452: V448 = 0x20
0x454: M[0x20] = 0x1
0x455: V449 = 0x40
0x458: V450 = SHA3 0x0 0x40
0x459: V451 = 0x4
0x45b: V452 = ADD 0x4 V450
0x45c: V453 = S[V452]
0x45d: V454 = ORIGIN
0x45f: V455 = AND 0xffffffffffffffffffffffffffffffffffffffff V454
0x461: V456 = AND 0xffffffffffffffffffffffffffffffffffffffff V453
0x462: V457 = EQ V456 V455
---
Entry stack: [V12, 0xe3, V71, V438]
Stack pops: 2
Stack additions: [S1, V457]
Exit stack: [V12, 0xe3, V71, V457]

================================

Block 0x463
[0x463:0x468]
---
Predecessors: [0x419, 0x43f]
Successors: [0x469, 0x604]
---
0x463 JUMPDEST
0x464 ISZERO
0x465 PUSH2 0x604
0x468 JUMPI
---
0x463: JUMPDEST 
0x464: V458 = ISZERO S0
0x465: V459 = 0x604
0x468: JUMPI 0x604 V458
---
Entry stack: [V12, 0xe3, V71, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xe3, V71]

================================

Block 0x469
[0x469:0x48c]
---
Predecessors: [0x463]
Successors: [0x48d, 0x4ad]
---
0x469 PUSH1 0x1
0x46b PUSH1 0xa0
0x46d PUSH1 0x2
0x46f EXP
0x470 SUB
0x471 DUP1
0x472 DUP3
0x473 AND
0x474 PUSH1 0x0
0x476 SWAP1
0x477 DUP2
0x478 MSTORE
0x479 PUSH1 0x1
0x47b PUSH1 0x20
0x47d MSTORE
0x47e PUSH1 0x40
0x480 SWAP1
0x481 SHA3
0x482 PUSH1 0x2
0x484 ADD
0x485 SLOAD
0x486 AND
0x487 ISZERO
0x488 DUP1
0x489 PUSH2 0x4ad
0x48c JUMPI
---
0x469: V460 = 0x1
0x46b: V461 = 0xa0
0x46d: V462 = 0x2
0x46f: V463 = EXP 0x2 0xa0
0x470: V464 = SUB 0x10000000000000000000000000000000000000000 0x1
0x473: V465 = AND V71 0xffffffffffffffffffffffffffffffffffffffff
0x474: V466 = 0x0
0x478: M[0x0] = V465
0x479: V467 = 0x1
0x47b: V468 = 0x20
0x47d: M[0x20] = 0x1
0x47e: V469 = 0x40
0x481: V470 = SHA3 0x0 0x40
0x482: V471 = 0x2
0x484: V472 = ADD 0x2 V470
0x485: V473 = S[V472]
0x486: V474 = AND V473 0xffffffffffffffffffffffffffffffffffffffff
0x487: V475 = ISZERO V474
0x489: V476 = 0x4ad
0x48c: JUMPI 0x4ad V475
---
Entry stack: [V12, 0xe3, V71]
Stack pops: 1
Stack additions: [S0, V475]
Exit stack: [V12, 0xe3, V71, V475]

================================

Block 0x48d
[0x48d:0x4ac]
---
Predecessors: [0x469]
Successors: [0x4ad]
---
0x48d POP
0x48e PUSH1 0x1
0x490 PUSH1 0xa0
0x492 PUSH1 0x2
0x494 EXP
0x495 SUB
0x496 DUP2
0x497 DUP2
0x498 AND
0x499 PUSH1 0x0
0x49b SWAP1
0x49c DUP2
0x49d MSTORE
0x49e PUSH1 0x1
0x4a0 PUSH1 0x20
0x4a2 MSTORE
0x4a3 PUSH1 0x40
0x4a5 SWAP1
0x4a6 SHA3
0x4a7 PUSH1 0x2
0x4a9 ADD
0x4aa SLOAD
0x4ab AND
0x4ac ISZERO
---
0x48e: V477 = 0x1
0x490: V478 = 0xa0
0x492: V479 = 0x2
0x494: V480 = EXP 0x2 0xa0
0x495: V481 = SUB 0x10000000000000000000000000000000000000000 0x1
0x498: V482 = AND 0xffffffffffffffffffffffffffffffffffffffff V71
0x499: V483 = 0x0
0x49d: M[0x0] = V482
0x49e: V484 = 0x1
0x4a0: V485 = 0x20
0x4a2: M[0x20] = 0x1
0x4a3: V486 = 0x40
0x4a6: V487 = SHA3 0x0 0x40
0x4a7: V488 = 0x2
0x4a9: V489 = ADD 0x2 V487
0x4aa: V490 = S[V489]
0x4ab: V491 = AND V490 0xffffffffffffffffffffffffffffffffffffffff
0x4ac: V492 = ISZERO V491
---
Entry stack: [V12, 0xe3, V71, V475]
Stack pops: 2
Stack additions: [S1, V492]
Exit stack: [V12, 0xe3, V71, V492]

================================

Block 0x4ad
[0x4ad:0x4b2]
---
Predecessors: [0x469, 0x48d]
Successors: [0x4b3, 0x528]
---
0x4ad JUMPDEST
0x4ae ISZERO
0x4af PUSH2 0x528
0x4b2 JUMPI
---
0x4ad: JUMPDEST 
0x4ae: V493 = ISZERO S0
0x4af: V494 = 0x528
0x4b2: JUMPI 0x528 V493
---
Entry stack: [V12, 0xe3, V71, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xe3, V71]

================================

Block 0x4b3
[0x4b3:0x4d4]
---
Predecessors: [0x4ad]
Successors: [0x4d5, 0x522]
---
0x4b3 PUSH1 0x1
0x4b5 PUSH1 0xa0
0x4b7 PUSH1 0x2
0x4b9 EXP
0x4ba SUB
0x4bb DUP2
0x4bc AND
0x4bd PUSH1 0x0
0x4bf SWAP1
0x4c0 DUP2
0x4c1 MSTORE
0x4c2 PUSH1 0x1
0x4c4 PUSH1 0x20
0x4c6 MSTORE
0x4c7 PUSH1 0x40
0x4c9 DUP2
0x4ca SHA3
0x4cb PUSH1 0x7
0x4cd ADD
0x4ce SLOAD
0x4cf GT
0x4d0 ISZERO
0x4d1 PUSH2 0x522
0x4d4 JUMPI
---
0x4b3: V495 = 0x1
0x4b5: V496 = 0xa0
0x4b7: V497 = 0x2
0x4b9: V498 = EXP 0x2 0xa0
0x4ba: V499 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4bc: V500 = AND V71 0xffffffffffffffffffffffffffffffffffffffff
0x4bd: V501 = 0x0
0x4c1: M[0x0] = V500
0x4c2: V502 = 0x1
0x4c4: V503 = 0x20
0x4c6: M[0x20] = 0x1
0x4c7: V504 = 0x40
0x4ca: V505 = SHA3 0x0 0x40
0x4cb: V506 = 0x7
0x4cd: V507 = ADD 0x7 V505
0x4ce: V508 = S[V507]
0x4cf: V509 = GT V508 0x0
0x4d0: V510 = ISZERO V509
0x4d1: V511 = 0x522
0x4d4: JUMPI 0x522 V510
---
Entry stack: [V12, 0xe3, V71]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xe3, V71]

================================

Block 0x4d5
[0x4d5:0x51d]
---
Predecessors: [0x4b3]
Successors: [0x51e, 0x522]
---
0x4d5 PUSH1 0x1
0x4d7 PUSH1 0xa0
0x4d9 PUSH1 0x2
0x4db EXP
0x4dc SUB
0x4dd DUP1
0x4de DUP3
0x4df AND
0x4e0 PUSH1 0x0
0x4e2 SWAP1
0x4e3 DUP2
0x4e4 MSTORE
0x4e5 PUSH1 0x1
0x4e7 PUSH1 0x20
0x4e9 MSTORE
0x4ea PUSH1 0x40
0x4ec SWAP1
0x4ed DUP2
0x4ee SWAP1
0x4ef SHA3
0x4f0 PUSH1 0x4
0x4f2 DUP2
0x4f3 ADD
0x4f4 SLOAD
0x4f5 PUSH1 0x7
0x4f7 SWAP1
0x4f8 SWAP2
0x4f9 ADD
0x4fa SLOAD
0x4fb SWAP3
0x4fc AND
0x4fd SWAP2
0x4fe DUP1
0x4ff ISZERO
0x500 PUSH2 0x8fc
0x503 MUL
0x504 SWAP2
0x505 MLOAD
0x506 PUSH1 0x0
0x508 PUSH1 0x40
0x50a MLOAD
0x50b DUP1
0x50c DUP4
0x50d SUB
0x50e DUP2
0x50f DUP6
0x510 DUP9
0x511 DUP9
0x512 CALL
0x513 SWAP4
0x514 POP
0x515 POP
0x516 POP
0x517 POP
0x518 ISZERO
0x519 ISZERO
0x51a PUSH2 0x522
0x51d JUMPI
---
0x4d5: V512 = 0x1
0x4d7: V513 = 0xa0
0x4d9: V514 = 0x2
0x4db: V515 = EXP 0x2 0xa0
0x4dc: V516 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4df: V517 = AND V71 0xffffffffffffffffffffffffffffffffffffffff
0x4e0: V518 = 0x0
0x4e4: M[0x0] = V517
0x4e5: V519 = 0x1
0x4e7: V520 = 0x20
0x4e9: M[0x20] = 0x1
0x4ea: V521 = 0x40
0x4ef: V522 = SHA3 0x0 0x40
0x4f0: V523 = 0x4
0x4f3: V524 = ADD V522 0x4
0x4f4: V525 = S[V524]
0x4f5: V526 = 0x7
0x4f9: V527 = ADD V522 0x7
0x4fa: V528 = S[V527]
0x4fc: V529 = AND 0xffffffffffffffffffffffffffffffffffffffff V525
0x4ff: V530 = ISZERO V528
0x500: V531 = 0x8fc
0x503: V532 = MUL 0x8fc V530
0x505: V533 = M[0x40]
0x506: V534 = 0x0
0x508: V535 = 0x40
0x50a: V536 = M[0x40]
0x50d: V537 = SUB V533 V536
0x512: V538 = CALL V532 V529 V528 V536 V537 V536 0x0
0x518: V539 = ISZERO V538
0x519: V540 = ISZERO V539
0x51a: V541 = 0x522
0x51d: JUMPI 0x522 V540
---
Entry stack: [V12, 0xe3, V71]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xe3, V71]

================================

Block 0x51e
[0x51e:0x521]
---
Predecessors: [0x4d5]
Successors: []
---
0x51e PUSH1 0x0
0x520 DUP1
0x521 REVERT
---
0x51e: V542 = 0x0
0x521: REVERT 0x0 0x0
---
Entry stack: [V12, 0xe3, V71]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe3, V71]

================================

Block 0x522
[0x522:0x522]
---
Predecessors: [0x4b3, 0x4d5]
Successors: [0x523]
---
0x522 JUMPDEST
---
0x522: JUMPDEST 
---
Entry stack: [V12, 0xe3, V71]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe3, V71]

================================

Block 0x523
[0x523:0x527]
---
Predecessors: [0x522]
Successors: [0x5d8]
---
0x523 JUMPDEST
0x524 PUSH2 0x5d8
0x527 JUMP
---
0x523: JUMPDEST 
0x524: V543 = 0x5d8
0x527: JUMP 0x5d8
---
Entry stack: [V12, 0xe3, V71]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe3, V71]

================================

Block 0x528
[0x528:0x54a]
---
Predecessors: [0x4ad]
Successors: [0x54b, 0x5d8]
---
0x528 JUMPDEST
0x529 PUSH1 0x1
0x52b PUSH1 0xa0
0x52d PUSH1 0x2
0x52f EXP
0x530 SUB
0x531 DUP2
0x532 AND
0x533 PUSH1 0x0
0x535 SWAP1
0x536 DUP2
0x537 MSTORE
0x538 PUSH1 0x1
0x53a PUSH1 0x20
0x53c MSTORE
0x53d PUSH1 0x40
0x53f DUP2
0x540 SHA3
0x541 PUSH1 0x6
0x543 ADD
0x544 SLOAD
0x545 GT
0x546 ISZERO
0x547 PUSH2 0x5d8
0x54a JUMPI
---
0x528: JUMPDEST 
0x529: V544 = 0x1
0x52b: V545 = 0xa0
0x52d: V546 = 0x2
0x52f: V547 = EXP 0x2 0xa0
0x530: V548 = SUB 0x10000000000000000000000000000000000000000 0x1
0x532: V549 = AND V71 0xffffffffffffffffffffffffffffffffffffffff
0x533: V550 = 0x0
0x537: M[0x0] = V549
0x538: V551 = 0x1
0x53a: V552 = 0x20
0x53c: M[0x20] = 0x1
0x53d: V553 = 0x40
0x540: V554 = SHA3 0x0 0x40
0x541: V555 = 0x6
0x543: V556 = ADD 0x6 V554
0x544: V557 = S[V556]
0x545: V558 = GT V557 0x0
0x546: V559 = ISZERO V558
0x547: V560 = 0x5d8
0x54a: JUMPI 0x5d8 V559
---
Entry stack: [V12, 0xe3, V71]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xe3, V71]

================================

Block 0x54b
[0x54b:0x5be]
---
Predecessors: [0x528]
Successors: [0x5bf, 0x5c3]
---
0x54b PUSH1 0x1
0x54d PUSH1 0xa0
0x54f PUSH1 0x2
0x551 EXP
0x552 SUB
0x553 DUP1
0x554 DUP3
0x555 AND
0x556 PUSH1 0x0
0x558 SWAP1
0x559 DUP2
0x55a MSTORE
0x55b PUSH1 0x1
0x55d PUSH1 0x20
0x55f MSTORE
0x560 PUSH1 0x40
0x562 SWAP1
0x563 DUP2
0x564 SWAP1
0x565 SHA3
0x566 PUSH1 0x2
0x568 DUP2
0x569 ADD
0x56a SLOAD
0x56b PUSH1 0x4
0x56d DUP3
0x56e ADD
0x56f SLOAD
0x570 PUSH1 0x6
0x572 SWAP1
0x573 SWAP3
0x574 ADD
0x575 SLOAD
0x576 SWAP1
0x577 DUP5
0x578 AND
0x579 SWAP4
0x57a PUSH4 0xa9059cbb
0x57f SWAP4
0x580 SWAP3
0x581 AND
0x582 SWAP2
0x583 MLOAD
0x584 PUSH1 0xe0
0x586 PUSH1 0x2
0x588 EXP
0x589 PUSH4 0xffffffff
0x58e DUP6
0x58f AND
0x590 MUL
0x591 DUP2
0x592 MSTORE
0x593 PUSH1 0x1
0x595 PUSH1 0xa0
0x597 PUSH1 0x2
0x599 EXP
0x59a SUB
0x59b SWAP1
0x59c SWAP3
0x59d AND
0x59e PUSH1 0x4
0x5a0 DUP4
0x5a1 ADD
0x5a2 MSTORE
0x5a3 PUSH1 0x24
0x5a5 DUP3
0x5a6 ADD
0x5a7 MSTORE
0x5a8 PUSH1 0x44
0x5aa ADD
0x5ab PUSH1 0x0
0x5ad PUSH1 0x40
0x5af MLOAD
0x5b0 DUP1
0x5b1 DUP4
0x5b2 SUB
0x5b3 DUP2
0x5b4 PUSH1 0x0
0x5b6 DUP8
0x5b7 DUP1
0x5b8 EXTCODESIZE
0x5b9 ISZERO
0x5ba ISZERO
0x5bb PUSH2 0x5c3
0x5be JUMPI
---
0x54b: V561 = 0x1
0x54d: V562 = 0xa0
0x54f: V563 = 0x2
0x551: V564 = EXP 0x2 0xa0
0x552: V565 = SUB 0x10000000000000000000000000000000000000000 0x1
0x555: V566 = AND V71 0xffffffffffffffffffffffffffffffffffffffff
0x556: V567 = 0x0
0x55a: M[0x0] = V566
0x55b: V568 = 0x1
0x55d: V569 = 0x20
0x55f: M[0x20] = 0x1
0x560: V570 = 0x40
0x565: V571 = SHA3 0x0 0x40
0x566: V572 = 0x2
0x569: V573 = ADD V571 0x2
0x56a: V574 = S[V573]
0x56b: V575 = 0x4
0x56e: V576 = ADD V571 0x4
0x56f: V577 = S[V576]
0x570: V578 = 0x6
0x574: V579 = ADD V571 0x6
0x575: V580 = S[V579]
0x578: V581 = AND 0xffffffffffffffffffffffffffffffffffffffff V574
0x57a: V582 = 0xa9059cbb
0x581: V583 = AND V577 0xffffffffffffffffffffffffffffffffffffffff
0x583: V584 = M[0x40]
0x584: V585 = 0xe0
0x586: V586 = 0x2
0x588: V587 = EXP 0x2 0xe0
0x589: V588 = 0xffffffff
0x58f: V589 = AND 0xa9059cbb 0xffffffff
0x590: V590 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x592: M[V584] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x593: V591 = 0x1
0x595: V592 = 0xa0
0x597: V593 = 0x2
0x599: V594 = EXP 0x2 0xa0
0x59a: V595 = SUB 0x10000000000000000000000000000000000000000 0x1
0x59d: V596 = AND V583 0xffffffffffffffffffffffffffffffffffffffff
0x59e: V597 = 0x4
0x5a1: V598 = ADD V584 0x4
0x5a2: M[V598] = V596
0x5a3: V599 = 0x24
0x5a6: V600 = ADD V584 0x24
0x5a7: M[V600] = V580
0x5a8: V601 = 0x44
0x5aa: V602 = ADD 0x44 V584
0x5ab: V603 = 0x0
0x5ad: V604 = 0x40
0x5af: V605 = M[0x40]
0x5b2: V606 = SUB V602 V605
0x5b4: V607 = 0x0
0x5b8: V608 = EXTCODESIZE V581
0x5b9: V609 = ISZERO V608
0x5ba: V610 = ISZERO V609
0x5bb: V611 = 0x5c3
0x5be: JUMPI 0x5c3 V610
---
Entry stack: [V12, 0xe3, V71]
Stack pops: 1
Stack additions: [S0, V581, 0xa9059cbb, V602, 0x0, V605, V606, V605, 0x0, V581]
Exit stack: [V12, 0xe3, V71, V581, 0xa9059cbb, V602, 0x0, V605, V606, V605, 0x0, V581]

================================

Block 0x5bf
[0x5bf:0x5c2]
---
Predecessors: [0x54b]
Successors: []
---
0x5bf PUSH1 0x0
0x5c1 DUP1
0x5c2 REVERT
---
0x5bf: V612 = 0x0
0x5c2: REVERT 0x0 0x0
---
Entry stack: [V12, 0xe3, V71, V581, 0xa9059cbb, V602, 0x0, V605, V606, V605, 0x0, V581]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe3, V71, V581, 0xa9059cbb, V602, 0x0, V605, V606, V605, 0x0, V581]

================================

Block 0x5c3
[0x5c3:0x5cf]
---
Predecessors: [0x54b]
Successors: [0x5d0, 0x5d4]
---
0x5c3 JUMPDEST
0x5c4 PUSH2 0x2c6
0x5c7 GAS
0x5c8 SUB
0x5c9 CALL
0x5ca ISZERO
0x5cb ISZERO
0x5cc PUSH2 0x5d4
0x5cf JUMPI
---
0x5c3: JUMPDEST 
0x5c4: V613 = 0x2c6
0x5c7: V614 = GAS
0x5c8: V615 = SUB V614 0x2c6
0x5c9: V616 = CALL V615 V581 0x0 V605 V606 V605 0x0
0x5ca: V617 = ISZERO V616
0x5cb: V618 = ISZERO V617
0x5cc: V619 = 0x5d4
0x5cf: JUMPI 0x5d4 V618
---
Entry stack: [V12, 0xe3, V71, V581, 0xa9059cbb, V602, 0x0, V605, V606, V605, 0x0, V581]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xe3, V71, V581, 0xa9059cbb, V602]

================================

Block 0x5d0
[0x5d0:0x5d3]
---
Predecessors: [0x5c3]
Successors: []
---
0x5d0 PUSH1 0x0
0x5d2 DUP1
0x5d3 REVERT
---
0x5d0: V620 = 0x0
0x5d3: REVERT 0x0 0x0
---
Entry stack: [V12, 0xe3, V71, V581, 0xa9059cbb, V602]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe3, V71, V581, 0xa9059cbb, V602]

================================

Block 0x5d4
[0x5d4:0x5d7]
---
Predecessors: [0x5c3]
Successors: [0x5d8]
---
0x5d4 JUMPDEST
0x5d5 POP
0x5d6 POP
0x5d7 POP
---
0x5d4: JUMPDEST 
---
Entry stack: [V12, 0xe3, V71, V581, 0xa9059cbb, V602]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xe3, V71]

================================

Block 0x5d8
[0x5d8:0x5d8]
---
Predecessors: [0x523, 0x528, 0x5d4]
Successors: [0x5d9]
---
0x5d8 JUMPDEST
---
0x5d8: JUMPDEST 
---
Entry stack: [V12, 0xe3, V71]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe3, V71]

================================

Block 0x5d9
[0x5d9:0x603]
---
Predecessors: [0x5d8]
Successors: [0x604]
---
0x5d9 JUMPDEST
0x5da PUSH1 0x1
0x5dc PUSH1 0xa0
0x5de PUSH1 0x2
0x5e0 EXP
0x5e1 SUB
0x5e2 DUP2
0x5e3 AND
0x5e4 PUSH1 0x0
0x5e6 SWAP1
0x5e7 DUP2
0x5e8 MSTORE
0x5e9 PUSH1 0x1
0x5eb PUSH1 0x20
0x5ed MSTORE
0x5ee PUSH1 0x40
0x5f0 DUP2
0x5f1 SHA3
0x5f2 PUSH1 0x7
0x5f4 DUP2
0x5f5 ADD
0x5f6 DUP3
0x5f7 SWAP1
0x5f8 SSTORE
0x5f9 PUSH1 0x6
0x5fb DUP2
0x5fc ADD
0x5fd DUP3
0x5fe SWAP1
0x5ff SSTORE
0x600 PUSH1 0x5
0x602 ADD
0x603 SSTORE
---
0x5d9: JUMPDEST 
0x5da: V621 = 0x1
0x5dc: V622 = 0xa0
0x5de: V623 = 0x2
0x5e0: V624 = EXP 0x2 0xa0
0x5e1: V625 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5e3: V626 = AND V71 0xffffffffffffffffffffffffffffffffffffffff
0x5e4: V627 = 0x0
0x5e8: M[0x0] = V626
0x5e9: V628 = 0x1
0x5eb: V629 = 0x20
0x5ed: M[0x20] = 0x1
0x5ee: V630 = 0x40
0x5f1: V631 = SHA3 0x0 0x40
0x5f2: V632 = 0x7
0x5f5: V633 = ADD V631 0x7
0x5f8: S[V633] = 0x0
0x5f9: V634 = 0x6
0x5fc: V635 = ADD V631 0x6
0x5ff: S[V635] = 0x0
0x600: V636 = 0x5
0x602: V637 = ADD 0x5 V631
0x603: S[V637] = 0x0
---
Entry stack: [V12, 0xe3, V71]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xe3, V71]

================================

Block 0x604
[0x604:0x604]
---
Predecessors: [0x463, 0x5d9]
Successors: [0x605]
---
0x604 JUMPDEST
---
0x604: JUMPDEST 
---
Entry stack: [V12, 0xe3, V71]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe3, V71]

================================

Block 0x605
[0x605:0x607]
---
Predecessors: [0x604]
Successors: [0xe3]
---
0x605 JUMPDEST
0x606 POP
0x607 JUMP
---
0x605: JUMPDEST 
0x607: JUMP 0xe3
---
Entry stack: [V12, 0xe3, V71]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x608
[0x608:0x626]
---
Predecessors: [0xf0]
Successors: [0x627]
---
0x608 JUMPDEST
0x609 PUSH1 0x1
0x60b PUSH1 0xa0
0x60d PUSH1 0x2
0x60f EXP
0x610 SUB
0x611 DUP1
0x612 DUP3
0x613 AND
0x614 PUSH1 0x0
0x616 SWAP1
0x617 DUP2
0x618 MSTORE
0x619 PUSH1 0x1
0x61b PUSH1 0x20
0x61d MSTORE
0x61e PUSH1 0x40
0x620 SWAP1
0x621 SHA3
0x622 PUSH1 0x4
0x624 ADD
0x625 SLOAD
0x626 AND
---
0x608: JUMPDEST 
0x609: V638 = 0x1
0x60b: V639 = 0xa0
0x60d: V640 = 0x2
0x60f: V641 = EXP 0x2 0xa0
0x610: V642 = SUB 0x10000000000000000000000000000000000000000 0x1
0x613: V643 = AND V85 0xffffffffffffffffffffffffffffffffffffffff
0x614: V644 = 0x0
0x618: M[0x0] = V643
0x619: V645 = 0x1
0x61b: V646 = 0x20
0x61d: M[0x20] = 0x1
0x61e: V647 = 0x40
0x621: V648 = SHA3 0x0 0x40
0x622: V649 = 0x4
0x624: V650 = ADD 0x4 V648
0x625: V651 = S[V650]
0x626: V652 = AND V651 0xffffffffffffffffffffffffffffffffffffffff
---
Entry stack: [V12, 0x104, V85]
Stack pops: 1
Stack additions: [S0, V652]
Exit stack: [V12, 0x104, V85, V652]

================================

Block 0x627
[0x627:0x62b]
---
Predecessors: [0x608]
Successors: [0x104]
---
0x627 JUMPDEST
0x628 SWAP2
0x629 SWAP1
0x62a POP
0x62b JUMP
---
0x627: JUMPDEST 
0x62b: JUMP 0x104
---
Entry stack: [V12, 0x104, V85, V652]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, V652]

================================

Block 0x62c
[0x62c:0x647]
---
Predecessors: [0x12b, 0x7cb, 0x7e0]
Successors: [0x648, 0x649]
---
0x62c JUMPDEST
0x62d PUSH1 0x0
0x62f DUP1
0x630 PUSH1 0x0
0x632 DUP4
0x633 PUSH1 0x1
0x635 ADD
0x636 PUSH1 0xa
0x638 EXP
0x639 DUP7
0x63a MUL
0x63b SWAP2
0x63c POP
0x63d PUSH1 0xa
0x63f DUP6
0x640 DUP4
0x641 DUP2
0x642 ISZERO
0x643 ISZERO
0x644 PUSH2 0x649
0x647 JUMPI
---
0x62c: JUMPDEST 
0x62d: V653 = 0x0
0x630: V654 = 0x0
0x633: V655 = 0x1
0x635: V656 = ADD 0x1 S0
0x636: V657 = 0xa
0x638: V658 = EXP 0xa V656
0x63a: V659 = MUL S2 V658
0x63d: V660 = 0xa
0x642: V661 = ISZERO S1
0x643: V662 = ISZERO V661
0x644: V663 = 0x649
0x647: JUMPI 0x649 V662
---
Entry stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x13c, 0x7e0, 0x7ec}, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, V659, 0x0, 0xa, S1, V659]
Exit stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x13c, 0x7e0, 0x7ec}, S2, S1, S0, 0x0, V659, 0x0, 0xa, S1, V659]

================================

Block 0x648
[0x648:0x648]
---
Predecessors: [0x62c]
Successors: []
---
0x648 INVALID
---
0x648: INVALID 
---
Entry stack: [V12, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, {0x13c, 0x7e0, 0x7ec}, S8, S7, S6, 0x0, V659, 0x0, 0xa, S1, V659]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, {0x13c, 0x7e0, 0x7ec}, S8, S7, S6, 0x0, V659, 0x0, 0xa, S1, V659]

================================

Block 0x649
[0x649:0x654]
---
Predecessors: [0x62c]
Successors: [0x655, 0x656]
---
0x649 JUMPDEST
0x64a DIV
0x64b PUSH1 0x5
0x64d ADD
0x64e DUP2
0x64f ISZERO
0x650 ISZERO
0x651 PUSH2 0x656
0x654 JUMPI
---
0x649: JUMPDEST 
0x64a: V664 = DIV V659 S1
0x64b: V665 = 0x5
0x64d: V666 = ADD 0x5 V664
0x64f: V667 = ISZERO 0xa
0x650: V668 = ISZERO 0x0
0x651: V669 = 0x656
0x654: JUMPI 0x656 0x1
---
Entry stack: [V12, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, {0x13c, 0x7e0, 0x7ec}, S8, S7, S6, 0x0, V659, 0x0, 0xa, S1, V659]
Stack pops: 3
Stack additions: [S2, V666]
Exit stack: [V12, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, {0x13c, 0x7e0, 0x7ec}, S8, S7, S6, 0x0, V659, 0x0, 0xa, V666]

================================

Block 0x655
[0x655:0x655]
---
Predecessors: [0x649]
Successors: []
---
0x655 INVALID
---
0x655: INVALID 
---
Entry stack: [V12, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x13c, 0x7e0, 0x7ec}, S7, S6, S5, 0x0, S3, 0x0, 0xa, V666]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x13c, 0x7e0, 0x7ec}, S7, S6, S5, 0x0, S3, 0x0, 0xa, V666]

================================

Block 0x656
[0x656:0x65c]
---
Predecessors: [0x649]
Successors: [0x65d]
---
0x656 JUMPDEST
0x657 DIV
0x658 SWAP1
0x659 POP
0x65a DUP1
0x65b SWAP3
0x65c POP
---
0x656: JUMPDEST 
0x657: V670 = DIV V666 0xa
---
Entry stack: [V12, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x13c, 0x7e0, 0x7ec}, S7, S6, S5, 0x0, S3, 0x0, 0xa, V666]
Stack pops: 5
Stack additions: [V670, S3, V670]
Exit stack: [V12, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x13c, 0x7e0, 0x7ec}, S7, S6, S5, V670, S3, V670]

================================

Block 0x65d
[0x65d:0x665]
---
Predecessors: [0x656, 0xe1a]
Successors: [0x13c, 0x30c, 0x7e0, 0x7ec]
---
0x65d JUMPDEST
0x65e POP
0x65f POP
0x660 SWAP4
0x661 SWAP3
0x662 POP
0x663 POP
0x664 POP
0x665 JUMP
---
0x65d: JUMPDEST 
0x665: JUMP {0x13c, 0x30c, 0x7e0, 0x7ec}
---
Entry stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x13c, 0x30c, 0x7e0, 0x7ec}, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S2]
Exit stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S2]

================================

Block 0x666
[0x666:0x684]
---
Predecessors: [0x159]
Successors: [0x685]
---
0x666 JUMPDEST
0x667 PUSH1 0x1
0x669 PUSH1 0xa0
0x66b PUSH1 0x2
0x66d EXP
0x66e SUB
0x66f DUP1
0x670 DUP3
0x671 AND
0x672 PUSH1 0x0
0x674 SWAP1
0x675 DUP2
0x676 MSTORE
0x677 PUSH1 0x1
0x679 PUSH1 0x20
0x67b MSTORE
0x67c PUSH1 0x40
0x67e SWAP1
0x67f SHA3
0x680 PUSH1 0x3
0x682 ADD
0x683 SLOAD
0x684 AND
---
0x666: JUMPDEST 
0x667: V671 = 0x1
0x669: V672 = 0xa0
0x66b: V673 = 0x2
0x66d: V674 = EXP 0x2 0xa0
0x66e: V675 = SUB 0x10000000000000000000000000000000000000000 0x1
0x671: V676 = AND V131 0xffffffffffffffffffffffffffffffffffffffff
0x672: V677 = 0x0
0x676: M[0x0] = V676
0x677: V678 = 0x1
0x679: V679 = 0x20
0x67b: M[0x20] = 0x1
0x67c: V680 = 0x40
0x67f: V681 = SHA3 0x0 0x40
0x680: V682 = 0x3
0x682: V683 = ADD 0x3 V681
0x683: V684 = S[V683]
0x684: V685 = AND V684 0xffffffffffffffffffffffffffffffffffffffff
---
Entry stack: [V12, 0x104, V131]
Stack pops: 1
Stack additions: [S0, V685]
Exit stack: [V12, 0x104, V131, V685]

================================

Block 0x685
[0x685:0x689]
---
Predecessors: [0x666]
Successors: [0x104]
---
0x685 JUMPDEST
0x686 SWAP2
0x687 SWAP1
0x688 POP
0x689 JUMP
---
0x685: JUMPDEST 
0x689: JUMP 0x104
---
Entry stack: [V12, 0x104, V131, V685]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, V685]

================================

Block 0x68a
[0x68a:0x698]
---
Predecessors: [0x189]
Successors: [0x699, 0x69d]
---
0x68a JUMPDEST
0x68b PUSH1 0x0
0x68d DUP1
0x68e SLOAD
0x68f DUP2
0x690 SWAP1
0x691 PUSH1 0xff
0x693 AND
0x694 ISZERO
0x695 PUSH2 0x69d
0x698 JUMPI
---
0x68a: JUMPDEST 
0x68b: V686 = 0x0
0x68e: V687 = S[0x0]
0x691: V688 = 0xff
0x693: V689 = AND 0xff V687
0x694: V690 = ISZERO V689
0x695: V691 = 0x69d
0x698: JUMPI 0x69d V690
---
Entry stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, 0x0]

================================

Block 0x699
[0x699:0x69c]
---
Predecessors: [0x68a]
Successors: []
---
0x699 PUSH1 0x0
0x69b DUP1
0x69c REVERT
---
0x699: V692 = 0x0
0x69c: REVERT 0x0 0x0
---
Entry stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, 0x0]

================================

Block 0x69d
[0x69d:0x6ba]
---
Predecessors: [0x68a]
Successors: [0x6bb, 0x826]
---
0x69d JUMPDEST
0x69e PUSH1 0x0
0x6a0 DUP1
0x6a1 SLOAD
0x6a2 PUSH1 0xff
0x6a4 NOT
0x6a5 AND
0x6a6 PUSH1 0x1
0x6a8 OR
0x6a9 SWAP1
0x6aa SSTORE
0x6ab PUSH1 0x1
0x6ad PUSH1 0xa0
0x6af PUSH1 0x2
0x6b1 EXP
0x6b2 SUB
0x6b3 DUP9
0x6b4 AND
0x6b5 ISZERO
0x6b6 ISZERO
0x6b7 PUSH2 0x826
0x6ba JUMPI
---
0x69d: JUMPDEST 
0x69e: V693 = 0x0
0x6a1: V694 = S[0x0]
0x6a2: V695 = 0xff
0x6a4: V696 = NOT 0xff
0x6a5: V697 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V694
0x6a6: V698 = 0x1
0x6a8: V699 = OR 0x1 V697
0x6aa: S[0x0] = V699
0x6ab: V700 = 0x1
0x6ad: V701 = 0xa0
0x6af: V702 = 0x2
0x6b1: V703 = EXP 0x2 0xa0
0x6b2: V704 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6b4: V705 = AND V157 0xffffffffffffffffffffffffffffffffffffffff
0x6b5: V706 = ISZERO V705
0x6b6: V707 = ISZERO V706
0x6b7: V708 = 0x826
0x6ba: JUMPI 0x826 V707
---
Entry stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, 0x0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, 0x0]

================================

Block 0x6bb
[0x6bb:0x6ff]
---
Predecessors: [0x69d]
Successors: [0x700, 0x704]
---
0x6bb PUSH1 0x0
0x6bd SWAP2
0x6be POP
0x6bf DUP7
0x6c0 PUSH1 0x1
0x6c2 PUSH1 0xa0
0x6c4 PUSH1 0x2
0x6c6 EXP
0x6c7 SUB
0x6c8 AND
0x6c9 PUSH4 0x313ce567
0x6ce PUSH1 0x0
0x6d0 PUSH1 0x40
0x6d2 MLOAD
0x6d3 PUSH1 0x20
0x6d5 ADD
0x6d6 MSTORE
0x6d7 PUSH1 0x40
0x6d9 MLOAD
0x6da DUP2
0x6db PUSH4 0xffffffff
0x6e0 AND
0x6e1 PUSH1 0xe0
0x6e3 PUSH1 0x2
0x6e5 EXP
0x6e6 MUL
0x6e7 DUP2
0x6e8 MSTORE
0x6e9 PUSH1 0x4
0x6eb ADD
0x6ec PUSH1 0x20
0x6ee PUSH1 0x40
0x6f0 MLOAD
0x6f1 DUP1
0x6f2 DUP4
0x6f3 SUB
0x6f4 DUP2
0x6f5 PUSH1 0x0
0x6f7 DUP8
0x6f8 DUP1
0x6f9 EXTCODESIZE
0x6fa ISZERO
0x6fb ISZERO
0x6fc PUSH2 0x704
0x6ff JUMPI
---
0x6bb: V709 = 0x0
0x6c0: V710 = 0x1
0x6c2: V711 = 0xa0
0x6c4: V712 = 0x2
0x6c6: V713 = EXP 0x2 0xa0
0x6c7: V714 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6c8: V715 = AND 0xffffffffffffffffffffffffffffffffffffffff V160
0x6c9: V716 = 0x313ce567
0x6ce: V717 = 0x0
0x6d0: V718 = 0x40
0x6d2: V719 = M[0x40]
0x6d3: V720 = 0x20
0x6d5: V721 = ADD 0x20 V719
0x6d6: M[V721] = 0x0
0x6d7: V722 = 0x40
0x6d9: V723 = M[0x40]
0x6db: V724 = 0xffffffff
0x6e0: V725 = AND 0xffffffff 0x313ce567
0x6e1: V726 = 0xe0
0x6e3: V727 = 0x2
0x6e5: V728 = EXP 0x2 0xe0
0x6e6: V729 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x313ce567
0x6e8: M[V723] = 0x313ce56700000000000000000000000000000000000000000000000000000000
0x6e9: V730 = 0x4
0x6eb: V731 = ADD 0x4 V723
0x6ec: V732 = 0x20
0x6ee: V733 = 0x40
0x6f0: V734 = M[0x40]
0x6f3: V735 = SUB V731 V734
0x6f5: V736 = 0x0
0x6f9: V737 = EXTCODESIZE V715
0x6fa: V738 = ISZERO V737
0x6fb: V739 = ISZERO V738
0x6fc: V740 = 0x704
0x6ff: JUMPI 0x704 V739
---
Entry stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, 0x0, S0, V715, 0x313ce567, V731, 0x20, V734, V735, V734, 0x0, V715]
Exit stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, 0x0, V715, 0x313ce567, V731, 0x20, V734, V735, V734, 0x0, V715]

================================

Block 0x700
[0x700:0x703]
---
Predecessors: [0x6bb]
Successors: []
---
0x700 PUSH1 0x0
0x702 DUP1
0x703 REVERT
---
0x700: V741 = 0x0
0x703: REVERT 0x0 0x0
---
Entry stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, 0x0, V715, 0x313ce567, V731, 0x20, V734, V735, V734, 0x0, V715]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, 0x0, V715, 0x313ce567, V731, 0x20, V734, V735, V734, 0x0, V715]

================================

Block 0x704
[0x704:0x710]
---
Predecessors: [0x6bb]
Successors: [0x711, 0x715]
---
0x704 JUMPDEST
0x705 PUSH2 0x2c6
0x708 GAS
0x709 SUB
0x70a CALL
0x70b ISZERO
0x70c ISZERO
0x70d PUSH2 0x715
0x710 JUMPI
---
0x704: JUMPDEST 
0x705: V742 = 0x2c6
0x708: V743 = GAS
0x709: V744 = SUB V743 0x2c6
0x70a: V745 = CALL V744 V715 0x0 V734 V735 V734 0x20
0x70b: V746 = ISZERO V745
0x70c: V747 = ISZERO V746
0x70d: V748 = 0x715
0x710: JUMPI 0x715 V747
---
Entry stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, 0x0, V715, 0x313ce567, V731, 0x20, V734, V735, V734, 0x0, V715]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, 0x0, V715, 0x313ce567, V731]

================================

Block 0x711
[0x711:0x714]
---
Predecessors: [0x704]
Successors: []
---
0x711 PUSH1 0x0
0x713 DUP1
0x714 REVERT
---
0x711: V749 = 0x0
0x714: REVERT 0x0 0x0
---
Entry stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, 0x0, V715, 0x313ce567, V731]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, 0x0, V715, 0x313ce567, V731]

================================

Block 0x715
[0x715:0x72c]
---
Predecessors: [0x704]
Successors: [0x72d, 0x73c]
---
0x715 JUMPDEST
0x716 POP
0x717 POP
0x718 POP
0x719 PUSH1 0x40
0x71b MLOAD
0x71c DUP1
0x71d MLOAD
0x71e PUSH1 0xff
0x720 AND
0x721 SWAP2
0x722 POP
0x723 POP
0x724 PUSH1 0x12
0x726 DUP2
0x727 EQ
0x728 ISZERO
0x729 PUSH2 0x73c
0x72c JUMPI
---
0x715: JUMPDEST 
0x719: V750 = 0x40
0x71b: V751 = M[0x40]
0x71d: V752 = M[V751]
0x71e: V753 = 0xff
0x720: V754 = AND 0xff V752
0x724: V755 = 0x12
0x727: V756 = EQ V754 0x12
0x728: V757 = ISZERO V756
0x729: V758 = 0x73c
0x72c: JUMPI 0x73c V757
---
Entry stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, 0x0, V715, 0x313ce567, V731]
Stack pops: 4
Stack additions: [V754]
Exit stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, V754]

================================

Block 0x72d
[0x72d:0x73b]
---
Predecessors: [0x715]
Successors: [0x7c5]
---
0x72d PUSH8 0xde0b6b3a7640000
0x736 SWAP2
0x737 POP
0x738 PUSH2 0x7c5
0x73b JUMP
---
0x72d: V759 = 0xde0b6b3a7640000
0x738: V760 = 0x7c5
0x73b: JUMP 0x7c5
---
Entry stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, V754]
Stack pops: 2
Stack additions: [0xde0b6b3a7640000, S0]
Exit stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0xde0b6b3a7640000, V754]

================================

Block 0x73c
[0x73c:0x745]
---
Predecessors: [0x715]
Successors: [0x746, 0x755]
---
0x73c JUMPDEST
0x73d DUP1
0x73e PUSH1 0x11
0x740 EQ
0x741 ISZERO
0x742 PUSH2 0x755
0x745 JUMPI
---
0x73c: JUMPDEST 
0x73e: V761 = 0x11
0x740: V762 = EQ 0x11 V754
0x741: V763 = ISZERO V762
0x742: V764 = 0x755
0x745: JUMPI 0x755 V763
---
Entry stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, V754]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, V754]

================================

Block 0x746
[0x746:0x754]
---
Predecessors: [0x73c]
Successors: [0x7c5]
---
0x746 PUSH8 0x16345785d8a0000
0x74f SWAP2
0x750 POP
0x751 PUSH2 0x7c5
0x754 JUMP
---
0x746: V765 = 0x16345785d8a0000
0x751: V766 = 0x7c5
0x754: JUMP 0x7c5
---
Entry stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, V754]
Stack pops: 2
Stack additions: [0x16345785d8a0000, S0]
Exit stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x16345785d8a0000, V754]

================================

Block 0x755
[0x755:0x75e]
---
Predecessors: [0x73c]
Successors: [0x75f, 0x76d]
---
0x755 JUMPDEST
0x756 DUP1
0x757 PUSH1 0x10
0x759 EQ
0x75a ISZERO
0x75b PUSH2 0x76d
0x75e JUMPI
---
0x755: JUMPDEST 
0x757: V767 = 0x10
0x759: V768 = EQ 0x10 V754
0x75a: V769 = ISZERO V768
0x75b: V770 = 0x76d
0x75e: JUMPI 0x76d V769
---
Entry stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, V754]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, V754]

================================

Block 0x75f
[0x75f:0x76c]
---
Predecessors: [0x755]
Successors: [0x7c5]
---
0x75f PUSH7 0x2386f26fc10000
0x767 SWAP2
0x768 POP
0x769 PUSH2 0x7c5
0x76c JUMP
---
0x75f: V771 = 0x2386f26fc10000
0x769: V772 = 0x7c5
0x76c: JUMP 0x7c5
---
Entry stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, V754]
Stack pops: 2
Stack additions: [0x2386f26fc10000, S0]
Exit stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x2386f26fc10000, V754]

================================

Block 0x76d
[0x76d:0x776]
---
Predecessors: [0x755]
Successors: [0x777, 0x785]
---
0x76d JUMPDEST
0x76e DUP1
0x76f PUSH1 0xf
0x771 EQ
0x772 ISZERO
0x773 PUSH2 0x785
0x776 JUMPI
---
0x76d: JUMPDEST 
0x76f: V773 = 0xf
0x771: V774 = EQ 0xf V754
0x772: V775 = ISZERO V774
0x773: V776 = 0x785
0x776: JUMPI 0x785 V775
---
Entry stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, V754]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, V754]

================================

Block 0x777
[0x777:0x784]
---
Predecessors: [0x76d]
Successors: [0x7c5]
---
0x777 PUSH7 0x38d7ea4c68000
0x77f SWAP2
0x780 POP
0x781 PUSH2 0x7c5
0x784 JUMP
---
0x777: V777 = 0x38d7ea4c68000
0x781: V778 = 0x7c5
0x784: JUMP 0x7c5
---
Entry stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, V754]
Stack pops: 2
Stack additions: [0x38d7ea4c68000, S0]
Exit stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x38d7ea4c68000, V754]

================================

Block 0x785
[0x785:0x78e]
---
Predecessors: [0x76d]
Successors: [0x78f, 0x79c]
---
0x785 JUMPDEST
0x786 DUP1
0x787 PUSH1 0xe
0x789 EQ
0x78a ISZERO
0x78b PUSH2 0x79c
0x78e JUMPI
---
0x785: JUMPDEST 
0x787: V779 = 0xe
0x789: V780 = EQ 0xe V754
0x78a: V781 = ISZERO V780
0x78b: V782 = 0x79c
0x78e: JUMPI 0x79c V781
---
Entry stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, V754]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, V754]

================================

Block 0x78f
[0x78f:0x79b]
---
Predecessors: [0x785]
Successors: [0x7c5]
---
0x78f PUSH6 0x5af3107a4000
0x796 SWAP2
0x797 POP
0x798 PUSH2 0x7c5
0x79b JUMP
---
0x78f: V783 = 0x5af3107a4000
0x798: V784 = 0x7c5
0x79b: JUMP 0x7c5
---
Entry stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, V754]
Stack pops: 2
Stack additions: [0x5af3107a4000, S0]
Exit stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x5af3107a4000, V754]

================================

Block 0x79c
[0x79c:0x7a5]
---
Predecessors: [0x785]
Successors: [0x7a6, 0x7b3]
---
0x79c JUMPDEST
0x79d DUP1
0x79e PUSH1 0xd
0x7a0 EQ
0x7a1 ISZERO
0x7a2 PUSH2 0x7b3
0x7a5 JUMPI
---
0x79c: JUMPDEST 
0x79e: V785 = 0xd
0x7a0: V786 = EQ 0xd V754
0x7a1: V787 = ISZERO V786
0x7a2: V788 = 0x7b3
0x7a5: JUMPI 0x7b3 V787
---
Entry stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, V754]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, V754]

================================

Block 0x7a6
[0x7a6:0x7b2]
---
Predecessors: [0x79c]
Successors: [0x7c5]
---
0x7a6 PUSH6 0x9184e72a000
0x7ad SWAP2
0x7ae POP
0x7af PUSH2 0x7c5
0x7b2 JUMP
---
0x7a6: V789 = 0x9184e72a000
0x7af: V790 = 0x7c5
0x7b2: JUMP 0x7c5
---
Entry stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, V754]
Stack pops: 2
Stack additions: [0x9184e72a000, S0]
Exit stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x9184e72a000, V754]

================================

Block 0x7b3
[0x7b3:0x7bc]
---
Predecessors: [0x79c]
Successors: [0x7bd, 0x7c5]
---
0x7b3 JUMPDEST
0x7b4 DUP1
0x7b5 PUSH1 0xc
0x7b7 EQ
0x7b8 ISZERO
0x7b9 PUSH2 0x7c5
0x7bc JUMPI
---
0x7b3: JUMPDEST 
0x7b5: V791 = 0xc
0x7b7: V792 = EQ 0xc V754
0x7b8: V793 = ISZERO V792
0x7b9: V794 = 0x7c5
0x7bc: JUMPI 0x7c5 V793
---
Entry stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, V754]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, V754]

================================

Block 0x7bd
[0x7bd:0x7c4]
---
Predecessors: [0x7b3]
Successors: [0x7c5]
---
0x7bd PUSH5 0xe8d4a51000
0x7c3 SWAP2
0x7c4 POP
---
0x7bd: V795 = 0xe8d4a51000
---
Entry stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, V754]
Stack pops: 2
Stack additions: [0xe8d4a51000, S0]
Exit stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0xe8d4a51000, V754]

================================

Block 0x7c5
[0x7c5:0x7c5]
---
Predecessors: [0x72d, 0x746, 0x75f, 0x777, 0x78f, 0x7a6, 0x7b3, 0x7bd]
Successors: [0x7c6]
---
0x7c5 JUMPDEST
---
0x7c5: JUMPDEST 
---
Entry stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, {0x0, 0xe8d4a51000, 0x9184e72a000, 0x5af3107a4000, 0x38d7ea4c68000, 0x2386f26fc10000, 0x16345785d8a0000, 0xde0b6b3a7640000}, V754]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, {0x0, 0xe8d4a51000, 0x9184e72a000, 0x5af3107a4000, 0x38d7ea4c68000, 0x2386f26fc10000, 0x16345785d8a0000, 0xde0b6b3a7640000}, V754]

================================

Block 0x7c6
[0x7c6:0x7c6]
---
Predecessors: [0x7c5]
Successors: [0x7c7]
---
0x7c6 JUMPDEST
---
0x7c6: JUMPDEST 
---
Entry stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, {0x0, 0xe8d4a51000, 0x9184e72a000, 0x5af3107a4000, 0x38d7ea4c68000, 0x2386f26fc10000, 0x16345785d8a0000, 0xde0b6b3a7640000}, V754]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, {0x0, 0xe8d4a51000, 0x9184e72a000, 0x5af3107a4000, 0x38d7ea4c68000, 0x2386f26fc10000, 0x16345785d8a0000, 0xde0b6b3a7640000}, V754]

================================

Block 0x7c7
[0x7c7:0x7c7]
---
Predecessors: [0x7c6]
Successors: [0x7c8]
---
0x7c7 JUMPDEST
---
0x7c7: JUMPDEST 
---
Entry stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, {0x0, 0xe8d4a51000, 0x9184e72a000, 0x5af3107a4000, 0x38d7ea4c68000, 0x2386f26fc10000, 0x16345785d8a0000, 0xde0b6b3a7640000}, V754]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, {0x0, 0xe8d4a51000, 0x9184e72a000, 0x5af3107a4000, 0x38d7ea4c68000, 0x2386f26fc10000, 0x16345785d8a0000, 0xde0b6b3a7640000}, V754]

================================

Block 0x7c8
[0x7c8:0x7c8]
---
Predecessors: [0x7c7]
Successors: [0x7c9]
---
0x7c8 JUMPDEST
---
0x7c8: JUMPDEST 
---
Entry stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, {0x0, 0xe8d4a51000, 0x9184e72a000, 0x5af3107a4000, 0x38d7ea4c68000, 0x2386f26fc10000, 0x16345785d8a0000, 0xde0b6b3a7640000}, V754]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, {0x0, 0xe8d4a51000, 0x9184e72a000, 0x5af3107a4000, 0x38d7ea4c68000, 0x2386f26fc10000, 0x16345785d8a0000, 0xde0b6b3a7640000}, V754]

================================

Block 0x7c9
[0x7c9:0x7c9]
---
Predecessors: [0x7c8]
Successors: [0x7ca]
---
0x7c9 JUMPDEST
---
0x7c9: JUMPDEST 
---
Entry stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, {0x0, 0xe8d4a51000, 0x9184e72a000, 0x5af3107a4000, 0x38d7ea4c68000, 0x2386f26fc10000, 0x16345785d8a0000, 0xde0b6b3a7640000}, V754]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, {0x0, 0xe8d4a51000, 0x9184e72a000, 0x5af3107a4000, 0x38d7ea4c68000, 0x2386f26fc10000, 0x16345785d8a0000, 0xde0b6b3a7640000}, V754]

================================

Block 0x7ca
[0x7ca:0x7ca]
---
Predecessors: [0x7c9]
Successors: [0x7cb]
---
0x7ca JUMPDEST
---
0x7ca: JUMPDEST 
---
Entry stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, {0x0, 0xe8d4a51000, 0x9184e72a000, 0x5af3107a4000, 0x38d7ea4c68000, 0x2386f26fc10000, 0x16345785d8a0000, 0xde0b6b3a7640000}, V754]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, {0x0, 0xe8d4a51000, 0x9184e72a000, 0x5af3107a4000, 0x38d7ea4c68000, 0x2386f26fc10000, 0x16345785d8a0000, 0xde0b6b3a7640000}, V754]

================================

Block 0x7cb
[0x7cb:0x7df]
---
Predecessors: [0x7ca]
Successors: [0x62c]
---
0x7cb JUMPDEST
0x7cc CALLVALUE
0x7cd PUSH2 0x7e0
0x7d0 DUP8
0x7d1 PUSH8 0xde0b6b3a7640000
0x7da PUSH1 0x6
0x7dc PUSH2 0x62c
0x7df JUMP
---
0x7cb: JUMPDEST 
0x7cc: V796 = CALLVALUE
0x7cd: V797 = 0x7e0
0x7d1: V798 = 0xde0b6b3a7640000
0x7da: V799 = 0x6
0x7dc: V800 = 0x62c
0x7df: JUMP 0x62c
---
Entry stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, {0x0, 0xe8d4a51000, 0x9184e72a000, 0x5af3107a4000, 0x38d7ea4c68000, 0x2386f26fc10000, 0x16345785d8a0000, 0xde0b6b3a7640000}, V754]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, V796, 0x7e0, S5, 0xde0b6b3a7640000, 0x6]
Exit stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, {0x0, 0xe8d4a51000, 0x9184e72a000, 0x5af3107a4000, 0x38d7ea4c68000, 0x2386f26fc10000, 0x16345785d8a0000, 0xde0b6b3a7640000}, V754, V796, 0x7e0, V162, 0xde0b6b3a7640000, 0x6]

================================

Block 0x7e0
[0x7e0:0x7eb]
---
Predecessors: [0x65d]
Successors: [0x62c]
---
0x7e0 JUMPDEST
0x7e1 PUSH2 0x7ec
0x7e4 DUP8
0x7e5 DUP6
0x7e6 PUSH1 0x6
0x7e8 PUSH2 0x62c
0x7eb JUMP
---
0x7e0: JUMPDEST 
0x7e1: V801 = 0x7ec
0x7e6: V802 = 0x6
0x7e8: V803 = 0x62c
0x7eb: JUMP 0x62c
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, 0x7ec, S6, S3, 0x6]
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x7ec, S6, S3, 0x6]

================================

Block 0x7ec
[0x7ec:0x7f8]
---
Predecessors: [0x65d]
Successors: [0xbf, 0x7f9]
---
0x7ec JUMPDEST
0x7ed MUL
0x7ee PUSH3 0xf4240
0x7f2 MUL
0x7f3 EQ
0x7f4 ISZERO
0x7f5 PUSH2 0xbf
0x7f8 JUMPI
---
0x7ec: JUMPDEST 
0x7ed: V804 = MUL S0 S1
0x7ee: V805 = 0xf4240
0x7f2: V806 = MUL 0xf4240 V804
0x7f3: V807 = EQ V806 S2
0x7f4: V808 = ISZERO V807
0x7f5: V809 = 0xbf
0x7f8: JUMPI 0xbf V808
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0x7f9
[0x7f9:0x81b]
---
Predecessors: [0x7ec]
Successors: [0x821]
---
0x7f9 PUSH1 0x1
0x7fb PUSH1 0xa0
0x7fd PUSH1 0x2
0x7ff EXP
0x800 SUB
0x801 DUP10
0x802 AND
0x803 PUSH1 0x0
0x805 SWAP1
0x806 DUP2
0x807 MSTORE
0x808 PUSH1 0x1
0x80a PUSH1 0x20
0x80c MSTORE
0x80d PUSH1 0x40
0x80f SWAP1
0x810 SHA3
0x811 CALLVALUE
0x812 PUSH1 0x7
0x814 SWAP1
0x815 SWAP2
0x816 ADD
0x817 SSTORE
0x818 PUSH2 0x821
0x81b JUMP
---
0x7f9: V810 = 0x1
0x7fb: V811 = 0xa0
0x7fd: V812 = 0x2
0x7ff: V813 = EXP 0x2 0xa0
0x800: V814 = SUB 0x10000000000000000000000000000000000000000 0x1
0x802: V815 = AND S8 0xffffffffffffffffffffffffffffffffffffffff
0x803: V816 = 0x0
0x807: M[0x0] = V815
0x808: V817 = 0x1
0x80a: V818 = 0x20
0x80c: M[0x20] = 0x1
0x80d: V819 = 0x40
0x810: V820 = SHA3 0x0 0x40
0x811: V821 = CALLVALUE
0x812: V822 = 0x7
0x816: V823 = ADD V820 0x7
0x817: S[V823] = V821
0x818: V824 = 0x821
0x81b: JUMP 0x821
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x81c
[0x81c:0x820]
---
Predecessors: []
Successors: []
---
0x81c JUMPDEST
0x81d PUSH1 0x0
0x81f DUP1
0x820 REVERT
---
0x81c: JUMPDEST 
0x81d: V825 = 0x0
0x820: REVERT 0x0 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x821
[0x821:0x825]
---
Predecessors: [0x7f9, 0x923]
Successors: [0x942]
---
0x821 JUMPDEST
0x822 PUSH2 0x942
0x825 JUMP
---
0x821: JUMPDEST 
0x822: V826 = 0x942
0x825: JUMP 0x942
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x826
[0x826:0x881]
---
Predecessors: [0x69d]
Successors: [0x882, 0x886]
---
0x826 JUMPDEST
0x827 DUP5
0x828 DUP9
0x829 PUSH1 0x1
0x82b PUSH1 0xa0
0x82d PUSH1 0x2
0x82f EXP
0x830 SUB
0x831 AND
0x832 PUSH4 0xdd62ed3e
0x837 CALLER
0x838 ADDRESS
0x839 PUSH1 0x0
0x83b PUSH1 0x40
0x83d MLOAD
0x83e PUSH1 0x20
0x840 ADD
0x841 MSTORE
0x842 PUSH1 0x40
0x844 MLOAD
0x845 PUSH1 0xe0
0x847 PUSH1 0x2
0x849 EXP
0x84a PUSH4 0xffffffff
0x84f DUP6
0x850 AND
0x851 MUL
0x852 DUP2
0x853 MSTORE
0x854 PUSH1 0x1
0x856 PUSH1 0xa0
0x858 PUSH1 0x2
0x85a EXP
0x85b SUB
0x85c SWAP3
0x85d DUP4
0x85e AND
0x85f PUSH1 0x4
0x861 DUP3
0x862 ADD
0x863 MSTORE
0x864 SWAP2
0x865 AND
0x866 PUSH1 0x24
0x868 DUP3
0x869 ADD
0x86a MSTORE
0x86b PUSH1 0x44
0x86d ADD
0x86e PUSH1 0x20
0x870 PUSH1 0x40
0x872 MLOAD
0x873 DUP1
0x874 DUP4
0x875 SUB
0x876 DUP2
0x877 PUSH1 0x0
0x879 DUP8
0x87a DUP1
0x87b EXTCODESIZE
0x87c ISZERO
0x87d ISZERO
0x87e PUSH2 0x886
0x881 JUMPI
---
0x826: JUMPDEST 
0x829: V827 = 0x1
0x82b: V828 = 0xa0
0x82d: V829 = 0x2
0x82f: V830 = EXP 0x2 0xa0
0x830: V831 = SUB 0x10000000000000000000000000000000000000000 0x1
0x831: V832 = AND 0xffffffffffffffffffffffffffffffffffffffff V157
0x832: V833 = 0xdd62ed3e
0x837: V834 = CALLER
0x838: V835 = ADDRESS
0x839: V836 = 0x0
0x83b: V837 = 0x40
0x83d: V838 = M[0x40]
0x83e: V839 = 0x20
0x840: V840 = ADD 0x20 V838
0x841: M[V840] = 0x0
0x842: V841 = 0x40
0x844: V842 = M[0x40]
0x845: V843 = 0xe0
0x847: V844 = 0x2
0x849: V845 = EXP 0x2 0xe0
0x84a: V846 = 0xffffffff
0x850: V847 = AND 0xdd62ed3e 0xffffffff
0x851: V848 = MUL 0xdd62ed3e 0x100000000000000000000000000000000000000000000000000000000
0x853: M[V842] = 0xdd62ed3e00000000000000000000000000000000000000000000000000000000
0x854: V849 = 0x1
0x856: V850 = 0xa0
0x858: V851 = 0x2
0x85a: V852 = EXP 0x2 0xa0
0x85b: V853 = SUB 0x10000000000000000000000000000000000000000 0x1
0x85e: V854 = AND 0xffffffffffffffffffffffffffffffffffffffff V834
0x85f: V855 = 0x4
0x862: V856 = ADD V842 0x4
0x863: M[V856] = V854
0x865: V857 = AND 0xffffffffffffffffffffffffffffffffffffffff V835
0x866: V858 = 0x24
0x869: V859 = ADD V842 0x24
0x86a: M[V859] = V857
0x86b: V860 = 0x44
0x86d: V861 = ADD 0x44 V842
0x86e: V862 = 0x20
0x870: V863 = 0x40
0x872: V864 = M[0x40]
0x875: V865 = SUB V861 V864
0x877: V866 = 0x0
0x87b: V867 = EXTCODESIZE V832
0x87c: V868 = ISZERO V867
0x87d: V869 = ISZERO V868
0x87e: V870 = 0x886
0x881: JUMPI 0x886 V869
---
Entry stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, 0x0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0, S4, V832, 0xdd62ed3e, V861, 0x20, V864, V865, V864, 0x0, V832]
Exit stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, 0x0, V164, V832, 0xdd62ed3e, V861, 0x20, V864, V865, V864, 0x0, V832]

================================

Block 0x882
[0x882:0x885]
---
Predecessors: [0x826]
Successors: []
---
0x882 PUSH1 0x0
0x884 DUP1
0x885 REVERT
---
0x882: V871 = 0x0
0x885: REVERT 0x0 0x0
---
Entry stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, 0x0, V164, V832, 0xdd62ed3e, V861, 0x20, V864, V865, V864, 0x0, V832]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, 0x0, V164, V832, 0xdd62ed3e, V861, 0x20, V864, V865, V864, 0x0, V832]

================================

Block 0x886
[0x886:0x892]
---
Predecessors: [0x826]
Successors: [0x893, 0x897]
---
0x886 JUMPDEST
0x887 PUSH2 0x2c6
0x88a GAS
0x88b SUB
0x88c CALL
0x88d ISZERO
0x88e ISZERO
0x88f PUSH2 0x897
0x892 JUMPI
---
0x886: JUMPDEST 
0x887: V872 = 0x2c6
0x88a: V873 = GAS
0x88b: V874 = SUB V873 0x2c6
0x88c: V875 = CALL V874 V832 0x0 V864 V865 V864 0x20
0x88d: V876 = ISZERO V875
0x88e: V877 = ISZERO V876
0x88f: V878 = 0x897
0x892: JUMPI 0x897 V877
---
Entry stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, 0x0, V164, V832, 0xdd62ed3e, V861, 0x20, V864, V865, V864, 0x0, V832]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, 0x0, V164, V832, 0xdd62ed3e, V861]

================================

Block 0x893
[0x893:0x896]
---
Predecessors: [0x886]
Successors: []
---
0x893 PUSH1 0x0
0x895 DUP1
0x896 REVERT
---
0x893: V879 = 0x0
0x896: REVERT 0x0 0x0
---
Entry stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, 0x0, V164, V832, 0xdd62ed3e, V861]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, 0x0, V164, V832, 0xdd62ed3e, V861]

================================

Block 0x897
[0x897:0x8a8]
---
Predecessors: [0x886]
Successors: [0xbf, 0x8a9]
---
0x897 JUMPDEST
0x898 POP
0x899 POP
0x89a POP
0x89b PUSH1 0x40
0x89d MLOAD
0x89e DUP1
0x89f MLOAD
0x8a0 SWAP1
0x8a1 POP
0x8a2 LT
0x8a3 ISZERO
0x8a4 ISZERO
0x8a5 PUSH2 0xbf
0x8a8 JUMPI
---
0x897: JUMPDEST 
0x89b: V880 = 0x40
0x89d: V881 = M[0x40]
0x89f: V882 = M[V881]
0x8a2: V883 = LT V882 V164
0x8a3: V884 = ISZERO V883
0x8a4: V885 = ISZERO V884
0x8a5: V886 = 0xbf
0x8a8: JUMPI 0xbf V885
---
Entry stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, 0x0, V164, V832, 0xdd62ed3e, V861]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, 0x0]

================================

Block 0x8a9
[0x8a9:0x90d]
---
Predecessors: [0x897]
Successors: [0x90e, 0x912]
---
0x8a9 DUP8
0x8aa PUSH1 0x1
0x8ac PUSH1 0xa0
0x8ae PUSH1 0x2
0x8b0 EXP
0x8b1 SUB
0x8b2 AND
0x8b3 PUSH4 0x23b872dd
0x8b8 CALLER
0x8b9 ADDRESS
0x8ba DUP9
0x8bb PUSH1 0x0
0x8bd PUSH1 0x40
0x8bf MLOAD
0x8c0 PUSH1 0x20
0x8c2 ADD
0x8c3 MSTORE
0x8c4 PUSH1 0x40
0x8c6 MLOAD
0x8c7 PUSH1 0xe0
0x8c9 PUSH1 0x2
0x8cb EXP
0x8cc PUSH4 0xffffffff
0x8d1 DUP7
0x8d2 AND
0x8d3 MUL
0x8d4 DUP2
0x8d5 MSTORE
0x8d6 PUSH1 0x1
0x8d8 PUSH1 0xa0
0x8da PUSH1 0x2
0x8dc EXP
0x8dd SUB
0x8de SWAP4
0x8df DUP5
0x8e0 AND
0x8e1 PUSH1 0x4
0x8e3 DUP3
0x8e4 ADD
0x8e5 MSTORE
0x8e6 SWAP2
0x8e7 SWAP1
0x8e8 SWAP3
0x8e9 AND
0x8ea PUSH1 0x24
0x8ec DUP3
0x8ed ADD
0x8ee MSTORE
0x8ef PUSH1 0x44
0x8f1 DUP2
0x8f2 ADD
0x8f3 SWAP2
0x8f4 SWAP1
0x8f5 SWAP2
0x8f6 MSTORE
0x8f7 PUSH1 0x64
0x8f9 ADD
0x8fa PUSH1 0x20
0x8fc PUSH1 0x40
0x8fe MLOAD
0x8ff DUP1
0x900 DUP4
0x901 SUB
0x902 DUP2
0x903 PUSH1 0x0
0x905 DUP8
0x906 DUP1
0x907 EXTCODESIZE
0x908 ISZERO
0x909 ISZERO
0x90a PUSH2 0x912
0x90d JUMPI
---
0x8aa: V887 = 0x1
0x8ac: V888 = 0xa0
0x8ae: V889 = 0x2
0x8b0: V890 = EXP 0x2 0xa0
0x8b1: V891 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8b2: V892 = AND 0xffffffffffffffffffffffffffffffffffffffff V157
0x8b3: V893 = 0x23b872dd
0x8b8: V894 = CALLER
0x8b9: V895 = ADDRESS
0x8bb: V896 = 0x0
0x8bd: V897 = 0x40
0x8bf: V898 = M[0x40]
0x8c0: V899 = 0x20
0x8c2: V900 = ADD 0x20 V898
0x8c3: M[V900] = 0x0
0x8c4: V901 = 0x40
0x8c6: V902 = M[0x40]
0x8c7: V903 = 0xe0
0x8c9: V904 = 0x2
0x8cb: V905 = EXP 0x2 0xe0
0x8cc: V906 = 0xffffffff
0x8d2: V907 = AND 0x23b872dd 0xffffffff
0x8d3: V908 = MUL 0x23b872dd 0x100000000000000000000000000000000000000000000000000000000
0x8d5: M[V902] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x8d6: V909 = 0x1
0x8d8: V910 = 0xa0
0x8da: V911 = 0x2
0x8dc: V912 = EXP 0x2 0xa0
0x8dd: V913 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8e0: V914 = AND 0xffffffffffffffffffffffffffffffffffffffff V894
0x8e1: V915 = 0x4
0x8e4: V916 = ADD V902 0x4
0x8e5: M[V916] = V914
0x8e9: V917 = AND 0xffffffffffffffffffffffffffffffffffffffff V895
0x8ea: V918 = 0x24
0x8ed: V919 = ADD V902 0x24
0x8ee: M[V919] = V917
0x8ef: V920 = 0x44
0x8f2: V921 = ADD V902 0x44
0x8f6: M[V921] = V164
0x8f7: V922 = 0x64
0x8f9: V923 = ADD 0x64 V902
0x8fa: V924 = 0x20
0x8fc: V925 = 0x40
0x8fe: V926 = M[0x40]
0x901: V927 = SUB V923 V926
0x903: V928 = 0x0
0x907: V929 = EXTCODESIZE V892
0x908: V930 = ISZERO V929
0x909: V931 = ISZERO V930
0x90a: V932 = 0x912
0x90d: JUMPI 0x912 V931
---
Entry stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, 0x0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0, V892, 0x23b872dd, V923, 0x20, V926, V927, V926, 0x0, V892]
Exit stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, 0x0, V892, 0x23b872dd, V923, 0x20, V926, V927, V926, 0x0, V892]

================================

Block 0x90e
[0x90e:0x911]
---
Predecessors: [0x8a9]
Successors: []
---
0x90e PUSH1 0x0
0x910 DUP1
0x911 REVERT
---
0x90e: V933 = 0x0
0x911: REVERT 0x0 0x0
---
Entry stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, 0x0, V892, 0x23b872dd, V923, 0x20, V926, V927, V926, 0x0, V892]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, 0x0, V892, 0x23b872dd, V923, 0x20, V926, V927, V926, 0x0, V892]

================================

Block 0x912
[0x912:0x91e]
---
Predecessors: [0x8a9]
Successors: [0x91f, 0x923]
---
0x912 JUMPDEST
0x913 PUSH2 0x2c6
0x916 GAS
0x917 SUB
0x918 CALL
0x919 ISZERO
0x91a ISZERO
0x91b PUSH2 0x923
0x91e JUMPI
---
0x912: JUMPDEST 
0x913: V934 = 0x2c6
0x916: V935 = GAS
0x917: V936 = SUB V935 0x2c6
0x918: V937 = CALL V936 V892 0x0 V926 V927 V926 0x20
0x919: V938 = ISZERO V937
0x91a: V939 = ISZERO V938
0x91b: V940 = 0x923
0x91e: JUMPI 0x923 V939
---
Entry stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, 0x0, V892, 0x23b872dd, V923, 0x20, V926, V927, V926, 0x0, V892]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, 0x0, V892, 0x23b872dd, V923]

================================

Block 0x91f
[0x91f:0x922]
---
Predecessors: [0x912]
Successors: []
---
0x91f PUSH1 0x0
0x921 DUP1
0x922 REVERT
---
0x91f: V941 = 0x0
0x922: REVERT 0x0 0x0
---
Entry stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, 0x0, V892, 0x23b872dd, V923]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, 0x0, V892, 0x23b872dd, V923]

================================

Block 0x923
[0x923:0x933]
---
Predecessors: [0x912]
Successors: [0x821, 0x934]
---
0x923 JUMPDEST
0x924 POP
0x925 POP
0x926 POP
0x927 PUSH1 0x40
0x929 MLOAD
0x92a DUP1
0x92b MLOAD
0x92c SWAP1
0x92d POP
0x92e ISZERO
0x92f ISZERO
0x930 PUSH2 0x821
0x933 JUMPI
---
0x923: JUMPDEST 
0x927: V942 = 0x40
0x929: V943 = M[0x40]
0x92b: V944 = M[V943]
0x92e: V945 = ISZERO V944
0x92f: V946 = ISZERO V945
0x930: V947 = 0x821
0x933: JUMPI 0x821 V946
---
Entry stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, 0x0, V892, 0x23b872dd, V923]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, 0x0]

================================

Block 0x934
[0x934:0x937]
---
Predecessors: [0x923]
Successors: []
---
0x934 PUSH1 0x0
0x936 DUP1
0x937 REVERT
---
0x934: V948 = 0x0
0x937: REVERT 0x0 0x0
---
Entry stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, 0x0, 0x0]

================================

Block 0x938
[0x938:0x93c]
---
Predecessors: []
Successors: [0x942]
---
0x938 JUMPDEST
0x939 PUSH2 0x942
0x93c JUMP
---
0x938: JUMPDEST 
0x939: V949 = 0x942
0x93c: JUMP 0x942
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x93d
[0x93d:0x941]
---
Predecessors: []
Successors: []
---
0x93d JUMPDEST
0x93e PUSH1 0x0
0x940 DUP1
0x941 REVERT
---
0x93d: JUMPDEST 
0x93e: V950 = 0x0
0x941: REVERT 0x0 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x942
[0x942:0x942]
---
Predecessors: [0x821, 0x938]
Successors: [0x943]
---
0x942 JUMPDEST
---
0x942: JUMPDEST 
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x943
[0x943:0x9c9]
---
Predecessors: [0x942]
Successors: [0x9ca]
---
0x943 JUMPDEST
0x944 PUSH1 0x1
0x946 PUSH1 0xa0
0x948 PUSH1 0x2
0x94a EXP
0x94b SUB
0x94c DUP10
0x94d DUP2
0x94e AND
0x94f PUSH1 0x0
0x951 SWAP1
0x952 DUP2
0x953 MSTORE
0x954 PUSH1 0x1
0x956 PUSH1 0x20
0x958 DUP2
0x959 SWAP1
0x95a MSTORE
0x95b PUSH1 0x40
0x95d SWAP1
0x95e SWAP2
0x95f SHA3
0x960 DUP1
0x961 SLOAD
0x962 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x977 NOT
0x978 SWAP1
0x979 DUP2
0x97a AND
0x97b DUP9
0x97c DUP6
0x97d AND
0x97e OR
0x97f DUP3
0x980 SSTORE
0x981 SWAP2
0x982 DUP2
0x983 ADD
0x984 DUP1
0x985 SLOAD
0x986 DUP4
0x987 AND
0x988 DUP8
0x989 DUP6
0x98a AND
0x98b OR
0x98c SWAP1
0x98d SSTORE
0x98e PUSH1 0x2
0x990 DUP2
0x991 ADD
0x992 DUP1
0x993 SLOAD
0x994 DUP4
0x995 AND
0x996 DUP13
0x997 DUP6
0x998 AND
0x999 OR
0x99a SWAP1
0x99b SSTORE
0x99c PUSH1 0x3
0x99e DUP2
0x99f ADD
0x9a0 DUP1
0x9a1 SLOAD
0x9a2 DUP4
0x9a3 AND
0x9a4 DUP12
0x9a5 DUP6
0x9a6 AND
0x9a7 OR
0x9a8 SWAP1
0x9a9 SSTORE
0x9aa PUSH1 0x4
0x9ac DUP2
0x9ad ADD
0x9ae DUP1
0x9af SLOAD
0x9b0 SWAP1
0x9b1 SWAP3
0x9b2 AND
0x9b3 CALLER
0x9b4 SWAP1
0x9b5 SWAP4
0x9b6 AND
0x9b7 SWAP3
0x9b8 SWAP1
0x9b9 SWAP3
0x9ba OR
0x9bb SWAP1
0x9bc SSTORE
0x9bd PUSH1 0x5
0x9bf DUP2
0x9c0 ADD
0x9c1 DUP8
0x9c2 SWAP1
0x9c3 SSTORE
0x9c4 PUSH1 0x6
0x9c6 ADD
0x9c7 DUP6
0x9c8 SWAP1
0x9c9 SSTORE
---
0x943: JUMPDEST 
0x944: V951 = 0x1
0x946: V952 = 0xa0
0x948: V953 = 0x2
0x94a: V954 = EXP 0x2 0xa0
0x94b: V955 = SUB 0x10000000000000000000000000000000000000000 0x1
0x94e: V956 = AND 0xffffffffffffffffffffffffffffffffffffffff V154
0x94f: V957 = 0x0
0x953: M[0x0] = V956
0x954: V958 = 0x1
0x956: V959 = 0x20
0x95a: M[0x20] = 0x1
0x95b: V960 = 0x40
0x95f: V961 = SHA3 0x0 0x40
0x961: V962 = S[V961]
0x962: V963 = 0xffffffffffffffffffffffffffffffffffffffff
0x977: V964 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x97a: V965 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V962
0x97d: V966 = AND 0xffffffffffffffffffffffffffffffffffffffff V167
0x97e: V967 = OR V966 V965
0x980: S[V961] = V967
0x983: V968 = ADD V961 0x1
0x985: V969 = S[V968]
0x987: V970 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V969
0x98a: V971 = AND 0xffffffffffffffffffffffffffffffffffffffff V170
0x98b: V972 = OR V971 V970
0x98d: S[V968] = V972
0x98e: V973 = 0x2
0x991: V974 = ADD V961 0x2
0x993: V975 = S[V974]
0x995: V976 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V975
0x998: V977 = AND 0xffffffffffffffffffffffffffffffffffffffff V157
0x999: V978 = OR V977 V976
0x99b: S[V974] = V978
0x99c: V979 = 0x3
0x99f: V980 = ADD V961 0x3
0x9a1: V981 = S[V980]
0x9a3: V982 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V981
0x9a6: V983 = AND 0xffffffffffffffffffffffffffffffffffffffff V160
0x9a7: V984 = OR V983 V982
0x9a9: S[V980] = V984
0x9aa: V985 = 0x4
0x9ad: V986 = ADD V961 0x4
0x9af: V987 = S[V986]
0x9b2: V988 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V987
0x9b3: V989 = CALLER
0x9b6: V990 = AND 0xffffffffffffffffffffffffffffffffffffffff V989
0x9ba: V991 = OR V990 V988
0x9bc: S[V986] = V991
0x9bd: V992 = 0x5
0x9c0: V993 = ADD V961 0x5
0x9c3: S[V993] = V162
0x9c4: V994 = 0x6
0x9c6: V995 = ADD 0x6 V961
0x9c9: S[V995] = V164
---
Entry stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, {0x0, 0xe8d4a51000, 0x9184e72a000, 0x5af3107a4000, 0x38d7ea4c68000, 0x2386f26fc10000, 0x16345785d8a0000, 0xde0b6b3a7640000}, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, {0x0, 0xe8d4a51000, 0x9184e72a000, 0x5af3107a4000, 0x38d7ea4c68000, 0x2386f26fc10000, 0x16345785d8a0000, 0xde0b6b3a7640000}, S0]

================================

Block 0x9ca
[0x9ca:0x9d4]
---
Predecessors: [0x943]
Successors: [0x9d5]
---
0x9ca JUMPDEST
0x9cb PUSH1 0x0
0x9cd DUP1
0x9ce SLOAD
0x9cf PUSH1 0xff
0x9d1 NOT
0x9d2 AND
0x9d3 SWAP1
0x9d4 SSTORE
---
0x9ca: JUMPDEST 
0x9cb: V996 = 0x0
0x9ce: V997 = S[0x0]
0x9cf: V998 = 0xff
0x9d1: V999 = NOT 0xff
0x9d2: V1000 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V997
0x9d4: S[0x0] = V1000
---
Entry stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, {0x0, 0xe8d4a51000, 0x9184e72a000, 0x5af3107a4000, 0x38d7ea4c68000, 0x2386f26fc10000, 0x16345785d8a0000, 0xde0b6b3a7640000}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, {0x0, 0xe8d4a51000, 0x9184e72a000, 0x5af3107a4000, 0x38d7ea4c68000, 0x2386f26fc10000, 0x16345785d8a0000, 0xde0b6b3a7640000}, S0]

================================

Block 0x9d5
[0x9d5:0x9df]
---
Predecessors: [0x9ca]
Successors: [0xe3]
---
0x9d5 JUMPDEST
0x9d6 POP
0x9d7 POP
0x9d8 POP
0x9d9 POP
0x9da POP
0x9db POP
0x9dc POP
0x9dd POP
0x9de POP
0x9df JUMP
---
0x9d5: JUMPDEST 
0x9df: JUMP 0xe3
---
Entry stack: [V12, 0xe3, V154, V157, V160, V162, V164, V167, V170, S1, S0]
Stack pops: 10
Stack additions: []
Exit stack: [V12]

================================

Block 0x9e0
[0x9e0:0x9fe]
---
Predecessors: [0x1ca]
Successors: [0x9ff]
---
0x9e0 JUMPDEST
0x9e1 PUSH1 0x1
0x9e3 PUSH1 0xa0
0x9e5 PUSH1 0x2
0x9e7 EXP
0x9e8 SUB
0x9e9 DUP1
0x9ea DUP3
0x9eb AND
0x9ec PUSH1 0x0
0x9ee SWAP1
0x9ef DUP2
0x9f0 MSTORE
0x9f1 PUSH1 0x1
0x9f3 PUSH1 0x20
0x9f5 MSTORE
0x9f6 PUSH1 0x40
0x9f8 SWAP1
0x9f9 SHA3
0x9fa PUSH1 0x2
0x9fc ADD
0x9fd SLOAD
0x9fe AND
---
0x9e0: JUMPDEST 
0x9e1: V1001 = 0x1
0x9e3: V1002 = 0xa0
0x9e5: V1003 = 0x2
0x9e7: V1004 = EXP 0x2 0xa0
0x9e8: V1005 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9eb: V1006 = AND V184 0xffffffffffffffffffffffffffffffffffffffff
0x9ec: V1007 = 0x0
0x9f0: M[0x0] = V1006
0x9f1: V1008 = 0x1
0x9f3: V1009 = 0x20
0x9f5: M[0x20] = 0x1
0x9f6: V1010 = 0x40
0x9f9: V1011 = SHA3 0x0 0x40
0x9fa: V1012 = 0x2
0x9fc: V1013 = ADD 0x2 V1011
0x9fd: V1014 = S[V1013]
0x9fe: V1015 = AND V1014 0xffffffffffffffffffffffffffffffffffffffff
---
Entry stack: [V12, 0x104, V184]
Stack pops: 1
Stack additions: [S0, V1015]
Exit stack: [V12, 0x104, V184, V1015]

================================

Block 0x9ff
[0x9ff:0xa03]
---
Predecessors: [0x9e0]
Successors: [0x104]
---
0x9ff JUMPDEST
0xa00 SWAP2
0xa01 SWAP1
0xa02 POP
0xa03 JUMP
---
0x9ff: JUMPDEST 
0xa03: JUMP 0x104
---
Entry stack: [V12, 0x104, V184, V1015]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, V1015]

================================

Block 0xa04
[0xa04:0xa49]
---
Predecessors: [0x205]
Successors: [0xa4a]
---
0xa04 JUMPDEST
0xa05 PUSH1 0x1
0xa07 PUSH1 0xa0
0xa09 PUSH1 0x2
0xa0b EXP
0xa0c SUB
0xa0d DUP1
0xa0e DUP3
0xa0f AND
0xa10 PUSH1 0x0
0xa12 SWAP1
0xa13 DUP2
0xa14 MSTORE
0xa15 PUSH1 0x1
0xa17 PUSH1 0x20
0xa19 MSTORE
0xa1a PUSH1 0x40
0xa1c SWAP1
0xa1d SHA3
0xa1e PUSH1 0x2
0xa20 DUP2
0xa21 ADD
0xa22 SLOAD
0xa23 PUSH1 0x3
0xa25 DUP3
0xa26 ADD
0xa27 SLOAD
0xa28 PUSH1 0x4
0xa2a DUP4
0xa2b ADD
0xa2c SLOAD
0xa2d PUSH1 0x5
0xa2f DUP5
0xa30 ADD
0xa31 SLOAD
0xa32 PUSH1 0x6
0xa34 DUP6
0xa35 ADD
0xa36 SLOAD
0xa37 PUSH1 0x7
0xa39 SWAP1
0xa3a SWAP6
0xa3b ADD
0xa3c SLOAD
0xa3d SWAP4
0xa3e DUP7
0xa3f AND
0xa40 SWAP6
0xa41 SWAP3
0xa42 DUP4
0xa43 AND
0xa44 SWAP5
0xa45 SWAP2
0xa46 SWAP1
0xa47 SWAP3
0xa48 AND
0xa49 SWAP3
---
0xa04: JUMPDEST 
0xa05: V1016 = 0x1
0xa07: V1017 = 0xa0
0xa09: V1018 = 0x2
0xa0b: V1019 = EXP 0x2 0xa0
0xa0c: V1020 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa0f: V1021 = AND V211 0xffffffffffffffffffffffffffffffffffffffff
0xa10: V1022 = 0x0
0xa14: M[0x0] = V1021
0xa15: V1023 = 0x1
0xa17: V1024 = 0x20
0xa19: M[0x20] = 0x1
0xa1a: V1025 = 0x40
0xa1d: V1026 = SHA3 0x0 0x40
0xa1e: V1027 = 0x2
0xa21: V1028 = ADD V1026 0x2
0xa22: V1029 = S[V1028]
0xa23: V1030 = 0x3
0xa26: V1031 = ADD V1026 0x3
0xa27: V1032 = S[V1031]
0xa28: V1033 = 0x4
0xa2b: V1034 = ADD V1026 0x4
0xa2c: V1035 = S[V1034]
0xa2d: V1036 = 0x5
0xa30: V1037 = ADD V1026 0x5
0xa31: V1038 = S[V1037]
0xa32: V1039 = 0x6
0xa35: V1040 = ADD V1026 0x6
0xa36: V1041 = S[V1040]
0xa37: V1042 = 0x7
0xa3b: V1043 = ADD V1026 0x7
0xa3c: V1044 = S[V1043]
0xa3f: V1045 = AND 0xffffffffffffffffffffffffffffffffffffffff V1029
0xa43: V1046 = AND 0xffffffffffffffffffffffffffffffffffffffff V1032
0xa48: V1047 = AND 0xffffffffffffffffffffffffffffffffffffffff V1035
---
Entry stack: [V12, 0x219, V211]
Stack pops: 1
Stack additions: [S0, V1045, V1046, V1047, V1038, V1041, V1044]
Exit stack: [V12, 0x219, V211, V1045, V1046, V1047, V1038, V1041, V1044]

================================

Block 0xa4a
[0xa4a:0xa52]
---
Predecessors: [0xa04]
Successors: [0x219]
---
0xa4a JUMPDEST
0xa4b SWAP2
0xa4c SWAP4
0xa4d SWAP6
0xa4e POP
0xa4f SWAP2
0xa50 SWAP4
0xa51 SWAP6
0xa52 JUMP
---
0xa4a: JUMPDEST 
0xa52: JUMP 0x219
---
Entry stack: [V12, 0x219, V211, V1045, V1046, V1047, V1038, V1041, V1044]
Stack pops: 8
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V12, V1045, V1046, V1047, V1038, V1041, V1044]

================================

Block 0xa53
[0xa53:0xa64]
---
Predecessors: [0x269]
Successors: [0x13c]
---
0xa53 JUMPDEST
0xa54 PUSH1 0x2
0xa56 PUSH1 0x20
0xa58 MSTORE
0xa59 PUSH1 0x0
0xa5b SWAP1
0xa5c DUP2
0xa5d MSTORE
0xa5e PUSH1 0x40
0xa60 SWAP1
0xa61 SHA3
0xa62 SLOAD
0xa63 DUP2
0xa64 JUMP
---
0xa53: JUMPDEST 
0xa54: V1048 = 0x2
0xa56: V1049 = 0x20
0xa58: M[0x20] = 0x2
0xa59: V1050 = 0x0
0xa5d: M[0x0] = V249
0xa5e: V1051 = 0x40
0xa61: V1052 = SHA3 0x0 0x40
0xa62: V1053 = S[V1052]
0xa64: JUMP 0x13c
---
Entry stack: [V12, 0x13c, V249]
Stack pops: 2
Stack additions: [S1, V1053]
Exit stack: [V12, 0x13c, V1053]

================================

Block 0xa65
[0xa65:0xa81]
---
Predecessors: [0x29a]
Successors: [0xa82]
---
0xa65 JUMPDEST
0xa66 PUSH1 0x1
0xa68 PUSH1 0xa0
0xa6a PUSH1 0x2
0xa6c EXP
0xa6d SUB
0xa6e DUP2
0xa6f AND
0xa70 PUSH1 0x0
0xa72 SWAP1
0xa73 DUP2
0xa74 MSTORE
0xa75 PUSH1 0x1
0xa77 PUSH1 0x20
0xa79 MSTORE
0xa7a PUSH1 0x40
0xa7c SWAP1
0xa7d SHA3
0xa7e PUSH1 0x6
0xa80 ADD
0xa81 SLOAD
---
0xa65: JUMPDEST 
0xa66: V1054 = 0x1
0xa68: V1055 = 0xa0
0xa6a: V1056 = 0x2
0xa6c: V1057 = EXP 0x2 0xa0
0xa6d: V1058 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa6f: V1059 = AND V270 0xffffffffffffffffffffffffffffffffffffffff
0xa70: V1060 = 0x0
0xa74: M[0x0] = V1059
0xa75: V1061 = 0x1
0xa77: V1062 = 0x20
0xa79: M[0x20] = 0x1
0xa7a: V1063 = 0x40
0xa7d: V1064 = SHA3 0x0 0x40
0xa7e: V1065 = 0x6
0xa80: V1066 = ADD 0x6 V1064
0xa81: V1067 = S[V1066]
---
Entry stack: [V12, 0x13c, V270]
Stack pops: 1
Stack additions: [S0, V1067]
Exit stack: [V12, 0x13c, V270, V1067]

================================

Block 0xa82
[0xa82:0xa86]
---
Predecessors: [0xa65]
Successors: [0x13c]
---
0xa82 JUMPDEST
0xa83 SWAP2
0xa84 SWAP1
0xa85 POP
0xa86 JUMP
---
0xa82: JUMPDEST 
0xa86: JUMP 0x13c
---
Entry stack: [V12, 0x13c, V270, V1067]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, V1067]

================================

Block 0xa87
[0xa87:0xab0]
---
Predecessors: [0x2cb]
Successors: [0xab1, 0xacf]
---
0xa87 JUMPDEST
0xa88 PUSH1 0x1
0xa8a PUSH1 0xa0
0xa8c PUSH1 0x2
0xa8e EXP
0xa8f SUB
0xa90 DUP1
0xa91 DUP4
0xa92 AND
0xa93 PUSH1 0x0
0xa95 SWAP1
0xa96 DUP2
0xa97 MSTORE
0xa98 PUSH1 0x1
0xa9a PUSH1 0x20
0xa9c DUP2
0xa9d SWAP1
0xa9e MSTORE
0xa9f PUSH1 0x40
0xaa1 SWAP1
0xaa2 SWAP2
0xaa3 SHA3
0xaa4 ADD
0xaa5 SLOAD
0xaa6 CALLER
0xaa7 DUP3
0xaa8 AND
0xaa9 SWAP2
0xaaa AND
0xaab EQ
0xaac ISZERO
0xaad PUSH2 0xacf
0xab0 JUMPI
---
0xa87: JUMPDEST 
0xa88: V1068 = 0x1
0xa8a: V1069 = 0xa0
0xa8c: V1070 = 0x2
0xa8e: V1071 = EXP 0x2 0xa0
0xa8f: V1072 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa92: V1073 = AND V291 0xffffffffffffffffffffffffffffffffffffffff
0xa93: V1074 = 0x0
0xa97: M[0x0] = V1073
0xa98: V1075 = 0x1
0xa9a: V1076 = 0x20
0xa9e: M[0x20] = 0x1
0xa9f: V1077 = 0x40
0xaa3: V1078 = SHA3 0x0 0x40
0xaa4: V1079 = ADD V1078 0x1
0xaa5: V1080 = S[V1079]
0xaa6: V1081 = CALLER
0xaa8: V1082 = AND 0xffffffffffffffffffffffffffffffffffffffff V1081
0xaaa: V1083 = AND 0xffffffffffffffffffffffffffffffffffffffff V1080
0xaab: V1084 = EQ V1083 V1082
0xaac: V1085 = ISZERO V1084
0xaad: V1086 = 0xacf
0xab0: JUMPI 0xacf V1085
---
Entry stack: [V12, 0xe3, V291, V293]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0xe3, V291, V293]

================================

Block 0xab1
[0xab1:0xace]
---
Predecessors: [0xa87]
Successors: [0xacf]
---
0xab1 PUSH1 0x1
0xab3 PUSH1 0xa0
0xab5 PUSH1 0x2
0xab7 EXP
0xab8 SUB
0xab9 DUP3
0xaba AND
0xabb PUSH1 0x0
0xabd SWAP1
0xabe DUP2
0xabf MSTORE
0xac0 PUSH1 0x1
0xac2 PUSH1 0x20
0xac4 MSTORE
0xac5 PUSH1 0x40
0xac7 SWAP1
0xac8 SHA3
0xac9 PUSH1 0x6
0xacb ADD
0xacc DUP2
0xacd SWAP1
0xace SSTORE
---
0xab1: V1087 = 0x1
0xab3: V1088 = 0xa0
0xab5: V1089 = 0x2
0xab7: V1090 = EXP 0x2 0xa0
0xab8: V1091 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaba: V1092 = AND V291 0xffffffffffffffffffffffffffffffffffffffff
0xabb: V1093 = 0x0
0xabf: M[0x0] = V1092
0xac0: V1094 = 0x1
0xac2: V1095 = 0x20
0xac4: M[0x20] = 0x1
0xac5: V1096 = 0x40
0xac8: V1097 = SHA3 0x0 0x40
0xac9: V1098 = 0x6
0xacb: V1099 = ADD 0x6 V1097
0xace: S[V1099] = V293
---
Entry stack: [V12, 0xe3, V291, V293]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0xe3, V291, V293]

================================

Block 0xacf
[0xacf:0xacf]
---
Predecessors: [0xa87, 0xab1, 0xe32, 0xe4f, 0xecb]
Successors: [0xad0]
---
0xacf JUMPDEST
---
0xacf: JUMPDEST 
---
Entry stack: [V12, 0xe3, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe3, S1, S0]

================================

Block 0xad0
[0xad0:0xad3]
---
Predecessors: [0xacf]
Successors: [0xe3]
---
0xad0 JUMPDEST
0xad1 POP
0xad2 POP
0xad3 JUMP
---
0xad0: JUMPDEST 
0xad3: JUMP 0xe3
---
Entry stack: [V12, 0xe3, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0xad4
[0xad4:0xb02]
---
Predecessors: [0x2ef]
Successors: [0xb03, 0xe23]
---
0xad4 JUMPDEST
0xad5 PUSH1 0x1
0xad7 PUSH1 0xa0
0xad9 PUSH1 0x2
0xadb EXP
0xadc SUB
0xadd DUP1
0xade DUP5
0xadf AND
0xae0 PUSH1 0x0
0xae2 SWAP1
0xae3 DUP2
0xae4 MSTORE
0xae5 PUSH1 0x1
0xae7 PUSH1 0x20
0xae9 DUP2
0xaea SWAP1
0xaeb MSTORE
0xaec PUSH1 0x40
0xaee DUP3
0xaef SHA3
0xaf0 ADD
0xaf1 SLOAD
0xaf2 SWAP1
0xaf3 SWAP2
0xaf4 DUP3
0xaf5 SWAP2
0xaf6 DUP3
0xaf7 SWAP2
0xaf8 CALLER
0xaf9 DUP2
0xafa AND
0xafb SWAP2
0xafc AND
0xafd EQ
0xafe ISZERO
0xaff PUSH2 0xe23
0xb02 JUMPI
---
0xad4: JUMPDEST 
0xad5: V1100 = 0x1
0xad7: V1101 = 0xa0
0xad9: V1102 = 0x2
0xadb: V1103 = EXP 0x2 0xa0
0xadc: V1104 = SUB 0x10000000000000000000000000000000000000000 0x1
0xadf: V1105 = AND V307 0xffffffffffffffffffffffffffffffffffffffff
0xae0: V1106 = 0x0
0xae4: M[0x0] = V1105
0xae5: V1107 = 0x1
0xae7: V1108 = 0x20
0xaeb: M[0x20] = 0x1
0xaec: V1109 = 0x40
0xaef: V1110 = SHA3 0x0 0x40
0xaf0: V1111 = ADD V1110 0x1
0xaf1: V1112 = S[V1111]
0xaf8: V1113 = CALLER
0xafa: V1114 = AND 0xffffffffffffffffffffffffffffffffffffffff V1113
0xafc: V1115 = AND V1112 0xffffffffffffffffffffffffffffffffffffffff
0xafd: V1116 = EQ V1115 V1114
0xafe: V1117 = ISZERO V1116
0xaff: V1118 = 0xe23
0xb02: JUMPI 0xe23 V1117
---
Entry stack: [V12, 0x30c, V307, V310, V312]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, 0x0, 0x0]
Exit stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, 0x0]

================================

Block 0xb03
[0xb03:0xb26]
---
Predecessors: [0xad4]
Successors: [0xb27, 0xb47]
---
0xb03 PUSH1 0x1
0xb05 PUSH1 0xa0
0xb07 PUSH1 0x2
0xb09 EXP
0xb0a SUB
0xb0b DUP1
0xb0c DUP8
0xb0d AND
0xb0e PUSH1 0x0
0xb10 SWAP1
0xb11 DUP2
0xb12 MSTORE
0xb13 PUSH1 0x1
0xb15 PUSH1 0x20
0xb17 MSTORE
0xb18 PUSH1 0x40
0xb1a SWAP1
0xb1b SHA3
0xb1c PUSH1 0x2
0xb1e ADD
0xb1f SLOAD
0xb20 AND
0xb21 ISZERO
0xb22 DUP1
0xb23 PUSH2 0xb47
0xb26 JUMPI
---
0xb03: V1119 = 0x1
0xb05: V1120 = 0xa0
0xb07: V1121 = 0x2
0xb09: V1122 = EXP 0x2 0xa0
0xb0a: V1123 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb0d: V1124 = AND V307 0xffffffffffffffffffffffffffffffffffffffff
0xb0e: V1125 = 0x0
0xb12: M[0x0] = V1124
0xb13: V1126 = 0x1
0xb15: V1127 = 0x20
0xb17: M[0x20] = 0x1
0xb18: V1128 = 0x40
0xb1b: V1129 = SHA3 0x0 0x40
0xb1c: V1130 = 0x2
0xb1e: V1131 = ADD 0x2 V1129
0xb1f: V1132 = S[V1131]
0xb20: V1133 = AND V1132 0xffffffffffffffffffffffffffffffffffffffff
0xb21: V1134 = ISZERO V1133
0xb23: V1135 = 0xb47
0xb26: JUMPI 0xb47 V1134
---
Entry stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, V1134]
Exit stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, 0x0, V1134]

================================

Block 0xb27
[0xb27:0xb46]
---
Predecessors: [0xb03]
Successors: [0xb47]
---
0xb27 POP
0xb28 PUSH1 0x1
0xb2a PUSH1 0xa0
0xb2c PUSH1 0x2
0xb2e EXP
0xb2f SUB
0xb30 DUP7
0xb31 DUP2
0xb32 AND
0xb33 PUSH1 0x0
0xb35 SWAP1
0xb36 DUP2
0xb37 MSTORE
0xb38 PUSH1 0x1
0xb3a PUSH1 0x20
0xb3c MSTORE
0xb3d PUSH1 0x40
0xb3f SWAP1
0xb40 SHA3
0xb41 PUSH1 0x2
0xb43 ADD
0xb44 SLOAD
0xb45 AND
0xb46 ISZERO
---
0xb28: V1136 = 0x1
0xb2a: V1137 = 0xa0
0xb2c: V1138 = 0x2
0xb2e: V1139 = EXP 0x2 0xa0
0xb2f: V1140 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb32: V1141 = AND 0xffffffffffffffffffffffffffffffffffffffff V307
0xb33: V1142 = 0x0
0xb37: M[0x0] = V1141
0xb38: V1143 = 0x1
0xb3a: V1144 = 0x20
0xb3c: M[0x20] = 0x1
0xb3d: V1145 = 0x40
0xb40: V1146 = SHA3 0x0 0x40
0xb41: V1147 = 0x2
0xb43: V1148 = ADD 0x2 V1146
0xb44: V1149 = S[V1148]
0xb45: V1150 = AND V1149 0xffffffffffffffffffffffffffffffffffffffff
0xb46: V1151 = ISZERO V1150
---
Entry stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, 0x0, V1134]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, V1151]
Exit stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, 0x0, V1151]

================================

Block 0xb47
[0xb47:0xb4c]
---
Predecessors: [0xb03, 0xb27]
Successors: [0xb4d, 0xbee]
---
0xb47 JUMPDEST
0xb48 ISZERO
0xb49 PUSH2 0xbee
0xb4c JUMPI
---
0xb47: JUMPDEST 
0xb48: V1152 = ISZERO S0
0xb49: V1153 = 0xbee
0xb4c: JUMPI 0xbee V1152
---
Entry stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, 0x0]

================================

Block 0xb4d
[0xb4d:0xb5f]
---
Predecessors: [0xb47]
Successors: [0xb60]
---
0xb4d PUSH8 0xde0b6b3a7640000
0xb56 PUSH7 0x8e1bc9bf04000
0xb5e DUP6
0xb5f MUL
---
0xb4d: V1154 = 0xde0b6b3a7640000
0xb56: V1155 = 0x8e1bc9bf04000
0xb5f: V1156 = MUL V312 0x8e1bc9bf04000
---
Entry stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0xde0b6b3a7640000, V1156]
Exit stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, 0x0, 0xde0b6b3a7640000, V1156]

================================

Block 0xb60
[0xb60:0xbe4]
---
Predecessors: [0xb4d]
Successors: [0xbe5, 0xbe9]
---
0xb60 JUMPDEST
0xb61 PUSH1 0x1
0xb63 PUSH1 0xa0
0xb65 PUSH1 0x2
0xb67 EXP
0xb68 SUB
0xb69 DUP1
0xb6a DUP10
0xb6b AND
0xb6c PUSH1 0x0
0xb6e SWAP1
0xb6f DUP2
0xb70 MSTORE
0xb71 PUSH1 0x1
0xb73 PUSH1 0x20
0xb75 SWAP1
0xb76 DUP2
0xb77 MSTORE
0xb78 PUSH1 0x40
0xb7a DUP1
0xb7b DUP4
0xb7c SHA3
0xb7d PUSH1 0x7
0xb7f ADD
0xb80 DUP1
0xb81 SLOAD
0xb82 DUP12
0xb83 SWAP1
0xb84 SUB
0xb85 SWAP1
0xb86 SSTORE
0xb87 SWAP2
0xb88 DUP1
0xb89 MSTORE
0xb8a PUSH1 0x2
0xb8c SWAP1
0xb8d MSTORE
0xb8e PUSH32 0xac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b
0xbaf DUP1
0xbb0 SLOAD
0xbb1 SWAP5
0xbb2 SWAP1
0xbb3 SWAP4
0xbb4 DIV
0xbb5 SWAP4
0xbb6 DUP5
0xbb7 ADD
0xbb8 SWAP1
0xbb9 SWAP3
0xbba SSTORE
0xbbb SWAP2
0xbbc SWAP4
0xbbd POP
0xbbe SWAP1
0xbbf DUP7
0xbc0 AND
0xbc1 SWAP1
0xbc2 DUP4
0xbc3 DUP7
0xbc4 SUB
0xbc5 DUP1
0xbc6 ISZERO
0xbc7 PUSH2 0x8fc
0xbca MUL
0xbcb SWAP2
0xbcc MLOAD
0xbcd PUSH1 0x0
0xbcf PUSH1 0x40
0xbd1 MLOAD
0xbd2 DUP1
0xbd3 DUP4
0xbd4 SUB
0xbd5 DUP2
0xbd6 DUP6
0xbd7 DUP9
0xbd8 DUP9
0xbd9 CALL
0xbda SWAP4
0xbdb POP
0xbdc POP
0xbdd POP
0xbde POP
0xbdf ISZERO
0xbe0 ISZERO
0xbe1 PUSH2 0xbe9
0xbe4 JUMPI
---
0xb60: JUMPDEST 
0xb61: V1157 = 0x1
0xb63: V1158 = 0xa0
0xb65: V1159 = 0x2
0xb67: V1160 = EXP 0x2 0xa0
0xb68: V1161 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb6b: V1162 = AND V307 0xffffffffffffffffffffffffffffffffffffffff
0xb6c: V1163 = 0x0
0xb70: M[0x0] = V1162
0xb71: V1164 = 0x1
0xb73: V1165 = 0x20
0xb77: M[0x20] = 0x1
0xb78: V1166 = 0x40
0xb7c: V1167 = SHA3 0x0 0x40
0xb7d: V1168 = 0x7
0xb7f: V1169 = ADD 0x7 V1167
0xb81: V1170 = S[V1169]
0xb84: V1171 = SUB V1170 V312
0xb86: S[V1169] = V1171
0xb89: M[0x0] = 0x0
0xb8a: V1172 = 0x2
0xb8d: M[0x20] = 0x2
0xb8e: V1173 = 0xac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b
0xbb0: V1174 = S[0xac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b]
0xbb4: V1175 = DIV V1156 0xde0b6b3a7640000
0xbb7: V1176 = ADD V1175 V1174
0xbba: S[0xac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b] = V1176
0xbc0: V1177 = AND V310 0xffffffffffffffffffffffffffffffffffffffff
0xbc4: V1178 = SUB V312 V1175
0xbc6: V1179 = ISZERO V1178
0xbc7: V1180 = 0x8fc
0xbca: V1181 = MUL 0x8fc V1179
0xbcc: V1182 = M[0x40]
0xbcd: V1183 = 0x0
0xbcf: V1184 = 0x40
0xbd1: V1185 = M[0x40]
0xbd4: V1186 = SUB V1182 V1185
0xbd9: V1187 = CALL V1181 V1177 V1178 V1185 V1186 V1185 0x0
0xbdf: V1188 = ISZERO V1187
0xbe0: V1189 = ISZERO V1188
0xbe1: V1190 = 0xbe9
0xbe4: JUMPI 0xbe9 V1189
---
Entry stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, 0x0, 0xde0b6b3a7640000, V1156]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, V1175, S2]
Exit stack: [V12, 0x30c, V307, V310, V312, 0x0, V1175, 0x0]

================================

Block 0xbe5
[0xbe5:0xbe8]
---
Predecessors: [0xb60]
Successors: []
---
0xbe5 PUSH1 0x0
0xbe7 DUP1
0xbe8 REVERT
---
0xbe5: V1191 = 0x0
0xbe8: REVERT 0x0 0x0
---
Entry stack: [V12, 0x30c, V307, V310, V312, 0x0, V1175, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x30c, V307, V310, V312, 0x0, V1175, 0x0]

================================

Block 0xbe9
[0xbe9:0xbed]
---
Predecessors: [0xb60]
Successors: [0xe1a]
---
0xbe9 JUMPDEST
0xbea PUSH2 0xe1a
0xbed JUMP
---
0xbe9: JUMPDEST 
0xbea: V1192 = 0xe1a
0xbed: JUMP 0xe1a
---
Entry stack: [V12, 0x30c, V307, V310, V312, 0x0, V1175, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x30c, V307, V310, V312, 0x0, V1175, 0x0]

================================

Block 0xbee
[0xbee:0xc45]
---
Predecessors: [0xb47]
Successors: [0xc46, 0xc4a]
---
0xbee JUMPDEST
0xbef PUSH1 0x1
0xbf1 PUSH1 0xa0
0xbf3 PUSH1 0x2
0xbf5 EXP
0xbf6 SUB
0xbf7 DUP1
0xbf8 DUP8
0xbf9 AND
0xbfa PUSH1 0x0
0xbfc SWAP1
0xbfd DUP2
0xbfe MSTORE
0xbff PUSH1 0x1
0xc01 PUSH1 0x20
0xc03 MSTORE
0xc04 PUSH1 0x40
0xc06 DUP1
0xc07 DUP3
0xc08 SHA3
0xc09 PUSH1 0x2
0xc0b ADD
0xc0c SLOAD
0xc0d SWAP1
0xc0e SWAP3
0xc0f AND
0xc10 SWAP2
0xc11 PUSH4 0x313ce567
0xc16 SWAP2
0xc17 SWAP1
0xc18 MLOAD
0xc19 PUSH1 0x20
0xc1b ADD
0xc1c MSTORE
0xc1d PUSH1 0x40
0xc1f MLOAD
0xc20 DUP2
0xc21 PUSH4 0xffffffff
0xc26 AND
0xc27 PUSH1 0xe0
0xc29 PUSH1 0x2
0xc2b EXP
0xc2c MUL
0xc2d DUP2
0xc2e MSTORE
0xc2f PUSH1 0x4
0xc31 ADD
0xc32 PUSH1 0x20
0xc34 PUSH1 0x40
0xc36 MLOAD
0xc37 DUP1
0xc38 DUP4
0xc39 SUB
0xc3a DUP2
0xc3b PUSH1 0x0
0xc3d DUP8
0xc3e DUP1
0xc3f EXTCODESIZE
0xc40 ISZERO
0xc41 ISZERO
0xc42 PUSH2 0xc4a
0xc45 JUMPI
---
0xbee: JUMPDEST 
0xbef: V1193 = 0x1
0xbf1: V1194 = 0xa0
0xbf3: V1195 = 0x2
0xbf5: V1196 = EXP 0x2 0xa0
0xbf6: V1197 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbf9: V1198 = AND V307 0xffffffffffffffffffffffffffffffffffffffff
0xbfa: V1199 = 0x0
0xbfe: M[0x0] = V1198
0xbff: V1200 = 0x1
0xc01: V1201 = 0x20
0xc03: M[0x20] = 0x1
0xc04: V1202 = 0x40
0xc08: V1203 = SHA3 0x0 0x40
0xc09: V1204 = 0x2
0xc0b: V1205 = ADD 0x2 V1203
0xc0c: V1206 = S[V1205]
0xc0f: V1207 = AND 0xffffffffffffffffffffffffffffffffffffffff V1206
0xc11: V1208 = 0x313ce567
0xc18: V1209 = M[0x40]
0xc19: V1210 = 0x20
0xc1b: V1211 = ADD 0x20 V1209
0xc1c: M[V1211] = 0x0
0xc1d: V1212 = 0x40
0xc1f: V1213 = M[0x40]
0xc21: V1214 = 0xffffffff
0xc26: V1215 = AND 0xffffffff 0x313ce567
0xc27: V1216 = 0xe0
0xc29: V1217 = 0x2
0xc2b: V1218 = EXP 0x2 0xe0
0xc2c: V1219 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x313ce567
0xc2e: M[V1213] = 0x313ce56700000000000000000000000000000000000000000000000000000000
0xc2f: V1220 = 0x4
0xc31: V1221 = ADD 0x4 V1213
0xc32: V1222 = 0x20
0xc34: V1223 = 0x40
0xc36: V1224 = M[0x40]
0xc39: V1225 = SUB V1221 V1224
0xc3b: V1226 = 0x0
0xc3f: V1227 = EXTCODESIZE V1207
0xc40: V1228 = ISZERO V1227
0xc41: V1229 = ISZERO V1228
0xc42: V1230 = 0xc4a
0xc45: JUMPI 0xc4a V1229
---
Entry stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, V1207, 0x313ce567, V1221, 0x20, V1224, V1225, V1224, 0x0, V1207]
Exit stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, 0x0, V1207, 0x313ce567, V1221, 0x20, V1224, V1225, V1224, 0x0, V1207]

================================

Block 0xc46
[0xc46:0xc49]
---
Predecessors: [0xbee]
Successors: []
---
0xc46 PUSH1 0x0
0xc48 DUP1
0xc49 REVERT
---
0xc46: V1231 = 0x0
0xc49: REVERT 0x0 0x0
---
Entry stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, 0x0, V1207, 0x313ce567, V1221, 0x20, V1224, V1225, V1224, 0x0, V1207]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, 0x0, V1207, 0x313ce567, V1221, 0x20, V1224, V1225, V1224, 0x0, V1207]

================================

Block 0xc4a
[0xc4a:0xc56]
---
Predecessors: [0xbee]
Successors: [0xc57, 0xc5b]
---
0xc4a JUMPDEST
0xc4b PUSH2 0x2c6
0xc4e GAS
0xc4f SUB
0xc50 CALL
0xc51 ISZERO
0xc52 ISZERO
0xc53 PUSH2 0xc5b
0xc56 JUMPI
---
0xc4a: JUMPDEST 
0xc4b: V1232 = 0x2c6
0xc4e: V1233 = GAS
0xc4f: V1234 = SUB V1233 0x2c6
0xc50: V1235 = CALL V1234 V1207 0x0 V1224 V1225 V1224 0x20
0xc51: V1236 = ISZERO V1235
0xc52: V1237 = ISZERO V1236
0xc53: V1238 = 0xc5b
0xc56: JUMPI 0xc5b V1237
---
Entry stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, 0x0, V1207, 0x313ce567, V1221, 0x20, V1224, V1225, V1224, 0x0, V1207]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, 0x0, V1207, 0x313ce567, V1221]

================================

Block 0xc57
[0xc57:0xc5a]
---
Predecessors: [0xc4a]
Successors: []
---
0xc57 PUSH1 0x0
0xc59 DUP1
0xc5a REVERT
---
0xc57: V1239 = 0x0
0xc5a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, 0x0, V1207, 0x313ce567, V1221]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, 0x0, V1207, 0x313ce567, V1221]

================================

Block 0xc5b
[0xc5b:0xc72]
---
Predecessors: [0xc4a]
Successors: [0xc73, 0xc8e]
---
0xc5b JUMPDEST
0xc5c POP
0xc5d POP
0xc5e POP
0xc5f PUSH1 0x40
0xc61 MLOAD
0xc62 DUP1
0xc63 MLOAD
0xc64 PUSH1 0xff
0xc66 AND
0xc67 SWAP2
0xc68 POP
0xc69 POP
0xc6a PUSH1 0x12
0xc6c DUP2
0xc6d EQ
0xc6e ISZERO
0xc6f PUSH2 0xc8e
0xc72 JUMPI
---
0xc5b: JUMPDEST 
0xc5f: V1240 = 0x40
0xc61: V1241 = M[0x40]
0xc63: V1242 = M[V1241]
0xc64: V1243 = 0xff
0xc66: V1244 = AND 0xff V1242
0xc6a: V1245 = 0x12
0xc6d: V1246 = EQ V1244 0x12
0xc6e: V1247 = ISZERO V1246
0xc6f: V1248 = 0xc8e
0xc72: JUMPI 0xc8e V1247
---
Entry stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, 0x0, V1207, 0x313ce567, V1221]
Stack pops: 4
Stack additions: [V1244]
Exit stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, V1244]

================================

Block 0xc73
[0xc73:0xc85]
---
Predecessors: [0xc5b]
Successors: [0xc86]
---
0xc73 PUSH8 0xde0b6b3a7640000
0xc7c PUSH7 0x8e1bc9bf04000
0xc84 DUP6
0xc85 MUL
---
0xc73: V1249 = 0xde0b6b3a7640000
0xc7c: V1250 = 0x8e1bc9bf04000
0xc85: V1251 = MUL V312 0x8e1bc9bf04000
---
Entry stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, V1244]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0xde0b6b3a7640000, V1251]
Exit stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, V1244, 0xde0b6b3a7640000, V1251]

================================

Block 0xc86
[0xc86:0xc8d]
---
Predecessors: [0xc73, 0xc98, 0xcc0, 0xce7, 0xd0e, 0xd33]
Successors: [0xd69]
---
0xc86 JUMPDEST
0xc87 DIV
0xc88 SWAP2
0xc89 POP
0xc8a PUSH2 0xd69
0xc8d JUMP
---
0xc86: JUMPDEST 
0xc87: V1252 = DIV S0 {0x9184e72a000, 0x5af3107a4000, 0x38d7ea4c68000, 0x2386f26fc10000, 0x16345785d8a0000, 0xde0b6b3a7640000}
0xc8a: V1253 = 0xd69
0xc8d: JUMP 0xd69
---
Entry stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, V1244, {0x9184e72a000, 0x5af3107a4000, 0x38d7ea4c68000, 0x2386f26fc10000, 0x16345785d8a0000, 0xde0b6b3a7640000}, S0]
Stack pops: 4
Stack additions: [V1252, S2]
Exit stack: [V12, 0x30c, V307, V310, V312, 0x0, V1252, V1244]

================================

Block 0xc8e
[0xc8e:0xc97]
---
Predecessors: [0xc5b]
Successors: [0xc98, 0xcb6]
---
0xc8e JUMPDEST
0xc8f DUP1
0xc90 PUSH1 0x11
0xc92 EQ
0xc93 ISZERO
0xc94 PUSH2 0xcb6
0xc97 JUMPI
---
0xc8e: JUMPDEST 
0xc90: V1254 = 0x11
0xc92: V1255 = EQ 0x11 V1244
0xc93: V1256 = ISZERO V1255
0xc94: V1257 = 0xcb6
0xc97: JUMPI 0xcb6 V1256
---
Entry stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, V1244]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, V1244]

================================

Block 0xc98
[0xc98:0xcad]
---
Predecessors: [0xc8e]
Successors: [0xc86]
---
0xc98 PUSH8 0x16345785d8a0000
0xca1 PUSH6 0xe35fa931a000
0xca8 DUP6
0xca9 MUL
0xcaa PUSH2 0xc86
0xcad JUMP
---
0xc98: V1258 = 0x16345785d8a0000
0xca1: V1259 = 0xe35fa931a000
0xca9: V1260 = MUL V312 0xe35fa931a000
0xcaa: V1261 = 0xc86
0xcad: JUMP 0xc86
---
Entry stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, V1244]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x16345785d8a0000, V1260]
Exit stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, V1244, 0x16345785d8a0000, V1260]

================================

Block 0xcae
[0xcae:0xcb5]
---
Predecessors: []
Successors: [0xd69]
---
0xcae JUMPDEST
0xcaf DIV
0xcb0 SWAP2
0xcb1 POP
0xcb2 PUSH2 0xd69
0xcb5 JUMP
---
0xcae: JUMPDEST 
0xcaf: V1262 = DIV S0 S1
0xcb2: V1263 = 0xd69
0xcb5: JUMP 0xd69
---
Entry stack: []
Stack pops: 4
Stack additions: [V1262, S2]
Exit stack: [V1262, S2]

================================

Block 0xcb6
[0xcb6:0xcbf]
---
Predecessors: [0xc8e]
Successors: [0xcc0, 0xcdd]
---
0xcb6 JUMPDEST
0xcb7 DUP1
0xcb8 PUSH1 0x10
0xcba EQ
0xcbb ISZERO
0xcbc PUSH2 0xcdd
0xcbf JUMPI
---
0xcb6: JUMPDEST 
0xcb8: V1264 = 0x10
0xcba: V1265 = EQ 0x10 V1244
0xcbb: V1266 = ISZERO V1265
0xcbc: V1267 = 0xcdd
0xcbf: JUMPI 0xcdd V1266
---
Entry stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, V1244]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, V1244]

================================

Block 0xcc0
[0xcc0:0xcd4]
---
Predecessors: [0xcb6]
Successors: [0xc86]
---
0xcc0 PUSH7 0x2386f26fc10000
0xcc8 PUSH6 0x16bcc41e9000
0xccf DUP6
0xcd0 MUL
0xcd1 PUSH2 0xc86
0xcd4 JUMP
---
0xcc0: V1268 = 0x2386f26fc10000
0xcc8: V1269 = 0x16bcc41e9000
0xcd0: V1270 = MUL V312 0x16bcc41e9000
0xcd1: V1271 = 0xc86
0xcd4: JUMP 0xc86
---
Entry stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, V1244]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x2386f26fc10000, V1270]
Exit stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, V1244, 0x2386f26fc10000, V1270]

================================

Block 0xcd5
[0xcd5:0xcdc]
---
Predecessors: []
Successors: [0xd69]
---
0xcd5 JUMPDEST
0xcd6 DIV
0xcd7 SWAP2
0xcd8 POP
0xcd9 PUSH2 0xd69
0xcdc JUMP
---
0xcd5: JUMPDEST 
0xcd6: V1272 = DIV S0 S1
0xcd9: V1273 = 0xd69
0xcdc: JUMP 0xd69
---
Entry stack: []
Stack pops: 4
Stack additions: [V1272, S2]
Exit stack: [V1272, S2]

================================

Block 0xcdd
[0xcdd:0xce6]
---
Predecessors: [0xcb6]
Successors: [0xce7, 0xd04]
---
0xcdd JUMPDEST
0xcde DUP1
0xcdf PUSH1 0xf
0xce1 EQ
0xce2 ISZERO
0xce3 PUSH2 0xd04
0xce6 JUMPI
---
0xcdd: JUMPDEST 
0xcdf: V1274 = 0xf
0xce1: V1275 = EQ 0xf V1244
0xce2: V1276 = ISZERO V1275
0xce3: V1277 = 0xd04
0xce6: JUMPI 0xd04 V1276
---
Entry stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, V1244]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, V1244]

================================

Block 0xce7
[0xce7:0xcfb]
---
Predecessors: [0xcdd]
Successors: [0xc86]
---
0xce7 PUSH7 0x38d7ea4c68000
0xcef PUSH6 0x246139ca800
0xcf6 DUP6
0xcf7 MUL
0xcf8 PUSH2 0xc86
0xcfb JUMP
---
0xce7: V1278 = 0x38d7ea4c68000
0xcef: V1279 = 0x246139ca800
0xcf7: V1280 = MUL V312 0x246139ca800
0xcf8: V1281 = 0xc86
0xcfb: JUMP 0xc86
---
Entry stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, V1244]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x38d7ea4c68000, V1280]
Exit stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, V1244, 0x38d7ea4c68000, V1280]

================================

Block 0xcfc
[0xcfc:0xd03]
---
Predecessors: []
Successors: [0xd69]
---
0xcfc JUMPDEST
0xcfd DIV
0xcfe SWAP2
0xcff POP
0xd00 PUSH2 0xd69
0xd03 JUMP
---
0xcfc: JUMPDEST 
0xcfd: V1282 = DIV S0 S1
0xd00: V1283 = 0xd69
0xd03: JUMP 0xd69
---
Entry stack: []
Stack pops: 4
Stack additions: [V1282, S2]
Exit stack: [V1282, S2]

================================

Block 0xd04
[0xd04:0xd0d]
---
Predecessors: [0xcdd]
Successors: [0xd0e, 0xd29]
---
0xd04 JUMPDEST
0xd05 DUP1
0xd06 PUSH1 0xe
0xd08 EQ
0xd09 ISZERO
0xd0a PUSH2 0xd29
0xd0d JUMPI
---
0xd04: JUMPDEST 
0xd06: V1284 = 0xe
0xd08: V1285 = EQ 0xe V1244
0xd09: V1286 = ISZERO V1285
0xd0a: V1287 = 0xd29
0xd0d: JUMPI 0xd29 V1286
---
Entry stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, V1244]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, V1244]

================================

Block 0xd0e
[0xd0e:0xd20]
---
Predecessors: [0xd04]
Successors: [0xc86]
---
0xd0e PUSH6 0x5af3107a4000
0xd15 PUSH5 0x3a35294400
0xd1b DUP6
0xd1c MUL
0xd1d PUSH2 0xc86
0xd20 JUMP
---
0xd0e: V1288 = 0x5af3107a4000
0xd15: V1289 = 0x3a35294400
0xd1c: V1290 = MUL V312 0x3a35294400
0xd1d: V1291 = 0xc86
0xd20: JUMP 0xc86
---
Entry stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, V1244]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x5af3107a4000, V1290]
Exit stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, V1244, 0x5af3107a4000, V1290]

================================

Block 0xd21
[0xd21:0xd28]
---
Predecessors: []
Successors: [0xd69]
---
0xd21 JUMPDEST
0xd22 DIV
0xd23 SWAP2
0xd24 POP
0xd25 PUSH2 0xd69
0xd28 JUMP
---
0xd21: JUMPDEST 
0xd22: V1292 = DIV S0 S1
0xd25: V1293 = 0xd69
0xd28: JUMP 0xd69
---
Entry stack: []
Stack pops: 4
Stack additions: [V1292, S2]
Exit stack: [V1292, S2]

================================

Block 0xd29
[0xd29:0xd32]
---
Predecessors: [0xd04]
Successors: [0xd33, 0xd4e]
---
0xd29 JUMPDEST
0xd2a DUP1
0xd2b PUSH1 0xd
0xd2d EQ
0xd2e ISZERO
0xd2f PUSH2 0xd4e
0xd32 JUMPI
---
0xd29: JUMPDEST 
0xd2b: V1294 = 0xd
0xd2d: V1295 = EQ 0xd V1244
0xd2e: V1296 = ISZERO V1295
0xd2f: V1297 = 0xd4e
0xd32: JUMPI 0xd4e V1296
---
Entry stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, V1244]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, V1244]

================================

Block 0xd33
[0xd33:0xd45]
---
Predecessors: [0xd29]
Successors: [0xc86]
---
0xd33 PUSH6 0x9184e72a000
0xd3a PUSH5 0x5d21dba00
0xd40 DUP6
0xd41 MUL
0xd42 PUSH2 0xc86
0xd45 JUMP
---
0xd33: V1298 = 0x9184e72a000
0xd3a: V1299 = 0x5d21dba00
0xd41: V1300 = MUL V312 0x5d21dba00
0xd42: V1301 = 0xc86
0xd45: JUMP 0xc86
---
Entry stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, V1244]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x9184e72a000, V1300]
Exit stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, V1244, 0x9184e72a000, V1300]

================================

Block 0xd46
[0xd46:0xd4d]
---
Predecessors: []
Successors: [0xd69]
---
0xd46 JUMPDEST
0xd47 DIV
0xd48 SWAP2
0xd49 POP
0xd4a PUSH2 0xd69
0xd4d JUMP
---
0xd46: JUMPDEST 
0xd47: V1302 = DIV S0 S1
0xd4a: V1303 = 0xd69
0xd4d: JUMP 0xd69
---
Entry stack: []
Stack pops: 4
Stack additions: [V1302, S2]
Exit stack: [V1302, S2]

================================

Block 0xd4e
[0xd4e:0xd57]
---
Predecessors: [0xd29]
Successors: [0xd58, 0xd69]
---
0xd4e JUMPDEST
0xd4f DUP1
0xd50 PUSH1 0xc
0xd52 EQ
0xd53 ISZERO
0xd54 PUSH2 0xd69
0xd57 JUMPI
---
0xd4e: JUMPDEST 
0xd50: V1304 = 0xc
0xd52: V1305 = EQ 0xc V1244
0xd53: V1306 = ISZERO V1305
0xd54: V1307 = 0xd69
0xd57: JUMPI 0xd69 V1306
---
Entry stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, V1244]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, V1244]

================================

Block 0xd58
[0xd58:0xd64]
---
Predecessors: [0xd4e]
Successors: [0xd65]
---
0xd58 PUSH5 0xe8d4a51000
0xd5e PUSH4 0x9502f900
0xd63 DUP6
0xd64 MUL
---
0xd58: V1308 = 0xe8d4a51000
0xd5e: V1309 = 0x9502f900
0xd64: V1310 = MUL V312 0x9502f900
---
Entry stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, V1244]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0xe8d4a51000, V1310]
Exit stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, V1244, 0xe8d4a51000, V1310]

================================

Block 0xd65
[0xd65:0xd68]
---
Predecessors: [0xd58]
Successors: [0xd69]
---
0xd65 JUMPDEST
0xd66 DIV
0xd67 SWAP2
0xd68 POP
---
0xd65: JUMPDEST 
0xd66: V1311 = DIV V1310 0xe8d4a51000
---
Entry stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, V1244, 0xe8d4a51000, V1310]
Stack pops: 4
Stack additions: [V1311, S2]
Exit stack: [V12, 0x30c, V307, V310, V312, 0x0, V1311, V1244]

================================

Block 0xd69
[0xd69:0xd69]
---
Predecessors: [0xc86, 0xcae, 0xcd5, 0xcfc, 0xd21, 0xd46, 0xd4e, 0xd65]
Successors: [0xd6a]
---
0xd69 JUMPDEST
---
0xd69: JUMPDEST 
---
Entry stack: [V12, 0x30c, V307, V310, V312, 0x0, S1, V1244]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x30c, V307, V310, V312, 0x0, S1, V1244]

================================

Block 0xd6a
[0xd6a:0xd6a]
---
Predecessors: [0xd69]
Successors: [0xd6b]
---
0xd6a JUMPDEST
---
0xd6a: JUMPDEST 
---
Entry stack: [V12, 0x30c, V307, V310, V312, 0x0, S1, V1244]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x30c, V307, V310, V312, 0x0, S1, V1244]

================================

Block 0xd6b
[0xd6b:0xd6b]
---
Predecessors: [0xd6a]
Successors: [0xd6c]
---
0xd6b JUMPDEST
---
0xd6b: JUMPDEST 
---
Entry stack: [V12, 0x30c, V307, V310, V312, 0x0, S1, V1244]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x30c, V307, V310, V312, 0x0, S1, V1244]

================================

Block 0xd6c
[0xd6c:0xd6c]
---
Predecessors: [0xd6b]
Successors: [0xd6d]
---
0xd6c JUMPDEST
---
0xd6c: JUMPDEST 
---
Entry stack: [V12, 0x30c, V307, V310, V312, 0x0, S1, V1244]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x30c, V307, V310, V312, 0x0, S1, V1244]

================================

Block 0xd6d
[0xd6d:0xd6d]
---
Predecessors: [0xd6c]
Successors: [0xd6e]
---
0xd6d JUMPDEST
---
0xd6d: JUMPDEST 
---
Entry stack: [V12, 0x30c, V307, V310, V312, 0x0, S1, V1244]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x30c, V307, V310, V312, 0x0, S1, V1244]

================================

Block 0xd6e
[0xd6e:0xd6e]
---
Predecessors: [0xd6d]
Successors: [0xd6f]
---
0xd6e JUMPDEST
---
0xd6e: JUMPDEST 
---
Entry stack: [V12, 0x30c, V307, V310, V312, 0x0, S1, V1244]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x30c, V307, V310, V312, 0x0, S1, V1244]

================================

Block 0xd6f
[0xd6f:0xe00]
---
Predecessors: [0xd6e]
Successors: [0xe01, 0xe05]
---
0xd6f JUMPDEST
0xd70 PUSH1 0x1
0xd72 PUSH1 0xa0
0xd74 PUSH1 0x2
0xd76 EXP
0xd77 SUB
0xd78 DUP1
0xd79 DUP8
0xd7a AND
0xd7b PUSH1 0x0
0xd7d DUP2
0xd7e DUP2
0xd7f MSTORE
0xd80 PUSH1 0x1
0xd82 PUSH1 0x20
0xd84 DUP2
0xd85 DUP2
0xd86 MSTORE
0xd87 PUSH1 0x40
0xd89 DUP1
0xd8a DUP5
0xd8b SHA3
0xd8c PUSH1 0x6
0xd8e DUP2
0xd8f ADD
0xd90 DUP1
0xd91 SLOAD
0xd92 DUP13
0xd93 SWAP1
0xd94 SUB
0xd95 SWAP1
0xd96 SSTORE
0xd97 PUSH1 0x2
0xd99 SWAP1
0xd9a DUP2
0xd9b ADD
0xd9c DUP1
0xd9d SLOAD
0xd9e DUP9
0xd9f AND
0xda0 DUP7
0xda1 MSTORE
0xda2 SWAP1
0xda3 DUP4
0xda4 MSTORE
0xda5 DUP2
0xda6 DUP6
0xda7 SHA3
0xda8 DUP1
0xda9 SLOAD
0xdaa DUP11
0xdab ADD
0xdac SWAP1
0xdad SSTORE
0xdae SWAP5
0xdaf SWAP1
0xdb0 SWAP4
0xdb1 MSTORE
0xdb2 MSTORE
0xdb3 SWAP1
0xdb4 SLOAD
0xdb5 SWAP1
0xdb6 SWAP2
0xdb7 AND
0xdb8 SWAP1
0xdb9 PUSH4 0xa9059cbb
0xdbe SWAP1
0xdbf DUP8
0xdc0 SWAP1
0xdc1 DUP6
0xdc2 DUP9
0xdc3 SUB
0xdc4 SWAP1
0xdc5 MLOAD
0xdc6 PUSH1 0xe0
0xdc8 PUSH1 0x2
0xdca EXP
0xdcb PUSH4 0xffffffff
0xdd0 DUP6
0xdd1 AND
0xdd2 MUL
0xdd3 DUP2
0xdd4 MSTORE
0xdd5 PUSH1 0x1
0xdd7 PUSH1 0xa0
0xdd9 PUSH1 0x2
0xddb EXP
0xddc SUB
0xddd SWAP1
0xdde SWAP3
0xddf AND
0xde0 PUSH1 0x4
0xde2 DUP4
0xde3 ADD
0xde4 MSTORE
0xde5 PUSH1 0x24
0xde7 DUP3
0xde8 ADD
0xde9 MSTORE
0xdea PUSH1 0x44
0xdec ADD
0xded PUSH1 0x0
0xdef PUSH1 0x40
0xdf1 MLOAD
0xdf2 DUP1
0xdf3 DUP4
0xdf4 SUB
0xdf5 DUP2
0xdf6 PUSH1 0x0
0xdf8 DUP8
0xdf9 DUP1
0xdfa EXTCODESIZE
0xdfb ISZERO
0xdfc ISZERO
0xdfd PUSH2 0xe05
0xe00 JUMPI
---
0xd6f: JUMPDEST 
0xd70: V1312 = 0x1
0xd72: V1313 = 0xa0
0xd74: V1314 = 0x2
0xd76: V1315 = EXP 0x2 0xa0
0xd77: V1316 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd7a: V1317 = AND V307 0xffffffffffffffffffffffffffffffffffffffff
0xd7b: V1318 = 0x0
0xd7f: M[0x0] = V1317
0xd80: V1319 = 0x1
0xd82: V1320 = 0x20
0xd86: M[0x20] = 0x1
0xd87: V1321 = 0x40
0xd8b: V1322 = SHA3 0x0 0x40
0xd8c: V1323 = 0x6
0xd8f: V1324 = ADD V1322 0x6
0xd91: V1325 = S[V1324]
0xd94: V1326 = SUB V1325 V312
0xd96: S[V1324] = V1326
0xd97: V1327 = 0x2
0xd9b: V1328 = ADD 0x2 V1322
0xd9d: V1329 = S[V1328]
0xd9f: V1330 = AND 0xffffffffffffffffffffffffffffffffffffffff V1329
0xda1: M[0x0] = V1330
0xda4: M[0x20] = 0x2
0xda7: V1331 = SHA3 0x0 0x40
0xda9: V1332 = S[V1331]
0xdab: V1333 = ADD S1 V1332
0xdad: S[V1331] = V1333
0xdb1: M[0x0] = V1317
0xdb2: M[0x20] = 0x1
0xdb4: V1334 = S[V1328]
0xdb7: V1335 = AND 0xffffffffffffffffffffffffffffffffffffffff V1334
0xdb9: V1336 = 0xa9059cbb
0xdc3: V1337 = SUB V312 S1
0xdc5: V1338 = M[0x40]
0xdc6: V1339 = 0xe0
0xdc8: V1340 = 0x2
0xdca: V1341 = EXP 0x2 0xe0
0xdcb: V1342 = 0xffffffff
0xdd1: V1343 = AND 0xa9059cbb 0xffffffff
0xdd2: V1344 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xdd4: M[V1338] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xdd5: V1345 = 0x1
0xdd7: V1346 = 0xa0
0xdd9: V1347 = 0x2
0xddb: V1348 = EXP 0x2 0xa0
0xddc: V1349 = SUB 0x10000000000000000000000000000000000000000 0x1
0xddf: V1350 = AND V310 0xffffffffffffffffffffffffffffffffffffffff
0xde0: V1351 = 0x4
0xde3: V1352 = ADD V1338 0x4
0xde4: M[V1352] = V1350
0xde5: V1353 = 0x24
0xde8: V1354 = ADD V1338 0x24
0xde9: M[V1354] = V1337
0xdea: V1355 = 0x44
0xdec: V1356 = ADD 0x44 V1338
0xded: V1357 = 0x0
0xdef: V1358 = 0x40
0xdf1: V1359 = M[0x40]
0xdf4: V1360 = SUB V1356 V1359
0xdf6: V1361 = 0x0
0xdfa: V1362 = EXTCODESIZE V1335
0xdfb: V1363 = ISZERO V1362
0xdfc: V1364 = ISZERO V1363
0xdfd: V1365 = 0xe05
0xe00: JUMPI 0xe05 V1364
---
Entry stack: [V12, 0x30c, V307, V310, V312, 0x0, S1, V1244]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, V1335, 0xa9059cbb, V1356, 0x0, V1359, V1360, V1359, 0x0, V1335]
Exit stack: [V12, 0x30c, V307, V310, V312, 0x0, S1, V1244, V1335, 0xa9059cbb, V1356, 0x0, V1359, V1360, V1359, 0x0, V1335]

================================

Block 0xe01
[0xe01:0xe04]
---
Predecessors: [0xd6f]
Successors: []
---
0xe01 PUSH1 0x0
0xe03 DUP1
0xe04 REVERT
---
0xe01: V1366 = 0x0
0xe04: REVERT 0x0 0x0
---
Entry stack: [V12, 0x30c, V307, V310, V312, 0x0, S10, V1244, V1335, 0xa9059cbb, V1356, 0x0, V1359, V1360, V1359, 0x0, V1335]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x30c, V307, V310, V312, 0x0, S10, V1244, V1335, 0xa9059cbb, V1356, 0x0, V1359, V1360, V1359, 0x0, V1335]

================================

Block 0xe05
[0xe05:0xe11]
---
Predecessors: [0xd6f]
Successors: [0xe12, 0xe16]
---
0xe05 JUMPDEST
0xe06 PUSH2 0x2c6
0xe09 GAS
0xe0a SUB
0xe0b CALL
0xe0c ISZERO
0xe0d ISZERO
0xe0e PUSH2 0xe16
0xe11 JUMPI
---
0xe05: JUMPDEST 
0xe06: V1367 = 0x2c6
0xe09: V1368 = GAS
0xe0a: V1369 = SUB V1368 0x2c6
0xe0b: V1370 = CALL V1369 V1335 0x0 V1359 V1360 V1359 0x0
0xe0c: V1371 = ISZERO V1370
0xe0d: V1372 = ISZERO V1371
0xe0e: V1373 = 0xe16
0xe11: JUMPI 0xe16 V1372
---
Entry stack: [V12, 0x30c, V307, V310, V312, 0x0, S10, V1244, V1335, 0xa9059cbb, V1356, 0x0, V1359, V1360, V1359, 0x0, V1335]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x30c, V307, V310, V312, 0x0, S10, V1244, V1335, 0xa9059cbb, V1356]

================================

Block 0xe12
[0xe12:0xe15]
---
Predecessors: [0xe05]
Successors: []
---
0xe12 PUSH1 0x0
0xe14 DUP1
0xe15 REVERT
---
0xe12: V1374 = 0x0
0xe15: REVERT 0x0 0x0
---
Entry stack: [V12, 0x30c, V307, V310, V312, 0x0, S4, V1244, V1335, 0xa9059cbb, V1356]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x30c, V307, V310, V312, 0x0, S4, V1244, V1335, 0xa9059cbb, V1356]

================================

Block 0xe16
[0xe16:0xe19]
---
Predecessors: [0xe05]
Successors: [0xe1a]
---
0xe16 JUMPDEST
0xe17 POP
0xe18 POP
0xe19 POP
---
0xe16: JUMPDEST 
---
Entry stack: [V12, 0x30c, V307, V310, V312, 0x0, S4, V1244, V1335, 0xa9059cbb, V1356]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x30c, V307, V310, V312, 0x0, S4, V1244]

================================

Block 0xe1a
[0xe1a:0xe22]
---
Predecessors: [0xbe9, 0xe16]
Successors: [0x65d]
---
0xe1a JUMPDEST
0xe1b PUSH1 0x1
0xe1d SWAP3
0xe1e POP
0xe1f PUSH2 0x65d
0xe22 JUMP
---
0xe1a: JUMPDEST 
0xe1b: V1375 = 0x1
0xe1f: V1376 = 0x65d
0xe22: JUMP 0x65d
---
Entry stack: [V12, 0x30c, V307, V310, V312, 0x0, S1, S0]
Stack pops: 3
Stack additions: [0x1, S1, S0]
Exit stack: [V12, 0x30c, V307, V310, V312, 0x1, S1, S0]

================================

Block 0xe23
[0xe23:0xe27]
---
Predecessors: [0xad4]
Successors: [0xe28]
---
0xe23 JUMPDEST
0xe24 PUSH1 0x0
0xe26 SWAP3
0xe27 POP
---
0xe23: JUMPDEST 
0xe24: V1377 = 0x0
---
Entry stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [0x0, S1, S0]
Exit stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, 0x0]

================================

Block 0xe28
[0xe28:0xe28]
---
Predecessors: [0xe23]
Successors: [0xe29]
---
0xe28 JUMPDEST
---
0xe28: JUMPDEST 
---
Entry stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, 0x0]

================================

Block 0xe29
[0xe29:0xe31]
---
Predecessors: [0xe28]
Successors: [0x30c]
---
0xe29 JUMPDEST
0xe2a POP
0xe2b POP
0xe2c SWAP4
0xe2d SWAP3
0xe2e POP
0xe2f POP
0xe30 POP
0xe31 JUMP
---
0xe29: JUMPDEST 
0xe31: JUMP 0x30c
---
Entry stack: [V12, 0x30c, V307, V310, V312, 0x0, 0x0, 0x0]
Stack pops: 7
Stack additions: [S2]
Exit stack: [V12, 0x0]

================================

Block 0xe32
[0xe32:0xe4e]
---
Predecessors: [0x32b]
Successors: [0xacf, 0xe4f]
---
0xe32 JUMPDEST
0xe33 PUSH1 0x0
0xe35 SLOAD
0xe36 CALLER
0xe37 PUSH1 0x1
0xe39 PUSH1 0xa0
0xe3b PUSH1 0x2
0xe3d EXP
0xe3e SUB
0xe3f SWAP1
0xe40 DUP2
0xe41 AND
0xe42 PUSH2 0x100
0xe45 SWAP1
0xe46 SWAP3
0xe47 DIV
0xe48 AND
0xe49 EQ
0xe4a ISZERO
0xe4b PUSH2 0xacf
0xe4e JUMPI
---
0xe32: JUMPDEST 
0xe33: V1378 = 0x0
0xe35: V1379 = S[0x0]
0xe36: V1380 = CALLER
0xe37: V1381 = 0x1
0xe39: V1382 = 0xa0
0xe3b: V1383 = 0x2
0xe3d: V1384 = EXP 0x2 0xa0
0xe3e: V1385 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe41: V1386 = AND 0xffffffffffffffffffffffffffffffffffffffff V1380
0xe42: V1387 = 0x100
0xe47: V1388 = DIV V1379 0x100
0xe48: V1389 = AND V1388 0xffffffffffffffffffffffffffffffffffffffff
0xe49: V1390 = EQ V1389 V1386
0xe4a: V1391 = ISZERO V1390
0xe4b: V1392 = 0xacf
0xe4e: JUMPI 0xacf V1391
---
Entry stack: [V12, 0xe3, V335, V337]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe3, V335, V337]

================================

Block 0xe4f
[0xe4f:0xe6e]
---
Predecessors: [0xe32]
Successors: [0xacf, 0xe6f]
---
0xe4f PUSH1 0x1
0xe51 PUSH1 0xa0
0xe53 PUSH1 0x2
0xe55 EXP
0xe56 SUB
0xe57 DUP3
0xe58 AND
0xe59 PUSH1 0x0
0xe5b SWAP1
0xe5c DUP2
0xe5d MSTORE
0xe5e PUSH1 0x2
0xe60 PUSH1 0x20
0xe62 MSTORE
0xe63 PUSH1 0x40
0xe65 SWAP1
0xe66 SHA3
0xe67 SLOAD
0xe68 DUP2
0xe69 SWAP1
0xe6a LT
0xe6b PUSH2 0xacf
0xe6e JUMPI
---
0xe4f: V1393 = 0x1
0xe51: V1394 = 0xa0
0xe53: V1395 = 0x2
0xe55: V1396 = EXP 0x2 0xa0
0xe56: V1397 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe58: V1398 = AND V335 0xffffffffffffffffffffffffffffffffffffffff
0xe59: V1399 = 0x0
0xe5d: M[0x0] = V1398
0xe5e: V1400 = 0x2
0xe60: V1401 = 0x20
0xe62: M[0x20] = 0x2
0xe63: V1402 = 0x40
0xe66: V1403 = SHA3 0x0 0x40
0xe67: V1404 = S[V1403]
0xe6a: V1405 = LT V1404 V337
0xe6b: V1406 = 0xacf
0xe6e: JUMPI 0xacf V1405
---
Entry stack: [V12, 0xe3, V335, V337]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0xe3, V335, V337]

================================

Block 0xe6f
[0xe6f:0xe93]
---
Predecessors: [0xe4f]
Successors: [0xe94, 0xed0]
---
0xe6f PUSH1 0x1
0xe71 PUSH1 0xa0
0xe73 PUSH1 0x2
0xe75 EXP
0xe76 SUB
0xe77 DUP3
0xe78 AND
0xe79 PUSH1 0x0
0xe7b DUP2
0xe7c DUP2
0xe7d MSTORE
0xe7e PUSH1 0x2
0xe80 PUSH1 0x20
0xe82 MSTORE
0xe83 PUSH1 0x40
0xe85 SWAP1
0xe86 SHA3
0xe87 DUP1
0xe88 SLOAD
0xe89 DUP4
0xe8a SWAP1
0xe8b SUB
0xe8c SWAP1
0xe8d SSTORE
0xe8e ISZERO
0xe8f ISZERO
0xe90 PUSH2 0xed0
0xe93 JUMPI
---
0xe6f: V1407 = 0x1
0xe71: V1408 = 0xa0
0xe73: V1409 = 0x2
0xe75: V1410 = EXP 0x2 0xa0
0xe76: V1411 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe78: V1412 = AND V335 0xffffffffffffffffffffffffffffffffffffffff
0xe79: V1413 = 0x0
0xe7d: M[0x0] = V1412
0xe7e: V1414 = 0x2
0xe80: V1415 = 0x20
0xe82: M[0x20] = 0x2
0xe83: V1416 = 0x40
0xe86: V1417 = SHA3 0x0 0x40
0xe88: V1418 = S[V1417]
0xe8b: V1419 = SUB V1418 V337
0xe8d: S[V1417] = V1419
0xe8e: V1420 = ISZERO V1412
0xe8f: V1421 = ISZERO V1420
0xe90: V1422 = 0xed0
0xe93: JUMPI 0xed0 V1421
---
Entry stack: [V12, 0xe3, V335, V337]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0xe3, V335, V337]

================================

Block 0xe94
[0xe94:0xec6]
---
Predecessors: [0xe6f]
Successors: [0xec7, 0xecb]
---
0xe94 PUSH1 0x0
0xe96 SLOAD
0xe97 PUSH2 0x100
0xe9a SWAP1
0xe9b DIV
0xe9c PUSH1 0x1
0xe9e PUSH1 0xa0
0xea0 PUSH1 0x2
0xea2 EXP
0xea3 SUB
0xea4 AND
0xea5 PUSH2 0x8fc
0xea8 DUP3
0xea9 ISZERO
0xeaa MUL
0xeab DUP3
0xeac PUSH1 0x40
0xeae MLOAD
0xeaf PUSH1 0x0
0xeb1 PUSH1 0x40
0xeb3 MLOAD
0xeb4 DUP1
0xeb5 DUP4
0xeb6 SUB
0xeb7 DUP2
0xeb8 DUP6
0xeb9 DUP9
0xeba DUP9
0xebb CALL
0xebc SWAP4
0xebd POP
0xebe POP
0xebf POP
0xec0 POP
0xec1 ISZERO
0xec2 ISZERO
0xec3 PUSH2 0xecb
0xec6 JUMPI
---
0xe94: V1423 = 0x0
0xe96: V1424 = S[0x0]
0xe97: V1425 = 0x100
0xe9b: V1426 = DIV V1424 0x100
0xe9c: V1427 = 0x1
0xe9e: V1428 = 0xa0
0xea0: V1429 = 0x2
0xea2: V1430 = EXP 0x2 0xa0
0xea3: V1431 = SUB 0x10000000000000000000000000000000000000000 0x1
0xea4: V1432 = AND 0xffffffffffffffffffffffffffffffffffffffff V1426
0xea5: V1433 = 0x8fc
0xea9: V1434 = ISZERO V337
0xeaa: V1435 = MUL V1434 0x8fc
0xeac: V1436 = 0x40
0xeae: V1437 = M[0x40]
0xeaf: V1438 = 0x0
0xeb1: V1439 = 0x40
0xeb3: V1440 = M[0x40]
0xeb6: V1441 = SUB V1437 V1440
0xebb: V1442 = CALL V1435 V1432 V337 V1440 V1441 V1440 0x0
0xec1: V1443 = ISZERO V1442
0xec2: V1444 = ISZERO V1443
0xec3: V1445 = 0xecb
0xec6: JUMPI 0xecb V1444
---
Entry stack: [V12, 0xe3, V335, V337]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xe3, V335, V337]

================================

Block 0xec7
[0xec7:0xeca]
---
Predecessors: [0xe94]
Successors: []
---
0xec7 PUSH1 0x0
0xec9 DUP1
0xeca REVERT
---
0xec7: V1446 = 0x0
0xeca: REVERT 0x0 0x0
---
Entry stack: [V12, 0xe3, V335, V337]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe3, V335, V337]

================================

Block 0xecb
[0xecb:0xecf]
---
Predecessors: [0xe94]
Successors: [0xacf]
---
0xecb JUMPDEST
0xecc PUSH2 0xacf
0xecf JUMP
---
0xecb: JUMPDEST 
0xecc: V1447 = 0xacf
0xecf: JUMP 0xacf
---
Entry stack: [V12, 0xe3, V335, V337]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe3, V335, V337]

================================

Block 0xed0
[0xed0:0xf2b]
---
Predecessors: [0xe6f]
Successors: [0xf2c, 0xf30]
---
0xed0 JUMPDEST
0xed1 PUSH1 0x0
0xed3 SLOAD
0xed4 PUSH1 0x1
0xed6 PUSH1 0xa0
0xed8 PUSH1 0x2
0xeda EXP
0xedb SUB
0xedc DUP1
0xedd DUP5
0xede AND
0xedf SWAP2
0xee0 PUSH4 0xa9059cbb
0xee5 SWAP2
0xee6 PUSH2 0x100
0xee9 SWAP1
0xeea SWAP2
0xeeb DIV
0xeec AND
0xeed DUP4
0xeee PUSH1 0x40
0xef0 MLOAD
0xef1 PUSH1 0xe0
0xef3 PUSH1 0x2
0xef5 EXP
0xef6 PUSH4 0xffffffff
0xefb DUP6
0xefc AND
0xefd MUL
0xefe DUP2
0xeff MSTORE
0xf00 PUSH1 0x1
0xf02 PUSH1 0xa0
0xf04 PUSH1 0x2
0xf06 EXP
0xf07 SUB
0xf08 SWAP1
0xf09 SWAP3
0xf0a AND
0xf0b PUSH1 0x4
0xf0d DUP4
0xf0e ADD
0xf0f MSTORE
0xf10 PUSH1 0x24
0xf12 DUP3
0xf13 ADD
0xf14 MSTORE
0xf15 PUSH1 0x44
0xf17 ADD
0xf18 PUSH1 0x0
0xf1a PUSH1 0x40
0xf1c MLOAD
0xf1d DUP1
0xf1e DUP4
0xf1f SUB
0xf20 DUP2
0xf21 PUSH1 0x0
0xf23 DUP8
0xf24 DUP1
0xf25 EXTCODESIZE
0xf26 ISZERO
0xf27 ISZERO
0xf28 PUSH2 0xf30
0xf2b JUMPI
---
0xed0: JUMPDEST 
0xed1: V1448 = 0x0
0xed3: V1449 = S[0x0]
0xed4: V1450 = 0x1
0xed6: V1451 = 0xa0
0xed8: V1452 = 0x2
0xeda: V1453 = EXP 0x2 0xa0
0xedb: V1454 = SUB 0x10000000000000000000000000000000000000000 0x1
0xede: V1455 = AND V335 0xffffffffffffffffffffffffffffffffffffffff
0xee0: V1456 = 0xa9059cbb
0xee6: V1457 = 0x100
0xeeb: V1458 = DIV V1449 0x100
0xeec: V1459 = AND V1458 0xffffffffffffffffffffffffffffffffffffffff
0xeee: V1460 = 0x40
0xef0: V1461 = M[0x40]
0xef1: V1462 = 0xe0
0xef3: V1463 = 0x2
0xef5: V1464 = EXP 0x2 0xe0
0xef6: V1465 = 0xffffffff
0xefc: V1466 = AND 0xa9059cbb 0xffffffff
0xefd: V1467 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xeff: M[V1461] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xf00: V1468 = 0x1
0xf02: V1469 = 0xa0
0xf04: V1470 = 0x2
0xf06: V1471 = EXP 0x2 0xa0
0xf07: V1472 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf0a: V1473 = AND V1459 0xffffffffffffffffffffffffffffffffffffffff
0xf0b: V1474 = 0x4
0xf0e: V1475 = ADD V1461 0x4
0xf0f: M[V1475] = V1473
0xf10: V1476 = 0x24
0xf13: V1477 = ADD V1461 0x24
0xf14: M[V1477] = V337
0xf15: V1478 = 0x44
0xf17: V1479 = ADD 0x44 V1461
0xf18: V1480 = 0x0
0xf1a: V1481 = 0x40
0xf1c: V1482 = M[0x40]
0xf1f: V1483 = SUB V1479 V1482
0xf21: V1484 = 0x0
0xf25: V1485 = EXTCODESIZE V1455
0xf26: V1486 = ISZERO V1485
0xf27: V1487 = ISZERO V1486
0xf28: V1488 = 0xf30
0xf2b: JUMPI 0xf30 V1487
---
Entry stack: [V12, 0xe3, V335, V337]
Stack pops: 2
Stack additions: [S1, S0, V1455, 0xa9059cbb, V1479, 0x0, V1482, V1483, V1482, 0x0, V1455]
Exit stack: [V12, 0xe3, V335, V337, V1455, 0xa9059cbb, V1479, 0x0, V1482, V1483, V1482, 0x0, V1455]

================================

Block 0xf2c
[0xf2c:0xf2f]
---
Predecessors: [0xed0]
Successors: []
---
0xf2c PUSH1 0x0
0xf2e DUP1
0xf2f REVERT
---
0xf2c: V1489 = 0x0
0xf2f: REVERT 0x0 0x0
---
Entry stack: [V12, 0xe3, V335, V337, V1455, 0xa9059cbb, V1479, 0x0, V1482, V1483, V1482, 0x0, V1455]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe3, V335, V337, V1455, 0xa9059cbb, V1479, 0x0, V1482, V1483, V1482, 0x0, V1455]

================================

Block 0xf30
[0xf30:0xf3c]
---
Predecessors: [0xed0]
Successors: [0xf3d, 0xf41]
---
0xf30 JUMPDEST
0xf31 PUSH2 0x2c6
0xf34 GAS
0xf35 SUB
0xf36 CALL
0xf37 ISZERO
0xf38 ISZERO
0xf39 PUSH2 0xf41
0xf3c JUMPI
---
0xf30: JUMPDEST 
0xf31: V1490 = 0x2c6
0xf34: V1491 = GAS
0xf35: V1492 = SUB V1491 0x2c6
0xf36: V1493 = CALL V1492 V1455 0x0 V1482 V1483 V1482 0x0
0xf37: V1494 = ISZERO V1493
0xf38: V1495 = ISZERO V1494
0xf39: V1496 = 0xf41
0xf3c: JUMPI 0xf41 V1495
---
Entry stack: [V12, 0xe3, V335, V337, V1455, 0xa9059cbb, V1479, 0x0, V1482, V1483, V1482, 0x0, V1455]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xe3, V335, V337, V1455, 0xa9059cbb, V1479]

================================

Block 0xf3d
[0xf3d:0xf40]
---
Predecessors: [0xf30]
Successors: []
---
0xf3d PUSH1 0x0
0xf3f DUP1
0xf40 REVERT
---
0xf3d: V1497 = 0x0
0xf40: REVERT 0x0 0x0
---
Entry stack: [V12, 0xe3, V335, V337, V1455, 0xa9059cbb, V1479]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe3, V335, V337, V1455, 0xa9059cbb, V1479]

================================

Block 0xf41
[0xf41:0xf44]
---
Predecessors: [0xf30]
Successors: [0xf45]
---
0xf41 JUMPDEST
0xf42 POP
0xf43 POP
0xf44 POP
---
0xf41: JUMPDEST 
---
Entry stack: [V12, 0xe3, V335, V337, V1455, 0xa9059cbb, V1479]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xe3, V335, V337]

================================

Block 0xf45
[0xf45:0xf45]
---
Predecessors: [0xf41]
Successors: [0xf46]
---
0xf45 JUMPDEST
---
0xf45: JUMPDEST 
---
Entry stack: [V12, 0xe3, V335, V337]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe3, V335, V337]

================================

Block 0xf46
[0xf46:0xf46]
---
Predecessors: [0xf45]
Successors: [0xf47]
---
0xf46 JUMPDEST
---
0xf46: JUMPDEST 
---
Entry stack: [V12, 0xe3, V335, V337]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe3, V335, V337]

================================

Block 0xf47
[0xf47:0xf47]
---
Predecessors: [0xf46]
Successors: [0xf48]
---
0xf47 JUMPDEST
---
0xf47: JUMPDEST 
---
Entry stack: [V12, 0xe3, V335, V337]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe3, V335, V337]

================================

Block 0xf48
[0xf48:0xf4b]
---
Predecessors: [0xf47]
Successors: [0xe3]
---
0xf48 JUMPDEST
0xf49 POP
0xf4a POP
0xf4b JUMP
---
0xf48: JUMPDEST 
0xf4b: JUMP 0xe3
---
Entry stack: [V12, 0xe3, V335, V337]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0xf4c
[0xf4c:0xf68]
---
Predecessors: [0x34f]
Successors: [0xf69]
---
0xf4c JUMPDEST
0xf4d PUSH1 0x1
0xf4f PUSH1 0xa0
0xf51 PUSH1 0x2
0xf53 EXP
0xf54 SUB
0xf55 DUP2
0xf56 AND
0xf57 PUSH1 0x0
0xf59 SWAP1
0xf5a DUP2
0xf5b MSTORE
0xf5c PUSH1 0x1
0xf5e PUSH1 0x20
0xf60 MSTORE
0xf61 PUSH1 0x40
0xf63 SWAP1
0xf64 SHA3
0xf65 PUSH1 0x5
0xf67 ADD
0xf68 SLOAD
---
0xf4c: JUMPDEST 
0xf4d: V1498 = 0x1
0xf4f: V1499 = 0xa0
0xf51: V1500 = 0x2
0xf53: V1501 = EXP 0x2 0xa0
0xf54: V1502 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf56: V1503 = AND V351 0xffffffffffffffffffffffffffffffffffffffff
0xf57: V1504 = 0x0
0xf5b: M[0x0] = V1503
0xf5c: V1505 = 0x1
0xf5e: V1506 = 0x20
0xf60: M[0x20] = 0x1
0xf61: V1507 = 0x40
0xf64: V1508 = SHA3 0x0 0x40
0xf65: V1509 = 0x5
0xf67: V1510 = ADD 0x5 V1508
0xf68: V1511 = S[V1510]
---
Entry stack: [V12, 0x13c, V351]
Stack pops: 1
Stack additions: [S0, V1511]
Exit stack: [V12, 0x13c, V351, V1511]

================================

Block 0xf69
[0xf69:0xf6d]
---
Predecessors: [0xf4c]
Successors: [0x13c]
---
0xf69 JUMPDEST
0xf6a SWAP2
0xf6b SWAP1
0xf6c POP
0xf6d JUMP
---
0xf69: JUMPDEST 
0xf6d: JUMP 0x13c
---
Entry stack: [V12, 0x13c, V351, V1511]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, V1511]

================================

Block 0xf6e
[0xf6e:0xfc5]
---
Predecessors: [0x380]
Successors: [0x394]
---
0xf6e JUMPDEST
0xf6f PUSH1 0x1
0xf71 PUSH1 0x20
0xf73 DUP2
0xf74 SWAP1
0xf75 MSTORE
0xf76 PUSH1 0x0
0xf78 SWAP2
0xf79 DUP3
0xf7a MSTORE
0xf7b PUSH1 0x40
0xf7d SWAP1
0xf7e SWAP2
0xf7f SHA3
0xf80 DUP1
0xf81 SLOAD
0xf82 SWAP2
0xf83 DUP2
0xf84 ADD
0xf85 SLOAD
0xf86 PUSH1 0x2
0xf88 DUP3
0xf89 ADD
0xf8a SLOAD
0xf8b PUSH1 0x3
0xf8d DUP4
0xf8e ADD
0xf8f SLOAD
0xf90 PUSH1 0x4
0xf92 DUP5
0xf93 ADD
0xf94 SLOAD
0xf95 PUSH1 0x5
0xf97 DUP6
0xf98 ADD
0xf99 SLOAD
0xf9a PUSH1 0x6
0xf9c DUP7
0xf9d ADD
0xf9e SLOAD
0xf9f PUSH1 0x7
0xfa1 SWAP1
0xfa2 SWAP7
0xfa3 ADD
0xfa4 SLOAD
0xfa5 PUSH1 0x1
0xfa7 PUSH1 0xa0
0xfa9 PUSH1 0x2
0xfab EXP
0xfac SUB
0xfad SWAP8
0xfae DUP9
0xfaf AND
0xfb0 SWAP8
0xfb1 SWAP6
0xfb2 DUP7
0xfb3 AND
0xfb4 SWAP7
0xfb5 SWAP5
0xfb6 DUP7
0xfb7 AND
0xfb8 SWAP6
0xfb9 SWAP4
0xfba DUP5
0xfbb AND
0xfbc SWAP5
0xfbd SWAP4
0xfbe SWAP1
0xfbf SWAP3
0xfc0 AND
0xfc1 SWAP3
0xfc2 SWAP1
0xfc3 SWAP2
0xfc4 DUP9
0xfc5 JUMP
---
0xf6e: JUMPDEST 
0xf6f: V1512 = 0x1
0xf71: V1513 = 0x20
0xf75: M[0x20] = 0x1
0xf76: V1514 = 0x0
0xf7a: M[0x0] = V372
0xf7b: V1515 = 0x40
0xf7f: V1516 = SHA3 0x0 0x40
0xf81: V1517 = S[V1516]
0xf84: V1518 = ADD V1516 0x1
0xf85: V1519 = S[V1518]
0xf86: V1520 = 0x2
0xf89: V1521 = ADD V1516 0x2
0xf8a: V1522 = S[V1521]
0xf8b: V1523 = 0x3
0xf8e: V1524 = ADD V1516 0x3
0xf8f: V1525 = S[V1524]
0xf90: V1526 = 0x4
0xf93: V1527 = ADD V1516 0x4
0xf94: V1528 = S[V1527]
0xf95: V1529 = 0x5
0xf98: V1530 = ADD V1516 0x5
0xf99: V1531 = S[V1530]
0xf9a: V1532 = 0x6
0xf9d: V1533 = ADD V1516 0x6
0xf9e: V1534 = S[V1533]
0xf9f: V1535 = 0x7
0xfa3: V1536 = ADD V1516 0x7
0xfa4: V1537 = S[V1536]
0xfa5: V1538 = 0x1
0xfa7: V1539 = 0xa0
0xfa9: V1540 = 0x2
0xfab: V1541 = EXP 0x2 0xa0
0xfac: V1542 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfaf: V1543 = AND 0xffffffffffffffffffffffffffffffffffffffff V1517
0xfb3: V1544 = AND 0xffffffffffffffffffffffffffffffffffffffff V1519
0xfb7: V1545 = AND 0xffffffffffffffffffffffffffffffffffffffff V1522
0xfbb: V1546 = AND 0xffffffffffffffffffffffffffffffffffffffff V1525
0xfc0: V1547 = AND V1528 0xffffffffffffffffffffffffffffffffffffffff
0xfc5: JUMP 0x394
---
Entry stack: [V12, 0x394, V372]
Stack pops: 2
Stack additions: [S1, V1543, V1544, V1545, V1546, V1547, V1531, V1534, V1537]
Exit stack: [V12, 0x394, V1543, V1544, V1545, V1546, V1547, V1531, V1534, V1537]

================================

Block 0xfc6
[0xfc6:0xfd9]
---
Predecessors: [0x3f5]
Successors: [0x104]
---
0xfc6 JUMPDEST
0xfc7 PUSH1 0x0
0xfc9 SLOAD
0xfca PUSH2 0x100
0xfcd SWAP1
0xfce DIV
0xfcf PUSH1 0x1
0xfd1 PUSH1 0xa0
0xfd3 PUSH1 0x2
0xfd5 EXP
0xfd6 SUB
0xfd7 AND
0xfd8 DUP2
0xfd9 JUMP
---
0xfc6: JUMPDEST 
0xfc7: V1548 = 0x0
0xfc9: V1549 = S[0x0]
0xfca: V1550 = 0x100
0xfce: V1551 = DIV V1549 0x100
0xfcf: V1552 = 0x1
0xfd1: V1553 = 0xa0
0xfd3: V1554 = 0x2
0xfd5: V1555 = EXP 0x2 0xa0
0xfd6: V1556 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfd7: V1557 = AND 0xffffffffffffffffffffffffffffffffffffffff V1551
0xfd9: JUMP 0x104
---
Entry stack: [V12, 0x104]
Stack pops: 1
Stack additions: [S0, V1557]
Exit stack: [V12, 0x104, V1557]

================================

Block 0xfda
[0xfda:0x1016]
---
Predecessors: []
Successors: []
---
0xfda STOP
0xfdb LOG1
0xfdc PUSH6 0x627a7a723058
0xfe3 SHA3
0xfe4 DUP2
0xfe5 MISSING 0xce
0xfe6 MISSING 0xf8
0xfe7 CALLCODE
0xfe8 POP
0xfe9 SIGNEXTEND
0xfea MISSING 0xe5
0xfeb PUSH11 0x70afb041b062e2f8e9ab4e
0xff7 BLOCKHASH
0xff8 PUSH30 0x10f1e4b0461e902ffc3fc80029
---
0xfda: STOP 
0xfdb: LOG S0 S1 S2
0xfdc: V1558 = 0x627a7a723058
0xfe3: V1559 = SHA3 0x627a7a723058 S3
0xfe5: MISSING 0xce
0xfe6: MISSING 0xf8
0xfe7: V1560 = CALLCODE S0 S1 S2 S3 S4 S5 S6
0xfe9: V1561 = SIGNEXTEND S7 S8
0xfea: MISSING 0xe5
0xfeb: V1562 = 0x70afb041b062e2f8e9ab4e
0xff7: V1563 = BLOCKHASH 0x70afb041b062e2f8e9ab4e
0xff8: V1564 = 0x10f1e4b0461e902ffc3fc80029
---
Entry stack: []
Stack pops: 0
Stack additions: [S4, V1559, S4, V1561, 0x10f1e4b0461e902ffc3fc80029, V1563]
Exit stack: []

================================

Function 0:
Public function signature: 0x84bcc8a
Entry block: 0xc4
Exit block: 0x5d0
Body: 0xc4, 0xcb, 0xcf, 0xe3, 0x419, 0x43f, 0x463, 0x469, 0x48d, 0x4ad, 0x4b3, 0x4d5, 0x51e, 0x522, 0x523, 0x528, 0x54b, 0x5bf, 0x5c3, 0x5d0, 0x5d4, 0x5d8, 0x5d9, 0x604, 0x605

Function 1:
Public function signature: 0x1fdaa5e8
Entry block: 0xe5
Exit block: 0x104
Body: 0xe5, 0xec, 0xf0, 0x104, 0x608, 0x627

Function 2:
Public function signature: 0x29c45cb6
Entry block: 0x120
Exit block: 0x127
Body: 0x120, 0x127, 0x12b, 0x13c

Function 3:
Public function signature: 0x42d43264
Entry block: 0x14e
Exit block: 0x104
Body: 0x104, 0x14e, 0x155, 0x159, 0x666, 0x685

Function 4:
Public function signature: 0x49ef3811
Entry block: 0x189
Exit block: 0xe3
Body: 0xbf, 0xe3, 0x189, 0x68a, 0x699, 0x69d, 0x6bb, 0x700, 0x704, 0x711, 0x715, 0x72d, 0x73c, 0x746, 0x755, 0x75f, 0x76d, 0x777, 0x785, 0x78f, 0x79c, 0x7a6, 0x7b3, 0x7bd, 0x7c5, 0x7c6, 0x7c7, 0x7c8, 0x7c9, 0x7ca, 0x7cb, 0x7e0, 0x821, 0x826, 0x882, 0x886, 0x893, 0x897, 0x8a9, 0x90e, 0x912, 0x91f, 0x923, 0x934, 0x942, 0x943, 0x9ca, 0x9d5

Function 5:
Public function signature: 0x6971cc7f
Entry block: 0x1bf
Exit block: 0x104
Body: 0x104, 0x1bf, 0x1c6, 0x1ca, 0x9e0, 0x9ff

Function 6:
Public function signature: 0x6eba2b13
Entry block: 0x1fa
Exit block: 0x219
Body: 0x1fa, 0x201, 0x205, 0x219, 0xa04, 0xa4a

Function 7:
Public function signature: 0x6fcca69b
Entry block: 0x25e
Exit block: 0x13c
Body: 0x13c, 0x25e, 0x265, 0x269, 0xa53

Function 8:
Public function signature: 0xaa767289
Entry block: 0x28f
Exit block: 0x13c
Body: 0x13c, 0x28f, 0x296, 0x29a, 0xa65, 0xa82

Function 9:
Public function signature: 0xc205456d
Entry block: 0x2c0
Exit block: 0xe3
Body: 0xe3, 0x2c0, 0x2c7, 0x2cb, 0xa87, 0xab1, 0xacf, 0xad0

Function 10:
Public function signature: 0xcbe10737
Entry block: 0x2e4
Exit block: 0xe12
Body: 0xbf, 0x2e4, 0x2eb, 0x2ef, 0x30c, 0xad4, 0xb03, 0xb27, 0xb47, 0xb4d, 0xb60, 0xbe5, 0xbe9, 0xbee, 0xc46, 0xc4a, 0xc57, 0xc5b, 0xc73, 0xc86, 0xc8e, 0xc98, 0xcb6, 0xcc0, 0xcdd, 0xce7, 0xd04, 0xd0e, 0xd29, 0xd33, 0xd4e, 0xd58, 0xd65, 0xd69, 0xd6a, 0xd6b, 0xd6c, 0xd6d, 0xd6e, 0xd6f, 0xe01, 0xe05, 0xe12, 0xe16, 0xe1a, 0xe23, 0xe28, 0xe29

Function 11:
Public function signature: 0xd34dd1f0
Entry block: 0x320
Exit block: 0xe3
Body: 0xe3, 0x320, 0x327, 0x32b, 0xacf, 0xad0, 0xe32, 0xe4f, 0xe6f, 0xe94, 0xec7, 0xecb, 0xed0, 0xf2c, 0xf30, 0xf3d, 0xf41, 0xf45, 0xf46, 0xf47, 0xf48

Function 12:
Public function signature: 0xe16a4b61
Entry block: 0x344
Exit block: 0x13c
Body: 0x13c, 0x344, 0x34b, 0x34f, 0xf4c, 0xf69

Function 13:
Public function signature: 0xf40e8471
Entry block: 0x375
Exit block: 0x394
Body: 0x375, 0x37c, 0x380, 0x394, 0xf6e

Function 14:
Public function signature: 0xf851a440
Entry block: 0x3ea
Exit block: 0x104
Body: 0x104, 0x3ea, 0x3f1, 0x3f5, 0xfc6

Function 15:
Public fallback function
Entry block: 0xbf
Exit block: 0xbf
Body: 0xbf

Function 16:
Private function
Entry block: 0x62c
Exit block: 0x65d
Body: 0x62c, 0x649, 0x656, 0x65d

