Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x61]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x61
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x61
0xc: JUMPI 0x61 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x63]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x2bc38531
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x63
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x2bc38531
0x3b: V13 = EQ V11 0x2bc38531
0x3c: V14 = 0x63
0x3f: JUMPI 0x63 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xbc]
---
0x40 DUP1
0x41 PUSH4 0x31fb67c2
0x46 EQ
0x47 PUSH2 0xbc
0x4a JUMPI
---
0x41: V15 = 0x31fb67c2
0x46: V16 = EQ 0x31fb67c2 V11
0x47: V17 = 0xbc
0x4a: JUMPI 0xbc V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x108]
---
0x4b DUP1
0x4c PUSH4 0x52efea6e
0x51 EQ
0x52 PUSH2 0x108
0x55 JUMPI
---
0x4c: V18 = 0x52efea6e
0x51: V19 = EQ 0x52efea6e V11
0x52: V20 = 0x108
0x55: JUMPI 0x108 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x11d]
---
0x56 DUP1
0x57 PUSH4 0x8b147245
0x5c EQ
0x5d PUSH2 0x11d
0x60 JUMPI
---
0x57: V21 = 0x8b147245
0x5c: V22 = EQ 0x8b147245 V11
0x5d: V23 = 0x11d
0x60: JUMPI 0x11d V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x62]
---
Predecessors: [0x0, 0x56, 0x204, 0x31d, 0x36a]
Successors: []
---
0x61 JUMPDEST
0x62 STOP
---
0x61: JUMPDEST 
0x62: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x63
[0x63:0x6a]
---
Predecessors: [0xd]
Successors: [0x6b, 0x6f]
---
0x63 JUMPDEST
0x64 CALLVALUE
0x65 DUP1
0x66 ISZERO
0x67 PUSH2 0x6f
0x6a JUMPI
---
0x63: JUMPDEST 
0x64: V24 = CALLVALUE
0x66: V25 = ISZERO V24
0x67: V26 = 0x6f
0x6a: JUMPI 0x6f V25
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V24]
Exit stack: [V11, V24]

================================

Block 0x6b
[0x6b:0x6e]
---
Predecessors: [0x63]
Successors: []
---
0x6b PUSH1 0x0
0x6d DUP1
0x6e REVERT
---
0x6b: V27 = 0x0
0x6e: REVERT 0x0 0x0
---
Entry stack: [V11, V24]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V24]

================================

Block 0x6f
[0x6f:0xbb]
---
Predecessors: [0x63]
Successors: [0x135]
---
0x6f JUMPDEST
0x70 POP
0x71 PUSH1 0x40
0x73 DUP1
0x74 MLOAD
0x75 PUSH1 0x20
0x77 PUSH1 0x4
0x79 DUP1
0x7a CALLDATALOAD
0x7b DUP1
0x7c DUP3
0x7d ADD
0x7e CALLDATALOAD
0x7f PUSH1 0x1f
0x81 DUP2
0x82 ADD
0x83 DUP5
0x84 SWAP1
0x85 DIV
0x86 DUP5
0x87 MUL
0x88 DUP6
0x89 ADD
0x8a DUP5
0x8b ADD
0x8c SWAP1
0x8d SWAP6
0x8e MSTORE
0x8f DUP5
0x90 DUP5
0x91 MSTORE
0x92 PUSH2 0x61
0x95 SWAP5
0x96 CALLDATASIZE
0x97 SWAP5
0x98 SWAP3
0x99 SWAP4
0x9a PUSH1 0x24
0x9c SWAP4
0x9d SWAP3
0x9e DUP5
0x9f ADD
0xa0 SWAP2
0xa1 SWAP1
0xa2 DUP2
0xa3 SWAP1
0xa4 DUP5
0xa5 ADD
0xa6 DUP4
0xa7 DUP3
0xa8 DUP1
0xa9 DUP3
0xaa DUP5
0xab CALLDATACOPY
0xac POP
0xad SWAP5
0xae SWAP8
0xaf POP
0xb0 PUSH2 0x135
0xb3 SWAP7
0xb4 POP
0xb5 POP
0xb6 POP
0xb7 POP
0xb8 POP
0xb9 POP
0xba POP
0xbb JUMP
---
0x6f: JUMPDEST 
0x71: V28 = 0x40
0x74: V29 = M[0x40]
0x75: V30 = 0x20
0x77: V31 = 0x4
0x7a: V32 = CALLDATALOAD 0x4
0x7d: V33 = ADD 0x4 V32
0x7e: V34 = CALLDATALOAD V33
0x7f: V35 = 0x1f
0x82: V36 = ADD V34 0x1f
0x85: V37 = DIV V36 0x20
0x87: V38 = MUL 0x20 V37
0x89: V39 = ADD V29 V38
0x8b: V40 = ADD 0x20 V39
0x8e: M[0x40] = V40
0x91: M[V29] = V34
0x92: V41 = 0x61
0x96: V42 = CALLDATASIZE
0x9a: V43 = 0x24
0x9f: V44 = ADD 0x24 V32
0xa5: V45 = ADD V29 0x20
0xab: CALLDATACOPY V45 V44 V34
0xb0: V46 = 0x135
0xbb: JUMP 0x135
---
Entry stack: [V11, V24]
Stack pops: 1
Stack additions: [0x61, V29]
Exit stack: [V11, 0x61, V29]

================================

Block 0xbc
[0xbc:0x107]
---
Predecessors: [0x40]
Successors: [0x207]
---
0xbc JUMPDEST
0xbd PUSH1 0x40
0xbf DUP1
0xc0 MLOAD
0xc1 PUSH1 0x20
0xc3 PUSH1 0x4
0xc5 DUP1
0xc6 CALLDATALOAD
0xc7 DUP1
0xc8 DUP3
0xc9 ADD
0xca CALLDATALOAD
0xcb PUSH1 0x1f
0xcd DUP2
0xce ADD
0xcf DUP5
0xd0 SWAP1
0xd1 DIV
0xd2 DUP5
0xd3 MUL
0xd4 DUP6
0xd5 ADD
0xd6 DUP5
0xd7 ADD
0xd8 SWAP1
0xd9 SWAP6
0xda MSTORE
0xdb DUP5
0xdc DUP5
0xdd MSTORE
0xde PUSH2 0x61
0xe1 SWAP5
0xe2 CALLDATASIZE
0xe3 SWAP5
0xe4 SWAP3
0xe5 SWAP4
0xe6 PUSH1 0x24
0xe8 SWAP4
0xe9 SWAP3
0xea DUP5
0xeb ADD
0xec SWAP2
0xed SWAP1
0xee DUP2
0xef SWAP1
0xf0 DUP5
0xf1 ADD
0xf2 DUP4
0xf3 DUP3
0xf4 DUP1
0xf5 DUP3
0xf6 DUP5
0xf7 CALLDATACOPY
0xf8 POP
0xf9 SWAP5
0xfa SWAP8
0xfb POP
0xfc PUSH2 0x207
0xff SWAP7
0x100 POP
0x101 POP
0x102 POP
0x103 POP
0x104 POP
0x105 POP
0x106 POP
0x107 JUMP
---
0xbc: JUMPDEST 
0xbd: V47 = 0x40
0xc0: V48 = M[0x40]
0xc1: V49 = 0x20
0xc3: V50 = 0x4
0xc6: V51 = CALLDATALOAD 0x4
0xc9: V52 = ADD 0x4 V51
0xca: V53 = CALLDATALOAD V52
0xcb: V54 = 0x1f
0xce: V55 = ADD V53 0x1f
0xd1: V56 = DIV V55 0x20
0xd3: V57 = MUL 0x20 V56
0xd5: V58 = ADD V48 V57
0xd7: V59 = ADD 0x20 V58
0xda: M[0x40] = V59
0xdd: M[V48] = V53
0xde: V60 = 0x61
0xe2: V61 = CALLDATASIZE
0xe6: V62 = 0x24
0xeb: V63 = ADD 0x24 V51
0xf1: V64 = ADD V48 0x20
0xf7: CALLDATACOPY V64 V63 V53
0xfc: V65 = 0x207
0x107: JUMP 0x207
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x61, V48]
Exit stack: [V11, 0x61, V48]

================================

Block 0x108
[0x108:0x10f]
---
Predecessors: [0x4b]
Successors: [0x110, 0x114]
---
0x108 JUMPDEST
0x109 CALLVALUE
0x10a DUP1
0x10b ISZERO
0x10c PUSH2 0x114
0x10f JUMPI
---
0x108: JUMPDEST 
0x109: V66 = CALLVALUE
0x10b: V67 = ISZERO V66
0x10c: V68 = 0x114
0x10f: JUMPI 0x114 V67
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V66]
Exit stack: [V11, V66]

================================

Block 0x110
[0x110:0x113]
---
Predecessors: [0x108]
Successors: []
---
0x110 PUSH1 0x0
0x112 DUP1
0x113 REVERT
---
0x110: V69 = 0x0
0x113: REVERT 0x0 0x0
---
Entry stack: [V11, V66]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V66]

================================

Block 0x114
[0x114:0x11c]
---
Predecessors: [0x108]
Successors: [0x321]
---
0x114 JUMPDEST
0x115 POP
0x116 PUSH2 0x61
0x119 PUSH2 0x321
0x11c JUMP
---
0x114: JUMPDEST 
0x116: V70 = 0x61
0x119: V71 = 0x321
0x11c: JUMP 0x321
---
Entry stack: [V11, V66]
Stack pops: 1
Stack additions: [0x61]
Exit stack: [V11, 0x61]

================================

Block 0x11d
[0x11d:0x124]
---
Predecessors: [0x56]
Successors: [0x125, 0x129]
---
0x11d JUMPDEST
0x11e CALLVALUE
0x11f DUP1
0x120 ISZERO
0x121 PUSH2 0x129
0x124 JUMPI
---
0x11d: JUMPDEST 
0x11e: V72 = CALLVALUE
0x120: V73 = ISZERO V72
0x121: V74 = 0x129
0x124: JUMPI 0x129 V73
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V72]
Exit stack: [V11, V72]

================================

Block 0x125
[0x125:0x128]
---
Predecessors: [0x11d]
Successors: []
---
0x125 PUSH1 0x0
0x127 DUP1
0x128 REVERT
---
0x125: V75 = 0x0
0x128: REVERT 0x0 0x0
---
Entry stack: [V11, V72]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V72]

================================

Block 0x129
[0x129:0x134]
---
Predecessors: [0x11d]
Successors: [0x360]
---
0x129 JUMPDEST
0x12a POP
0x12b PUSH2 0x61
0x12e PUSH1 0x4
0x130 CALLDATALOAD
0x131 PUSH2 0x360
0x134 JUMP
---
0x129: JUMPDEST 
0x12b: V76 = 0x61
0x12e: V77 = 0x4
0x130: V78 = CALLDATALOAD 0x4
0x131: V79 = 0x360
0x134: JUMP 0x360
---
Entry stack: [V11, V72]
Stack pops: 1
Stack additions: [0x61, V78]
Exit stack: [V11, 0x61, V78]

================================

Block 0x135
[0x135:0x13e]
---
Predecessors: [0x6f]
Successors: [0x13f, 0x204]
---
0x135 JUMPDEST
0x136 PUSH1 0x0
0x138 SLOAD
0x139 ISZERO
0x13a ISZERO
0x13b PUSH2 0x204
0x13e JUMPI
---
0x135: JUMPDEST 
0x136: V80 = 0x0
0x138: V81 = S[0x0]
0x139: V82 = ISZERO V81
0x13a: V83 = ISZERO V82
0x13b: V84 = 0x204
0x13e: JUMPI 0x204 V83
---
Entry stack: [V11, 0x61, V29]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V29]

================================

Block 0x13f
[0x13f:0x151]
---
Predecessors: [0x135]
Successors: [0x152]
---
0x13f DUP1
0x140 PUSH1 0x40
0x142 MLOAD
0x143 PUSH1 0x20
0x145 ADD
0x146 DUP1
0x147 DUP3
0x148 DUP1
0x149 MLOAD
0x14a SWAP1
0x14b PUSH1 0x20
0x14d ADD
0x14e SWAP1
0x14f DUP1
0x150 DUP4
0x151 DUP4
---
0x140: V85 = 0x40
0x142: V86 = M[0x40]
0x143: V87 = 0x20
0x145: V88 = ADD 0x20 V86
0x149: V89 = M[V29]
0x14b: V90 = 0x20
0x14d: V91 = ADD 0x20 V29
---
Entry stack: [V11, 0x61, V29]
Stack pops: 1
Stack additions: [S0, S0, V88, V88, V91, V89, V89, V88, V91]
Exit stack: [V11, 0x61, V29, V29, V88, V88, V91, V89, V89, V88, V91]

================================

Block 0x152
[0x152:0x15a]
---
Predecessors: [0x13f, 0x15b]
Successors: [0x15b, 0x171]
---
0x152 JUMPDEST
0x153 PUSH1 0x20
0x155 DUP4
0x156 LT
0x157 PUSH2 0x171
0x15a JUMPI
---
0x152: JUMPDEST 
0x153: V92 = 0x20
0x156: V93 = LT S2 0x20
0x157: V94 = 0x171
0x15a: JUMPI 0x171 V93
---
Entry stack: [V11, 0x61, V29, V29, V88, V88, V91, V89, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x61, V29, V29, V88, V88, V91, V89, S2, S1, S0]

================================

Block 0x15b
[0x15b:0x170]
---
Predecessors: [0x152]
Successors: [0x152]
---
0x15b DUP1
0x15c MLOAD
0x15d DUP3
0x15e MSTORE
0x15f PUSH1 0x1f
0x161 NOT
0x162 SWAP1
0x163 SWAP3
0x164 ADD
0x165 SWAP2
0x166 PUSH1 0x20
0x168 SWAP2
0x169 DUP3
0x16a ADD
0x16b SWAP2
0x16c ADD
0x16d PUSH2 0x152
0x170 JUMP
---
0x15c: V95 = M[S0]
0x15e: M[S1] = V95
0x15f: V96 = 0x1f
0x161: V97 = NOT 0x1f
0x164: V98 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x166: V99 = 0x20
0x16a: V100 = ADD 0x20 S1
0x16c: V101 = ADD 0x20 S0
0x16d: V102 = 0x152
0x170: JUMP 0x152
---
Entry stack: [V11, 0x61, V29, V29, V88, V88, V91, V89, S2, S1, S0]
Stack pops: 3
Stack additions: [V98, V100, V101]
Exit stack: [V11, 0x61, V29, V29, V88, V88, V91, V89, V98, V100, V101]

================================

Block 0x171
[0x171:0x1b4]
---
Predecessors: [0x152]
Successors: [0x1b5]
---
0x171 JUMPDEST
0x172 PUSH1 0x1
0x174 DUP4
0x175 PUSH1 0x20
0x177 SUB
0x178 PUSH2 0x100
0x17b EXP
0x17c SUB
0x17d DUP1
0x17e NOT
0x17f DUP3
0x180 MLOAD
0x181 AND
0x182 DUP2
0x183 DUP5
0x184 MLOAD
0x185 AND
0x186 DUP1
0x187 DUP3
0x188 OR
0x189 DUP6
0x18a MSTORE
0x18b POP
0x18c POP
0x18d POP
0x18e POP
0x18f POP
0x190 POP
0x191 SWAP1
0x192 POP
0x193 ADD
0x194 SWAP2
0x195 POP
0x196 POP
0x197 PUSH1 0x40
0x199 MLOAD
0x19a PUSH1 0x20
0x19c DUP2
0x19d DUP4
0x19e SUB
0x19f SUB
0x1a0 DUP2
0x1a1 MSTORE
0x1a2 SWAP1
0x1a3 PUSH1 0x40
0x1a5 MSTORE
0x1a6 PUSH1 0x40
0x1a8 MLOAD
0x1a9 DUP1
0x1aa DUP3
0x1ab DUP1
0x1ac MLOAD
0x1ad SWAP1
0x1ae PUSH1 0x20
0x1b0 ADD
0x1b1 SWAP1
0x1b2 DUP1
0x1b3 DUP4
0x1b4 DUP4
---
0x171: JUMPDEST 
0x172: V103 = 0x1
0x175: V104 = 0x20
0x177: V105 = SUB 0x20 S2
0x178: V106 = 0x100
0x17b: V107 = EXP 0x100 V105
0x17c: V108 = SUB V107 0x1
0x17e: V109 = NOT V108
0x180: V110 = M[S0]
0x181: V111 = AND V110 V109
0x184: V112 = M[S1]
0x185: V113 = AND V112 V108
0x188: V114 = OR V111 V113
0x18a: M[S1] = V114
0x193: V115 = ADD V89 V88
0x197: V116 = 0x40
0x199: V117 = M[0x40]
0x19a: V118 = 0x20
0x19e: V119 = SUB V115 V117
0x19f: V120 = SUB V119 0x20
0x1a1: M[V117] = V120
0x1a3: V121 = 0x40
0x1a5: M[0x40] = V115
0x1a6: V122 = 0x40
0x1a8: V123 = M[0x40]
0x1ac: V124 = M[V117]
0x1ae: V125 = 0x20
0x1b0: V126 = ADD 0x20 V117
---
Entry stack: [V11, 0x61, V29, V29, V88, V88, V91, V89, S2, S1, S0]
Stack pops: 8
Stack additions: [V117, V123, V123, V126, V124, V124, V123, V126]
Exit stack: [V11, 0x61, V29, V117, V123, V123, V126, V124, V124, V123, V126]

================================

Block 0x1b5
[0x1b5:0x1bd]
---
Predecessors: [0x171, 0x1be]
Successors: [0x1be, 0x1d4]
---
0x1b5 JUMPDEST
0x1b6 PUSH1 0x20
0x1b8 DUP4
0x1b9 LT
0x1ba PUSH2 0x1d4
0x1bd JUMPI
---
0x1b5: JUMPDEST 
0x1b6: V127 = 0x20
0x1b9: V128 = LT S2 0x20
0x1ba: V129 = 0x1d4
0x1bd: JUMPI 0x1d4 V128
---
Entry stack: [V11, 0x61, V29, V117, V123, V123, V126, V124, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x61, V29, V117, V123, V123, V126, V124, S2, S1, S0]

================================

Block 0x1be
[0x1be:0x1d3]
---
Predecessors: [0x1b5]
Successors: [0x1b5]
---
0x1be DUP1
0x1bf MLOAD
0x1c0 DUP3
0x1c1 MSTORE
0x1c2 PUSH1 0x1f
0x1c4 NOT
0x1c5 SWAP1
0x1c6 SWAP3
0x1c7 ADD
0x1c8 SWAP2
0x1c9 PUSH1 0x20
0x1cb SWAP2
0x1cc DUP3
0x1cd ADD
0x1ce SWAP2
0x1cf ADD
0x1d0 PUSH2 0x1b5
0x1d3 JUMP
---
0x1bf: V130 = M[S0]
0x1c1: M[S1] = V130
0x1c2: V131 = 0x1f
0x1c4: V132 = NOT 0x1f
0x1c7: V133 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x1c9: V134 = 0x20
0x1cd: V135 = ADD 0x20 S1
0x1cf: V136 = ADD 0x20 S0
0x1d0: V137 = 0x1b5
0x1d3: JUMP 0x1b5
---
Entry stack: [V11, 0x61, V29, V117, V123, V123, V126, V124, S2, S1, S0]
Stack pops: 3
Stack additions: [V133, V135, V136]
Exit stack: [V11, 0x61, V29, V117, V123, V123, V126, V124, V133, V135, V136]

================================

Block 0x1d4
[0x1d4:0x203]
---
Predecessors: [0x1b5]
Successors: [0x204]
---
0x1d4 JUMPDEST
0x1d5 MLOAD
0x1d6 DUP2
0x1d7 MLOAD
0x1d8 PUSH1 0x20
0x1da SWAP4
0x1db SWAP1
0x1dc SWAP4
0x1dd SUB
0x1de PUSH2 0x100
0x1e1 EXP
0x1e2 PUSH1 0x0
0x1e4 NOT
0x1e5 ADD
0x1e6 DUP1
0x1e7 NOT
0x1e8 SWAP1
0x1e9 SWAP2
0x1ea AND
0x1eb SWAP3
0x1ec AND
0x1ed SWAP2
0x1ee SWAP1
0x1ef SWAP2
0x1f0 OR
0x1f1 SWAP1
0x1f2 MSTORE
0x1f3 PUSH1 0x40
0x1f5 MLOAD
0x1f6 SWAP3
0x1f7 ADD
0x1f8 DUP3
0x1f9 SWAP1
0x1fa SUB
0x1fb SWAP1
0x1fc SWAP2
0x1fd SHA3
0x1fe PUSH1 0x0
0x200 SSTORE
0x201 POP
0x202 POP
0x203 POP
---
0x1d4: JUMPDEST 
0x1d5: V138 = M[S0]
0x1d7: V139 = M[S1]
0x1d8: V140 = 0x20
0x1dd: V141 = SUB 0x20 S2
0x1de: V142 = 0x100
0x1e1: V143 = EXP 0x100 V141
0x1e2: V144 = 0x0
0x1e4: V145 = NOT 0x0
0x1e5: V146 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V143
0x1e7: V147 = NOT V146
0x1ea: V148 = AND V138 V147
0x1ec: V149 = AND V139 V146
0x1f0: V150 = OR V149 V148
0x1f2: M[S1] = V150
0x1f3: V151 = 0x40
0x1f5: V152 = M[0x40]
0x1f7: V153 = ADD V123 V124
0x1fa: V154 = SUB V153 V152
0x1fd: V155 = SHA3 V152 V154
0x1fe: V156 = 0x0
0x200: S[0x0] = V155
---
Entry stack: [V11, 0x61, V29, V117, V123, V123, V126, V124, S2, S1, S0]
Stack pops: 8
Stack additions: []
Exit stack: [V11, 0x61, V29]

================================

Block 0x204
[0x204:0x206]
---
Predecessors: [0x135, 0x1d4, 0x2a9, 0x2e1, 0x360]
Successors: [0x61]
---
0x204 JUMPDEST
0x205 POP
0x206 JUMP
---
0x204: JUMPDEST 
0x206: JUMP 0x61
---
Entry stack: [V11, 0x61, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x207
[0x207:0x20e]
---
Predecessors: [0xbc]
Successors: [0x20f, 0x213]
---
0x207 JUMPDEST
0x208 CALLER
0x209 ORIGIN
0x20a EQ
0x20b PUSH2 0x213
0x20e JUMPI
---
0x207: JUMPDEST 
0x208: V157 = CALLER
0x209: V158 = ORIGIN
0x20a: V159 = EQ V158 V157
0x20b: V160 = 0x213
0x20e: JUMPI 0x213 V159
---
Entry stack: [V11, 0x61, V48]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V48]

================================

Block 0x20f
[0x20f:0x212]
---
Predecessors: [0x207]
Successors: []
---
0x20f PUSH1 0x0
0x211 DUP1
0x212 REVERT
---
0x20f: V161 = 0x0
0x212: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61, V48]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V48]

================================

Block 0x213
[0x213:0x226]
---
Predecessors: [0x207]
Successors: [0x227]
---
0x213 JUMPDEST
0x214 DUP1
0x215 PUSH1 0x40
0x217 MLOAD
0x218 PUSH1 0x20
0x21a ADD
0x21b DUP1
0x21c DUP3
0x21d DUP1
0x21e MLOAD
0x21f SWAP1
0x220 PUSH1 0x20
0x222 ADD
0x223 SWAP1
0x224 DUP1
0x225 DUP4
0x226 DUP4
---
0x213: JUMPDEST 
0x215: V162 = 0x40
0x217: V163 = M[0x40]
0x218: V164 = 0x20
0x21a: V165 = ADD 0x20 V163
0x21e: V166 = M[V48]
0x220: V167 = 0x20
0x222: V168 = ADD 0x20 V48
---
Entry stack: [V11, 0x61, V48]
Stack pops: 1
Stack additions: [S0, S0, V165, V165, V168, V166, V166, V165, V168]
Exit stack: [V11, 0x61, V48, V48, V165, V165, V168, V166, V166, V165, V168]

================================

Block 0x227
[0x227:0x22f]
---
Predecessors: [0x213, 0x230]
Successors: [0x230, 0x246]
---
0x227 JUMPDEST
0x228 PUSH1 0x20
0x22a DUP4
0x22b LT
0x22c PUSH2 0x246
0x22f JUMPI
---
0x227: JUMPDEST 
0x228: V169 = 0x20
0x22b: V170 = LT S2 0x20
0x22c: V171 = 0x246
0x22f: JUMPI 0x246 V170
---
Entry stack: [V11, 0x61, V48, V48, V165, V165, V168, V166, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x61, V48, V48, V165, V165, V168, V166, S2, S1, S0]

================================

Block 0x230
[0x230:0x245]
---
Predecessors: [0x227]
Successors: [0x227]
---
0x230 DUP1
0x231 MLOAD
0x232 DUP3
0x233 MSTORE
0x234 PUSH1 0x1f
0x236 NOT
0x237 SWAP1
0x238 SWAP3
0x239 ADD
0x23a SWAP2
0x23b PUSH1 0x20
0x23d SWAP2
0x23e DUP3
0x23f ADD
0x240 SWAP2
0x241 ADD
0x242 PUSH2 0x227
0x245 JUMP
---
0x231: V172 = M[S0]
0x233: M[S1] = V172
0x234: V173 = 0x1f
0x236: V174 = NOT 0x1f
0x239: V175 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x23b: V176 = 0x20
0x23f: V177 = ADD 0x20 S1
0x241: V178 = ADD 0x20 S0
0x242: V179 = 0x227
0x245: JUMP 0x227
---
Entry stack: [V11, 0x61, V48, V48, V165, V165, V168, V166, S2, S1, S0]
Stack pops: 3
Stack additions: [V175, V177, V178]
Exit stack: [V11, 0x61, V48, V48, V165, V165, V168, V166, V175, V177, V178]

================================

Block 0x246
[0x246:0x289]
---
Predecessors: [0x227]
Successors: [0x28a]
---
0x246 JUMPDEST
0x247 PUSH1 0x1
0x249 DUP4
0x24a PUSH1 0x20
0x24c SUB
0x24d PUSH2 0x100
0x250 EXP
0x251 SUB
0x252 DUP1
0x253 NOT
0x254 DUP3
0x255 MLOAD
0x256 AND
0x257 DUP2
0x258 DUP5
0x259 MLOAD
0x25a AND
0x25b DUP1
0x25c DUP3
0x25d OR
0x25e DUP6
0x25f MSTORE
0x260 POP
0x261 POP
0x262 POP
0x263 POP
0x264 POP
0x265 POP
0x266 SWAP1
0x267 POP
0x268 ADD
0x269 SWAP2
0x26a POP
0x26b POP
0x26c PUSH1 0x40
0x26e MLOAD
0x26f PUSH1 0x20
0x271 DUP2
0x272 DUP4
0x273 SUB
0x274 SUB
0x275 DUP2
0x276 MSTORE
0x277 SWAP1
0x278 PUSH1 0x40
0x27a MSTORE
0x27b PUSH1 0x40
0x27d MLOAD
0x27e DUP1
0x27f DUP3
0x280 DUP1
0x281 MLOAD
0x282 SWAP1
0x283 PUSH1 0x20
0x285 ADD
0x286 SWAP1
0x287 DUP1
0x288 DUP4
0x289 DUP4
---
0x246: JUMPDEST 
0x247: V180 = 0x1
0x24a: V181 = 0x20
0x24c: V182 = SUB 0x20 S2
0x24d: V183 = 0x100
0x250: V184 = EXP 0x100 V182
0x251: V185 = SUB V184 0x1
0x253: V186 = NOT V185
0x255: V187 = M[S0]
0x256: V188 = AND V187 V186
0x259: V189 = M[S1]
0x25a: V190 = AND V189 V185
0x25d: V191 = OR V188 V190
0x25f: M[S1] = V191
0x268: V192 = ADD V166 V165
0x26c: V193 = 0x40
0x26e: V194 = M[0x40]
0x26f: V195 = 0x20
0x273: V196 = SUB V192 V194
0x274: V197 = SUB V196 0x20
0x276: M[V194] = V197
0x278: V198 = 0x40
0x27a: M[0x40] = V192
0x27b: V199 = 0x40
0x27d: V200 = M[0x40]
0x281: V201 = M[V194]
0x283: V202 = 0x20
0x285: V203 = ADD 0x20 V194
---
Entry stack: [V11, 0x61, V48, V48, V165, V165, V168, V166, S2, S1, S0]
Stack pops: 8
Stack additions: [V194, V200, V200, V203, V201, V201, V200, V203]
Exit stack: [V11, 0x61, V48, V194, V200, V200, V203, V201, V201, V200, V203]

================================

Block 0x28a
[0x28a:0x292]
---
Predecessors: [0x246, 0x293]
Successors: [0x293, 0x2a9]
---
0x28a JUMPDEST
0x28b PUSH1 0x20
0x28d DUP4
0x28e LT
0x28f PUSH2 0x2a9
0x292 JUMPI
---
0x28a: JUMPDEST 
0x28b: V204 = 0x20
0x28e: V205 = LT S2 0x20
0x28f: V206 = 0x2a9
0x292: JUMPI 0x2a9 V205
---
Entry stack: [V11, 0x61, V48, V194, V200, V200, V203, V201, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x61, V48, V194, V200, V200, V203, V201, S2, S1, S0]

================================

Block 0x293
[0x293:0x2a8]
---
Predecessors: [0x28a]
Successors: [0x28a]
---
0x293 DUP1
0x294 MLOAD
0x295 DUP3
0x296 MSTORE
0x297 PUSH1 0x1f
0x299 NOT
0x29a SWAP1
0x29b SWAP3
0x29c ADD
0x29d SWAP2
0x29e PUSH1 0x20
0x2a0 SWAP2
0x2a1 DUP3
0x2a2 ADD
0x2a3 SWAP2
0x2a4 ADD
0x2a5 PUSH2 0x28a
0x2a8 JUMP
---
0x294: V207 = M[S0]
0x296: M[S1] = V207
0x297: V208 = 0x1f
0x299: V209 = NOT 0x1f
0x29c: V210 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x29e: V211 = 0x20
0x2a2: V212 = ADD 0x20 S1
0x2a4: V213 = ADD 0x20 S0
0x2a5: V214 = 0x28a
0x2a8: JUMP 0x28a
---
Entry stack: [V11, 0x61, V48, V194, V200, V200, V203, V201, S2, S1, S0]
Stack pops: 3
Stack additions: [V210, V212, V213]
Exit stack: [V11, 0x61, V48, V194, V200, V200, V203, V201, V210, V212, V213]

================================

Block 0x2a9
[0x2a9:0x2e0]
---
Predecessors: [0x28a]
Successors: [0x204, 0x2e1]
---
0x2a9 JUMPDEST
0x2aa MLOAD
0x2ab DUP2
0x2ac MLOAD
0x2ad PUSH1 0x20
0x2af SWAP4
0x2b0 SWAP1
0x2b1 SWAP4
0x2b2 SUB
0x2b3 PUSH2 0x100
0x2b6 EXP
0x2b7 PUSH1 0x0
0x2b9 NOT
0x2ba ADD
0x2bb DUP1
0x2bc NOT
0x2bd SWAP1
0x2be SWAP2
0x2bf AND
0x2c0 SWAP3
0x2c1 AND
0x2c2 SWAP2
0x2c3 SWAP1
0x2c4 SWAP2
0x2c5 OR
0x2c6 SWAP1
0x2c7 MSTORE
0x2c8 PUSH1 0x40
0x2ca MLOAD
0x2cb SWAP3
0x2cc ADD
0x2cd DUP3
0x2ce SWAP1
0x2cf SUB
0x2d0 SWAP1
0x2d1 SWAP2
0x2d2 SHA3
0x2d3 PUSH1 0x0
0x2d5 SLOAD
0x2d6 EQ
0x2d7 ISZERO
0x2d8 SWAP3
0x2d9 POP
0x2da PUSH2 0x204
0x2dd SWAP2
0x2de POP
0x2df POP
0x2e0 JUMPI
---
0x2a9: JUMPDEST 
0x2aa: V215 = M[S0]
0x2ac: V216 = M[S1]
0x2ad: V217 = 0x20
0x2b2: V218 = SUB 0x20 S2
0x2b3: V219 = 0x100
0x2b6: V220 = EXP 0x100 V218
0x2b7: V221 = 0x0
0x2b9: V222 = NOT 0x0
0x2ba: V223 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V220
0x2bc: V224 = NOT V223
0x2bf: V225 = AND V215 V224
0x2c1: V226 = AND V216 V223
0x2c5: V227 = OR V226 V225
0x2c7: M[S1] = V227
0x2c8: V228 = 0x40
0x2ca: V229 = M[0x40]
0x2cc: V230 = ADD V200 V201
0x2cf: V231 = SUB V230 V229
0x2d2: V232 = SHA3 V229 V231
0x2d3: V233 = 0x0
0x2d5: V234 = S[0x0]
0x2d6: V235 = EQ V234 V232
0x2d7: V236 = ISZERO V235
0x2da: V237 = 0x204
0x2e0: JUMPI 0x204 V236
---
Entry stack: [V11, 0x61, V48, V194, V200, V200, V203, V201, S2, S1, S0]
Stack pops: 8
Stack additions: []
Exit stack: [V11, 0x61, V48]

================================

Block 0x2e1
[0x2e1:0x2f0]
---
Predecessors: [0x2a9]
Successors: [0x204, 0x2f1]
---
0x2e1 PUSH8 0x2c68af0bb140000
0x2ea CALLVALUE
0x2eb GT
0x2ec ISZERO
0x2ed PUSH2 0x204
0x2f0 JUMPI
---
0x2e1: V238 = 0x2c68af0bb140000
0x2ea: V239 = CALLVALUE
0x2eb: V240 = GT V239 0x2c68af0bb140000
0x2ec: V241 = ISZERO V240
0x2ed: V242 = 0x204
0x2f0: JUMPI 0x204 V241
---
Entry stack: [V11, 0x61, V48]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V48]

================================

Block 0x2f1
[0x2f1:0x313]
---
Predecessors: [0x2e1]
Successors: [0x314, 0x31d]
---
0x2f1 PUSH1 0x40
0x2f3 MLOAD
0x2f4 CALLER
0x2f5 SWAP1
0x2f6 ADDRESS
0x2f7 BALANCE
0x2f8 DUP1
0x2f9 ISZERO
0x2fa PUSH2 0x8fc
0x2fd MUL
0x2fe SWAP2
0x2ff PUSH1 0x0
0x301 DUP2
0x302 DUP2
0x303 DUP2
0x304 DUP6
0x305 DUP9
0x306 DUP9
0x307 CALL
0x308 SWAP4
0x309 POP
0x30a POP
0x30b POP
0x30c POP
0x30d ISZERO
0x30e DUP1
0x30f ISZERO
0x310 PUSH2 0x31d
0x313 JUMPI
---
0x2f1: V243 = 0x40
0x2f3: V244 = M[0x40]
0x2f4: V245 = CALLER
0x2f6: V246 = ADDRESS
0x2f7: V247 = BALANCE V246
0x2f9: V248 = ISZERO V247
0x2fa: V249 = 0x8fc
0x2fd: V250 = MUL 0x8fc V248
0x2ff: V251 = 0x0
0x307: V252 = CALL V250 V245 V247 V244 0x0 V244 0x0
0x30d: V253 = ISZERO V252
0x30f: V254 = ISZERO V253
0x310: V255 = 0x31d
0x313: JUMPI 0x31d V254
---
Entry stack: [V11, 0x61, V48]
Stack pops: 0
Stack additions: [V253]
Exit stack: [V11, 0x61, V48, V253]

================================

Block 0x314
[0x314:0x31c]
---
Predecessors: [0x2f1]
Successors: []
---
0x314 RETURNDATASIZE
0x315 PUSH1 0x0
0x317 DUP1
0x318 RETURNDATACOPY
0x319 RETURNDATASIZE
0x31a PUSH1 0x0
0x31c REVERT
---
0x314: V256 = RETURNDATASIZE
0x315: V257 = 0x0
0x318: RETURNDATACOPY 0x0 0x0 V256
0x319: V258 = RETURNDATASIZE
0x31a: V259 = 0x0
0x31c: REVERT 0x0 V258
---
Entry stack: [V11, 0x61, V48, V253]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V48, V253]

================================

Block 0x31d
[0x31d:0x320]
---
Predecessors: [0x2f1]
Successors: [0x61]
---
0x31d JUMPDEST
0x31e POP
0x31f POP
0x320 JUMP
---
0x31d: JUMPDEST 
0x320: JUMP 0x61
---
Entry stack: [V11, 0x61, V48, V253]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x321
[0x321:0x340]
---
Predecessors: [0x114]
Successors: [0x341, 0x345]
---
0x321 JUMPDEST
0x322 PUSH1 0x1
0x324 SLOAD
0x325 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x33a AND
0x33b CALLER
0x33c EQ
0x33d PUSH2 0x345
0x340 JUMPI
---
0x321: JUMPDEST 
0x322: V260 = 0x1
0x324: V261 = S[0x1]
0x325: V262 = 0xffffffffffffffffffffffffffffffffffffffff
0x33a: V263 = AND 0xffffffffffffffffffffffffffffffffffffffff V261
0x33b: V264 = CALLER
0x33c: V265 = EQ V264 V263
0x33d: V266 = 0x345
0x340: JUMPI 0x345 V265
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0x341
[0x341:0x344]
---
Predecessors: [0x321]
Successors: []
---
0x341 PUSH1 0x0
0x343 DUP1
0x344 REVERT
---
0x341: V267 = 0x0
0x344: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0x345
[0x345:0x35f]
---
Predecessors: [0x321]
Successors: []
---
0x345 JUMPDEST
0x346 PUSH1 0x1
0x348 SLOAD
0x349 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x35e AND
0x35f SELFDESTRUCT
---
0x345: JUMPDEST 
0x346: V268 = 0x1
0x348: V269 = S[0x1]
0x349: V270 = 0xffffffffffffffffffffffffffffffffffffffff
0x35e: V271 = AND 0xffffffffffffffffffffffffffffffffffffffff V269
0x35f: SELFDESTRUCT V271
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0x360
[0x360:0x369]
---
Predecessors: [0x129]
Successors: [0x204, 0x36a]
---
0x360 JUMPDEST
0x361 PUSH1 0x0
0x363 SLOAD
0x364 ISZERO
0x365 ISZERO
0x366 PUSH2 0x204
0x369 JUMPI
---
0x360: JUMPDEST 
0x361: V272 = 0x0
0x363: V273 = S[0x0]
0x364: V274 = ISZERO V273
0x365: V275 = ISZERO V274
0x366: V276 = 0x204
0x369: JUMPI 0x204 V275
---
Entry stack: [V11, 0x61, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V78]

================================

Block 0x36a
[0x36a:0x36d]
---
Predecessors: [0x360]
Successors: [0x61]
---
0x36a PUSH1 0x0
0x36c SSTORE
0x36d JUMP
---
0x36a: V277 = 0x0
0x36c: S[0x0] = V78
0x36d: JUMP 0x61
---
Entry stack: [V11, 0x61, V78]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x36e
[0x36e:0x3a0]
---
Predecessors: []
Successors: []
---
0x36e STOP
0x36f LOG1
0x370 PUSH6 0x627a7a723058
0x377 SHA3
0x378 EXTCODEHASH
0x379 MISSING 0xa6
0x37a MISSING 0x4d
0x37b SGT
0x37c MISSING 0xc5
0x37d MSIZE
0x37e SWAP6
0x37f BYTE
0x380 SWAP14
0x381 DIV
0x382 MISSING 0x48
0x383 MISSING 0xd1
0x384 PUSH28 0x5437dd4f59055a17dd9cbf5abfafbd8e31c1a50029
---
0x36e: STOP 
0x36f: LOG S0 S1 S2
0x370: V278 = 0x627a7a723058
0x377: V279 = SHA3 0x627a7a723058 S3
0x378: V280 = EXTCODEHASH V279
0x379: MISSING 0xa6
0x37a: MISSING 0x4d
0x37b: V281 = SGT S0 S1
0x37c: MISSING 0xc5
0x37d: V282 = MSIZE
0x37f: V283 = BYTE S5 S0
0x381: V284 = DIV S14 S1
0x382: MISSING 0x48
0x383: MISSING 0xd1
0x384: V285 = 0x5437dd4f59055a17dd9cbf5abfafbd8e31c1a50029
---
Entry stack: []
Stack pops: 0
Stack additions: [V280, V281, V284, S2, S3, S4, V282, S6, S7, S8, S9, S10, S11, S12, S13, V283, 0x5437dd4f59055a17dd9cbf5abfafbd8e31c1a50029]
Exit stack: []

================================

Function 0:
Public function signature: 0x2bc38531
Entry block: 0x63
Exit block: 0x61
Body: 0x61, 0x63, 0x6b, 0x6f, 0x135, 0x13f, 0x152, 0x15b, 0x171, 0x1b5, 0x1be, 0x1d4, 0x204

Function 1:
Public function signature: 0x31fb67c2
Entry block: 0xbc
Exit block: 0x61
Body: 0x61, 0xbc, 0x204, 0x207, 0x20f, 0x213, 0x227, 0x230, 0x246, 0x28a, 0x293, 0x2a9, 0x2e1, 0x2f1, 0x314, 0x31d

Function 2:
Public function signature: 0x52efea6e
Entry block: 0x108
Exit block: 0x341
Body: 0x108, 0x110, 0x114, 0x321, 0x341, 0x345

Function 3:
Public function signature: 0x8b147245
Entry block: 0x11d
Exit block: 0x61
Body: 0x61, 0x11d, 0x125, 0x129, 0x204, 0x360, 0x36a

Function 4:
Public fallback function
Entry block: 0x61
Exit block: 0x61
Body: 0x61

