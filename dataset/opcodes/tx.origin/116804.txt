Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4b]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4b
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4b
0xc: JUMPI 0x4b V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x50]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0xb0c8f9dc
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x50
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0xb0c8f9dc
0x3b: V13 = EQ V11 0xb0c8f9dc
0x3c: V14 = 0x50
0x3f: JUMPI 0x50 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x72]
---
0x40 DUP1
0x41 PUSH4 0xf67187ac
0x46 EQ
0x47 PUSH2 0x72
0x4a JUMPI
---
0x41: V15 = 0xf67187ac
0x46: V16 = EQ 0xf67187ac V11
0x47: V17 = 0x72
0x4a: JUMPI 0x72 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x4f]
---
Predecessors: [0x0, 0x40]
Successors: []
---
0x4b JUMPDEST
0x4c PUSH1 0x0
0x4e DUP1
0x4f REVERT
---
0x4b: JUMPDEST 
0x4c: V18 = 0x0
0x4f: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x50
[0x50:0x57]
---
Predecessors: [0xd]
Successors: [0x58, 0x5c]
---
0x50 JUMPDEST
0x51 CALLVALUE
0x52 DUP1
0x53 ISZERO
0x54 PUSH2 0x5c
0x57 JUMPI
---
0x50: JUMPDEST 
0x51: V19 = CALLVALUE
0x53: V20 = ISZERO V19
0x54: V21 = 0x5c
0x57: JUMPI 0x5c V20
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V19]
Exit stack: [V11, V19]

================================

Block 0x58
[0x58:0x5b]
---
Predecessors: [0x50]
Successors: []
---
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x58: V22 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11, V19]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V19]

================================

Block 0x5c
[0x5c:0x6f]
---
Predecessors: [0x50]
Successors: [0xf4]
---
0x5c JUMPDEST
0x5d POP
0x5e PUSH2 0x70
0x61 PUSH1 0x4
0x63 DUP1
0x64 CALLDATALOAD
0x65 PUSH1 0x24
0x67 DUP2
0x68 ADD
0x69 SWAP2
0x6a ADD
0x6b CALLDATALOAD
0x6c PUSH2 0xf4
0x6f JUMP
---
0x5c: JUMPDEST 
0x5e: V23 = 0x70
0x61: V24 = 0x4
0x64: V25 = CALLDATALOAD 0x4
0x65: V26 = 0x24
0x68: V27 = ADD V25 0x24
0x6a: V28 = ADD 0x4 V25
0x6b: V29 = CALLDATALOAD V28
0x6c: V30 = 0xf4
0x6f: JUMP 0xf4
---
Entry stack: [V11, V19]
Stack pops: 1
Stack additions: [0x70, V27, V29]
Exit stack: [V11, 0x70, V27, V29]

================================

Block 0x70
[0x70:0x71]
---
Predecessors: [0x1dd]
Successors: []
---
0x70 JUMPDEST
0x71 STOP
---
0x70: JUMPDEST 
0x71: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x72
[0x72:0x79]
---
Predecessors: [0x40]
Successors: [0x7a, 0x7e]
---
0x72 JUMPDEST
0x73 CALLVALUE
0x74 DUP1
0x75 ISZERO
0x76 PUSH2 0x7e
0x79 JUMPI
---
0x72: JUMPDEST 
0x73: V31 = CALLVALUE
0x75: V32 = ISZERO V31
0x76: V33 = 0x7e
0x79: JUMPI 0x7e V32
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V31]
Exit stack: [V11, V31]

================================

Block 0x7a
[0x7a:0x7d]
---
Predecessors: [0x72]
Successors: []
---
0x7a PUSH1 0x0
0x7c DUP1
0x7d REVERT
---
0x7a: V34 = 0x0
0x7d: REVERT 0x0 0x0
---
Entry stack: [V11, V31]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V31]

================================

Block 0x7e
[0x7e:0xca]
---
Predecessors: [0x72]
Successors: [0x242]
---
0x7e JUMPDEST
0x7f POP
0x80 PUSH1 0x40
0x82 DUP1
0x83 MLOAD
0x84 PUSH1 0x20
0x86 PUSH1 0x4
0x88 DUP1
0x89 CALLDATALOAD
0x8a DUP1
0x8b DUP3
0x8c ADD
0x8d CALLDATALOAD
0x8e PUSH1 0x1f
0x90 DUP2
0x91 ADD
0x92 DUP5
0x93 SWAP1
0x94 DIV
0x95 DUP5
0x96 MUL
0x97 DUP6
0x98 ADD
0x99 DUP5
0x9a ADD
0x9b SWAP1
0x9c SWAP6
0x9d MSTORE
0x9e DUP5
0x9f DUP5
0xa0 MSTORE
0xa1 PUSH2 0xcb
0xa4 SWAP5
0xa5 CALLDATASIZE
0xa6 SWAP5
0xa7 SWAP3
0xa8 SWAP4
0xa9 PUSH1 0x24
0xab SWAP4
0xac SWAP3
0xad DUP5
0xae ADD
0xaf SWAP2
0xb0 SWAP1
0xb1 DUP2
0xb2 SWAP1
0xb3 DUP5
0xb4 ADD
0xb5 DUP4
0xb6 DUP3
0xb7 DUP1
0xb8 DUP3
0xb9 DUP5
0xba CALLDATACOPY
0xbb POP
0xbc SWAP5
0xbd SWAP8
0xbe POP
0xbf PUSH2 0x242
0xc2 SWAP7
0xc3 POP
0xc4 POP
0xc5 POP
0xc6 POP
0xc7 POP
0xc8 POP
0xc9 POP
0xca JUMP
---
0x7e: JUMPDEST 
0x80: V35 = 0x40
0x83: V36 = M[0x40]
0x84: V37 = 0x20
0x86: V38 = 0x4
0x89: V39 = CALLDATALOAD 0x4
0x8c: V40 = ADD 0x4 V39
0x8d: V41 = CALLDATALOAD V40
0x8e: V42 = 0x1f
0x91: V43 = ADD V41 0x1f
0x94: V44 = DIV V43 0x20
0x96: V45 = MUL 0x20 V44
0x98: V46 = ADD V36 V45
0x9a: V47 = ADD 0x20 V46
0x9d: M[0x40] = V47
0xa0: M[V36] = V41
0xa1: V48 = 0xcb
0xa5: V49 = CALLDATASIZE
0xa9: V50 = 0x24
0xae: V51 = ADD 0x24 V39
0xb4: V52 = ADD V36 0x20
0xba: CALLDATACOPY V52 V51 V41
0xbf: V53 = 0x242
0xca: JUMP 0x242
---
Entry stack: [V11, V31]
Stack pops: 1
Stack additions: [0xcb, V36]
Exit stack: [V11, 0xcb, V36]

================================

Block 0xcb
[0xcb:0xf3]
---
Predecessors: [0x275]
Successors: []
---
0xcb JUMPDEST
0xcc PUSH1 0x40
0xce DUP1
0xcf MLOAD
0xd0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe5 SWAP1
0xe6 SWAP3
0xe7 AND
0xe8 DUP3
0xe9 MSTORE
0xea MLOAD
0xeb SWAP1
0xec DUP2
0xed SWAP1
0xee SUB
0xef PUSH1 0x20
0xf1 ADD
0xf2 SWAP1
0xf3 RETURN
---
0xcb: JUMPDEST 
0xcc: V54 = 0x40
0xcf: V55 = M[0x40]
0xd0: V56 = 0xffffffffffffffffffffffffffffffffffffffff
0xe7: V57 = AND V160 0xffffffffffffffffffffffffffffffffffffffff
0xe9: M[V55] = V57
0xea: V58 = M[0x40]
0xee: V59 = SUB V55 V58
0xef: V60 = 0x20
0xf1: V61 = ADD 0x20 V59
0xf3: RETURN V58 V61
---
Entry stack: [V11, V160]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xf4
[0xf4:0x113]
---
Predecessors: [0x5c]
Successors: [0x114, 0x118]
---
0xf4 JUMPDEST
0xf5 PUSH1 0x1
0xf7 SLOAD
0xf8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10d AND
0x10e ORIGIN
0x10f EQ
0x110 PUSH2 0x118
0x113 JUMPI
---
0xf4: JUMPDEST 
0xf5: V62 = 0x1
0xf7: V63 = S[0x1]
0xf8: V64 = 0xffffffffffffffffffffffffffffffffffffffff
0x10d: V65 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0x10e: V66 = ORIGIN
0x10f: V67 = EQ V66 V65
0x110: V68 = 0x118
0x113: JUMPI 0x118 V67
---
Entry stack: [V11, 0x70, V27, V29]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x70, V27, V29]

================================

Block 0x114
[0x114:0x117]
---
Predecessors: [0xf4]
Successors: []
---
0x114 PUSH1 0x0
0x116 DUP1
0x117 REVERT
---
0x114: V69 = 0x0
0x117: REVERT 0x0 0x0
---
Entry stack: [V11, 0x70, V27, V29]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x70, V27, V29]

================================

Block 0x118
[0x118:0x176]
---
Predecessors: [0xf4]
Successors: [0x177, 0x1dd]
---
0x118 JUMPDEST
0x119 PUSH1 0x0
0x11b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x130 AND
0x131 PUSH1 0x0
0x133 DUP4
0x134 DUP4
0x135 PUSH1 0x40
0x137 MLOAD
0x138 DUP1
0x139 DUP4
0x13a DUP4
0x13b DUP1
0x13c DUP3
0x13d DUP5
0x13e CALLDATACOPY
0x13f SWAP1
0x140 SWAP2
0x141 ADD
0x142 SWAP5
0x143 DUP6
0x144 MSTORE
0x145 POP
0x146 POP
0x147 PUSH1 0x40
0x149 MLOAD
0x14a SWAP3
0x14b DUP4
0x14c SWAP1
0x14d SUB
0x14e PUSH1 0x20
0x150 ADD
0x151 SWAP1
0x152 SWAP3
0x153 SHA3
0x154 SLOAD
0x155 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16a AND
0x16b SWAP3
0x16c SWAP1
0x16d SWAP3
0x16e EQ
0x16f SWAP2
0x170 POP
0x171 PUSH2 0x1dd
0x174 SWAP1
0x175 POP
0x176 JUMPI
---
0x118: JUMPDEST 
0x119: V70 = 0x0
0x11b: V71 = 0xffffffffffffffffffffffffffffffffffffffff
0x130: V72 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x131: V73 = 0x0
0x135: V74 = 0x40
0x137: V75 = M[0x40]
0x13e: CALLDATACOPY V75 V27 V29
0x141: V76 = ADD V75 V29
0x144: M[V76] = 0x0
0x147: V77 = 0x40
0x149: V78 = M[0x40]
0x14d: V79 = SUB V76 V78
0x14e: V80 = 0x20
0x150: V81 = ADD 0x20 V79
0x153: V82 = SHA3 V78 V81
0x154: V83 = S[V82]
0x155: V84 = 0xffffffffffffffffffffffffffffffffffffffff
0x16a: V85 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0x16e: V86 = EQ V85 0x0
0x171: V87 = 0x1dd
0x176: JUMPI 0x1dd V86
---
Entry stack: [V11, 0x70, V27, V29]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x70, V27, V29]

================================

Block 0x177
[0x177:0x1dc]
---
Predecessors: [0x118]
Successors: []
---
0x177 PUSH1 0x40
0x179 DUP1
0x17a MLOAD
0x17b PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x19c DUP2
0x19d MSTORE
0x19e PUSH1 0x20
0x1a0 PUSH1 0x4
0x1a2 DUP3
0x1a3 ADD
0x1a4 MSTORE
0x1a5 PUSH1 0x18
0x1a7 PUSH1 0x24
0x1a9 DUP3
0x1aa ADD
0x1ab MSTORE
0x1ac PUSH32 0x49504653206861736820616c7265616479206578697374730000000000000000
0x1cd PUSH1 0x44
0x1cf DUP3
0x1d0 ADD
0x1d1 MSTORE
0x1d2 SWAP1
0x1d3 MLOAD
0x1d4 SWAP1
0x1d5 DUP2
0x1d6 SWAP1
0x1d7 SUB
0x1d8 PUSH1 0x64
0x1da ADD
0x1db SWAP1
0x1dc REVERT
---
0x177: V88 = 0x40
0x17a: V89 = M[0x40]
0x17b: V90 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x19d: M[V89] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x19e: V91 = 0x20
0x1a0: V92 = 0x4
0x1a3: V93 = ADD V89 0x4
0x1a4: M[V93] = 0x20
0x1a5: V94 = 0x18
0x1a7: V95 = 0x24
0x1aa: V96 = ADD V89 0x24
0x1ab: M[V96] = 0x18
0x1ac: V97 = 0x49504653206861736820616c7265616479206578697374730000000000000000
0x1cd: V98 = 0x44
0x1d0: V99 = ADD V89 0x44
0x1d1: M[V99] = 0x49504653206861736820616c7265616479206578697374730000000000000000
0x1d3: V100 = M[0x40]
0x1d7: V101 = SUB V89 V100
0x1d8: V102 = 0x64
0x1da: V103 = ADD 0x64 V101
0x1dc: REVERT V100 V103
---
Entry stack: [V11, 0x70, V27, V29]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x70, V27, V29]

================================

Block 0x1dd
[0x1dd:0x241]
---
Predecessors: [0x118]
Successors: [0x70]
---
0x1dd JUMPDEST
0x1de CALLER
0x1df PUSH1 0x0
0x1e1 DUP4
0x1e2 DUP4
0x1e3 PUSH1 0x40
0x1e5 MLOAD
0x1e6 DUP1
0x1e7 DUP4
0x1e8 DUP4
0x1e9 DUP1
0x1ea DUP3
0x1eb DUP5
0x1ec CALLDATACOPY
0x1ed SWAP1
0x1ee SWAP2
0x1ef ADD
0x1f0 SWAP5
0x1f1 DUP6
0x1f2 MSTORE
0x1f3 POP
0x1f4 POP
0x1f5 PUSH1 0x40
0x1f7 MLOAD
0x1f8 SWAP3
0x1f9 DUP4
0x1fa SWAP1
0x1fb SUB
0x1fc PUSH1 0x20
0x1fe ADD
0x1ff SWAP1
0x200 SWAP3
0x201 SHA3
0x202 DUP1
0x203 SLOAD
0x204 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x219 SWAP5
0x21a SWAP1
0x21b SWAP5
0x21c AND
0x21d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x232 NOT
0x233 SWAP1
0x234 SWAP5
0x235 AND
0x236 SWAP4
0x237 SWAP1
0x238 SWAP4
0x239 OR
0x23a SWAP1
0x23b SWAP3
0x23c SSTORE
0x23d POP
0x23e POP
0x23f POP
0x240 POP
0x241 JUMP
---
0x1dd: JUMPDEST 
0x1de: V104 = CALLER
0x1df: V105 = 0x0
0x1e3: V106 = 0x40
0x1e5: V107 = M[0x40]
0x1ec: CALLDATACOPY V107 V27 V29
0x1ef: V108 = ADD V107 V29
0x1f2: M[V108] = 0x0
0x1f5: V109 = 0x40
0x1f7: V110 = M[0x40]
0x1fb: V111 = SUB V108 V110
0x1fc: V112 = 0x20
0x1fe: V113 = ADD 0x20 V111
0x201: V114 = SHA3 V110 V113
0x203: V115 = S[V114]
0x204: V116 = 0xffffffffffffffffffffffffffffffffffffffff
0x21c: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x21d: V118 = 0xffffffffffffffffffffffffffffffffffffffff
0x232: V119 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x235: V120 = AND V115 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x239: V121 = OR V120 V117
0x23c: S[V114] = V121
0x241: JUMP 0x70
---
Entry stack: [V11, 0x70, V27, V29]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x242
[0x242:0x255]
---
Predecessors: [0x7e]
Successors: [0x256]
---
0x242 JUMPDEST
0x243 PUSH1 0x0
0x245 DUP1
0x246 DUP3
0x247 PUSH1 0x40
0x249 MLOAD
0x24a DUP1
0x24b DUP3
0x24c DUP1
0x24d MLOAD
0x24e SWAP1
0x24f PUSH1 0x20
0x251 ADD
0x252 SWAP1
0x253 DUP1
0x254 DUP4
0x255 DUP4
---
0x242: JUMPDEST 
0x243: V122 = 0x0
0x247: V123 = 0x40
0x249: V124 = M[0x40]
0x24d: V125 = M[V36]
0x24f: V126 = 0x20
0x251: V127 = ADD 0x20 V36
---
Entry stack: [V11, 0xcb, V36]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, S0, V124, V124, V127, V125, V125, V124, V127]
Exit stack: [V11, 0xcb, V36, 0x0, 0x0, V36, V124, V124, V127, V125, V125, V124, V127]

================================

Block 0x256
[0x256:0x25e]
---
Predecessors: [0x242, 0x25f]
Successors: [0x25f, 0x275]
---
0x256 JUMPDEST
0x257 PUSH1 0x20
0x259 DUP4
0x25a LT
0x25b PUSH2 0x275
0x25e JUMPI
---
0x256: JUMPDEST 
0x257: V128 = 0x20
0x25a: V129 = LT S2 0x20
0x25b: V130 = 0x275
0x25e: JUMPI 0x275 V129
---
Entry stack: [V11, 0xcb, V36, 0x0, 0x0, V36, V124, V124, V127, V125, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xcb, V36, 0x0, 0x0, V36, V124, V124, V127, V125, S2, S1, S0]

================================

Block 0x25f
[0x25f:0x274]
---
Predecessors: [0x256]
Successors: [0x256]
---
0x25f DUP1
0x260 MLOAD
0x261 DUP3
0x262 MSTORE
0x263 PUSH1 0x1f
0x265 NOT
0x266 SWAP1
0x267 SWAP3
0x268 ADD
0x269 SWAP2
0x26a PUSH1 0x20
0x26c SWAP2
0x26d DUP3
0x26e ADD
0x26f SWAP2
0x270 ADD
0x271 PUSH2 0x256
0x274 JUMP
---
0x260: V131 = M[S0]
0x262: M[S1] = V131
0x263: V132 = 0x1f
0x265: V133 = NOT 0x1f
0x268: V134 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x26a: V135 = 0x20
0x26e: V136 = ADD 0x20 S1
0x270: V137 = ADD 0x20 S0
0x271: V138 = 0x256
0x274: JUMP 0x256
---
Entry stack: [V11, 0xcb, V36, 0x0, 0x0, V36, V124, V124, V127, V125, S2, S1, S0]
Stack pops: 3
Stack additions: [V134, V136, V137]
Exit stack: [V11, 0xcb, V36, 0x0, 0x0, V36, V124, V124, V127, V125, V134, V136, V137]

================================

Block 0x275
[0x275:0x2be]
---
Predecessors: [0x256]
Successors: [0xcb]
---
0x275 JUMPDEST
0x276 MLOAD
0x277 DUP2
0x278 MLOAD
0x279 PUSH1 0x20
0x27b SWAP4
0x27c DUP5
0x27d SUB
0x27e PUSH2 0x100
0x281 EXP
0x282 PUSH1 0x0
0x284 NOT
0x285 ADD
0x286 DUP1
0x287 NOT
0x288 SWAP1
0x289 SWAP3
0x28a AND
0x28b SWAP2
0x28c AND
0x28d OR
0x28e SWAP1
0x28f MSTORE
0x290 SWAP3
0x291 ADD
0x292 SWAP5
0x293 DUP6
0x294 MSTORE
0x295 POP
0x296 PUSH1 0x40
0x298 MLOAD
0x299 SWAP4
0x29a DUP5
0x29b SWAP1
0x29c SUB
0x29d ADD
0x29e SWAP1
0x29f SWAP3
0x2a0 SHA3
0x2a1 SLOAD
0x2a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b7 AND
0x2b8 SWAP5
0x2b9 SWAP4
0x2ba POP
0x2bb POP
0x2bc POP
0x2bd POP
0x2be JUMP
---
0x275: JUMPDEST 
0x276: V139 = M[S0]
0x278: V140 = M[S1]
0x279: V141 = 0x20
0x27d: V142 = SUB 0x20 S2
0x27e: V143 = 0x100
0x281: V144 = EXP 0x100 V142
0x282: V145 = 0x0
0x284: V146 = NOT 0x0
0x285: V147 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V144
0x287: V148 = NOT V147
0x28a: V149 = AND V139 V148
0x28c: V150 = AND V147 V140
0x28d: V151 = OR V150 V149
0x28f: M[S1] = V151
0x291: V152 = ADD V124 V125
0x294: M[V152] = 0x0
0x296: V153 = 0x40
0x298: V154 = M[0x40]
0x29c: V155 = SUB V152 V154
0x29d: V156 = ADD V155 0x20
0x2a0: V157 = SHA3 V154 V156
0x2a1: V158 = S[V157]
0x2a2: V159 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b7: V160 = AND 0xffffffffffffffffffffffffffffffffffffffff V158
0x2be: JUMP 0xcb
---
Entry stack: [V11, 0xcb, V36, 0x0, 0x0, V36, V124, V124, V127, V125, S2, S1, S0]
Stack pops: 12
Stack additions: [V160]
Exit stack: [V11, V160]

================================

Block 0x2bf
[0x2bf:0x2f9]
---
Predecessors: []
Successors: []
---
0x2bf STOP
0x2c0 LOG1
0x2c1 PUSH6 0x627a7a723058
0x2c8 SHA3
0x2c9 CALLDATACOPY
0x2ca ORIGIN
0x2cb BYTE
0x2cc MISSING 0xad
0x2cd PUSH10 0x525fe214f235aa56ea1
0x2d8 MISSING 0xc
0x2d9 PUSH32 0xbdae9ecd6d297279f318648a69396c0029
---
0x2bf: STOP 
0x2c0: LOG S0 S1 S2
0x2c1: V161 = 0x627a7a723058
0x2c8: V162 = SHA3 0x627a7a723058 S3
0x2c9: CALLDATACOPY V162 S4 S5
0x2ca: V163 = ORIGIN
0x2cb: V164 = BYTE V163 S6
0x2cc: MISSING 0xad
0x2cd: V165 = 0x525fe214f235aa56ea1
0x2d8: MISSING 0xc
0x2d9: V166 = 0xbdae9ecd6d297279f318648a69396c0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V164, 0x525fe214f235aa56ea1, 0xbdae9ecd6d297279f318648a69396c0029]
Exit stack: []

================================

Function 0:
Public function signature: 0xb0c8f9dc
Entry block: 0x50
Exit block: 0x70
Body: 0x50, 0x58, 0x5c, 0x70, 0xf4, 0x114, 0x118, 0x177, 0x1dd

Function 1:
Public function signature: 0xf67187ac
Entry block: 0x72
Exit block: 0xcb
Body: 0x72, 0x7a, 0x7e, 0xcb, 0x242, 0x256, 0x25f, 0x275

Function 2:
Public fallback function
Entry block: 0x4b
Exit block: 0x4b
Body: 0x4b

