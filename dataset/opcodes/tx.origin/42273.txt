Block 0x0
[0x0:0x38]
---
Predecessors: []
Successors: [0x39, 0x3b]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 PUSH4 0xffffffff
0x2d AND
0x2e DUP1
0x2f PUSH4 0xe4ad4bd7
0x34 EQ
0x35 PUSH2 0x3b
0x38 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x28: V6 = 0xffffffff
0x2d: V7 = AND 0xffffffff V5
0x2f: V8 = 0xe4ad4bd7
0x34: V9 = EQ 0xe4ad4bd7 V7
0x35: V10 = 0x3b
0x38: JUMPI 0x3b V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x39
[0x39:0x3a]
---
Predecessors: [0x0]
Successors: []
---
0x39 JUMPDEST
0x3a INVALID
---
0x39: JUMPDEST 
0x3a: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x3b
[0x3b:0x41]
---
Predecessors: [0x0]
Successors: [0x42, 0x43]
---
0x3b JUMPDEST
0x3c CALLVALUE
0x3d ISZERO
0x3e PUSH2 0x43
0x41 JUMPI
---
0x3b: JUMPDEST 
0x3c: V11 = CALLVALUE
0x3d: V12 = ISZERO V11
0x3e: V13 = 0x43
0x41: JUMPI 0x43 V12
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x42
[0x42:0x42]
---
Predecessors: [0x3b]
Successors: []
---
0x42 INVALID
---
0x42: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x43
[0x43:0x4a]
---
Predecessors: [0x3b]
Successors: [0xd4]
---
0x43 JUMPDEST
0x44 PUSH2 0x4b
0x47 PUSH2 0xd4
0x4a JUMP
---
0x43: JUMPDEST 
0x44: V14 = 0x4b
0x47: V15 = 0xd4
0x4a: JUMP 0xd4
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x4b]
Exit stack: [V7, 0x4b]

================================

Block 0x4b
[0x4b:0x75]
---
Predecessors: [0x162]
Successors: [0x76, 0x9a]
---
0x4b JUMPDEST
0x4c PUSH1 0x40
0x4e MLOAD
0x4f DUP1
0x50 DUP1
0x51 PUSH1 0x20
0x53 ADD
0x54 DUP3
0x55 DUP2
0x56 SUB
0x57 DUP3
0x58 MSTORE
0x59 DUP4
0x5a DUP2
0x5b DUP2
0x5c MLOAD
0x5d DUP2
0x5e MSTORE
0x5f PUSH1 0x20
0x61 ADD
0x62 SWAP2
0x63 POP
0x64 DUP1
0x65 MLOAD
0x66 SWAP1
0x67 PUSH1 0x20
0x69 ADD
0x6a SWAP1
0x6b DUP1
0x6c DUP4
0x6d DUP4
0x6e PUSH1 0x0
0x70 DUP4
0x71 EQ
0x72 PUSH2 0x9a
0x75 JUMPI
---
0x4b: JUMPDEST 
0x4c: V16 = 0x40
0x4e: V17 = M[0x40]
0x51: V18 = 0x20
0x53: V19 = ADD 0x20 V17
0x56: V20 = SUB V19 V17
0x58: M[V17] = V20
0x5c: V21 = M[V66]
0x5e: M[V19] = V21
0x5f: V22 = 0x20
0x61: V23 = ADD 0x20 V19
0x65: V24 = M[V66]
0x67: V25 = 0x20
0x69: V26 = ADD 0x20 V66
0x6e: V27 = 0x0
0x71: V28 = EQ V24 0x0
0x72: V29 = 0x9a
0x75: JUMPI 0x9a V28
---
Entry stack: [V7, V66]
Stack pops: 1
Stack additions: [S0, V17, V17, V23, V26, V24, V24, V23, V26]
Exit stack: [V7, V66, V17, V17, V23, V26, V24, V24, V23, V26]

================================

Block 0x76
[0x76:0x83]
---
Predecessors: [0x4b, 0x84]
Successors: [0x84, 0x9a]
---
0x76 JUMPDEST
0x77 DUP1
0x78 MLOAD
0x79 DUP3
0x7a MSTORE
0x7b PUSH1 0x20
0x7d DUP4
0x7e GT
0x7f ISZERO
0x80 PUSH2 0x9a
0x83 JUMPI
---
0x76: JUMPDEST 
0x78: V30 = M[S0]
0x7a: M[S1] = V30
0x7b: V31 = 0x20
0x7e: V32 = GT S2 0x20
0x7f: V33 = ISZERO V32
0x80: V34 = 0x9a
0x83: JUMPI 0x9a V33
---
Entry stack: [V7, V66, V17, V17, V23, V26, V24, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V7, V66, V17, V17, V23, V26, V24, S2, S1, S0]

================================

Block 0x84
[0x84:0x99]
---
Predecessors: [0x76]
Successors: [0x76]
---
0x84 PUSH1 0x20
0x86 DUP3
0x87 ADD
0x88 SWAP2
0x89 POP
0x8a PUSH1 0x20
0x8c DUP2
0x8d ADD
0x8e SWAP1
0x8f POP
0x90 PUSH1 0x20
0x92 DUP4
0x93 SUB
0x94 SWAP3
0x95 POP
0x96 PUSH2 0x76
0x99 JUMP
---
0x84: V35 = 0x20
0x87: V36 = ADD S1 0x20
0x8a: V37 = 0x20
0x8d: V38 = ADD S0 0x20
0x90: V39 = 0x20
0x93: V40 = SUB S2 0x20
0x96: V41 = 0x76
0x99: JUMP 0x76
---
Entry stack: [V7, V66, V17, V17, V23, V26, V24, S2, S1, S0]
Stack pops: 3
Stack additions: [V40, V36, V38]
Exit stack: [V7, V66, V17, V17, V23, V26, V24, V40, V36, V38]

================================

Block 0x9a
[0x9a:0xac]
---
Predecessors: [0x4b, 0x76]
Successors: [0xad, 0xc6]
---
0x9a JUMPDEST
0x9b POP
0x9c POP
0x9d POP
0x9e SWAP1
0x9f POP
0xa0 SWAP1
0xa1 DUP2
0xa2 ADD
0xa3 SWAP1
0xa4 PUSH1 0x1f
0xa6 AND
0xa7 DUP1
0xa8 ISZERO
0xa9 PUSH2 0xc6
0xac JUMPI
---
0x9a: JUMPDEST 
0xa2: V42 = ADD V24 V23
0xa4: V43 = 0x1f
0xa6: V44 = AND 0x1f V24
0xa8: V45 = ISZERO V44
0xa9: V46 = 0xc6
0xac: JUMPI 0xc6 V45
---
Entry stack: [V7, V66, V17, V17, V23, V26, V24, S2, S1, S0]
Stack pops: 6
Stack additions: [V42, V44]
Exit stack: [V7, V66, V17, V17, V42, V44]

================================

Block 0xad
[0xad:0xc5]
---
Predecessors: [0x9a]
Successors: [0xc6]
---
0xad DUP1
0xae DUP3
0xaf SUB
0xb0 DUP1
0xb1 MLOAD
0xb2 PUSH1 0x1
0xb4 DUP4
0xb5 PUSH1 0x20
0xb7 SUB
0xb8 PUSH2 0x100
0xbb EXP
0xbc SUB
0xbd NOT
0xbe AND
0xbf DUP2
0xc0 MSTORE
0xc1 PUSH1 0x20
0xc3 ADD
0xc4 SWAP2
0xc5 POP
---
0xaf: V47 = SUB V42 V44
0xb1: V48 = M[V47]
0xb2: V49 = 0x1
0xb5: V50 = 0x20
0xb7: V51 = SUB 0x20 V44
0xb8: V52 = 0x100
0xbb: V53 = EXP 0x100 V51
0xbc: V54 = SUB V53 0x1
0xbd: V55 = NOT V54
0xbe: V56 = AND V55 V48
0xc0: M[V47] = V56
0xc1: V57 = 0x20
0xc3: V58 = ADD 0x20 V47
---
Entry stack: [V7, V66, V17, V17, V42, V44]
Stack pops: 2
Stack additions: [V58, S0]
Exit stack: [V7, V66, V17, V17, V58, V44]

================================

Block 0xc6
[0xc6:0xd3]
---
Predecessors: [0x9a, 0xad]
Successors: []
---
0xc6 JUMPDEST
0xc7 POP
0xc8 SWAP3
0xc9 POP
0xca POP
0xcb POP
0xcc PUSH1 0x40
0xce MLOAD
0xcf DUP1
0xd0 SWAP2
0xd1 SUB
0xd2 SWAP1
0xd3 RETURN
---
0xc6: JUMPDEST 
0xcc: V59 = 0x40
0xce: V60 = M[0x40]
0xd1: V61 = SUB S1 V60
0xd3: RETURN V60 V61
---
Entry stack: [V7, V66, V17, V17, S1, V44]
Stack pops: 5
Stack additions: []
Exit stack: [V7]

================================

Block 0xd4
[0xd4:0xdb]
---
Predecessors: [0x43]
Successors: [0x165]
---
0xd4 JUMPDEST
0xd5 PUSH2 0xdc
0xd8 PUSH2 0x165
0xdb JUMP
---
0xd4: JUMPDEST 
0xd5: V62 = 0xdc
0xd8: V63 = 0x165
0xdb: JUMP 0x165
---
Entry stack: [V7, 0x4b]
Stack pops: 0
Stack additions: [0xdc]
Exit stack: [V7, 0x4b, 0xdc]

================================

Block 0xdc
[0xdc:0x161]
---
Predecessors: [0x165]
Successors: [0x162]
---
0xdc JUMPDEST
0xdd PUSH1 0x80
0xdf PUSH1 0x40
0xe1 MLOAD
0xe2 SWAP1
0xe3 DUP2
0xe4 ADD
0xe5 PUSH1 0x40
0xe7 MSTORE
0xe8 DUP1
0xe9 PUSH1 0x51
0xeb DUP2
0xec MSTORE
0xed PUSH1 0x20
0xef ADD
0xf0 PUSH32 0x69643a313235382c20736571486173683a643334363431333336353531646135
0x111 DUP2
0x112 MSTORE
0x113 PUSH1 0x20
0x115 ADD
0x116 PUSH32 0x6565303634316563316535383764353765663530333933646334303338613036
0x137 DUP2
0x138 MSTORE
0x139 PUSH1 0x20
0x13b ADD
0x13c PUSH32 0x3636366137363863333338343637303261000000000000000000000000000000
0x15d DUP2
0x15e MSTORE
0x15f POP
0x160 SWAP1
0x161 POP
---
0xdc: JUMPDEST 
0xdd: V64 = 0x80
0xdf: V65 = 0x40
0xe1: V66 = M[0x40]
0xe4: V67 = ADD V66 0x80
0xe5: V68 = 0x40
0xe7: M[0x40] = V67
0xe9: V69 = 0x51
0xec: M[V66] = 0x51
0xed: V70 = 0x20
0xef: V71 = ADD 0x20 V66
0xf0: V72 = 0x69643a313235382c20736571486173683a643334363431333336353531646135
0x112: M[V71] = 0x69643a313235382c20736571486173683a643334363431333336353531646135
0x113: V73 = 0x20
0x115: V74 = ADD 0x20 V71
0x116: V75 = 0x6565303634316563316535383764353765663530333933646334303338613036
0x138: M[V74] = 0x6565303634316563316535383764353765663530333933646334303338613036
0x139: V76 = 0x20
0x13b: V77 = ADD 0x20 V74
0x13c: V78 = 0x3636366137363863333338343637303261000000000000000000000000000000
0x15e: M[V77] = 0x3636366137363863333338343637303261000000000000000000000000000000
---
Entry stack: [V7, 0x4b, V81]
Stack pops: 1
Stack additions: [V66]
Exit stack: [V7, 0x4b, V66]

================================

Block 0x162
[0x162:0x164]
---
Predecessors: [0xdc]
Successors: [0x4b]
---
0x162 JUMPDEST
0x163 SWAP1
0x164 JUMP
---
0x162: JUMPDEST 
0x164: JUMP 0x4b
---
Entry stack: [V7, 0x4b, V66]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V7, V66]

================================

Block 0x165
[0x165:0x178]
---
Predecessors: [0xd4]
Successors: [0xdc]
---
0x165 JUMPDEST
0x166 PUSH1 0x20
0x168 PUSH1 0x40
0x16a MLOAD
0x16b SWAP1
0x16c DUP2
0x16d ADD
0x16e PUSH1 0x40
0x170 MSTORE
0x171 DUP1
0x172 PUSH1 0x0
0x174 DUP2
0x175 MSTORE
0x176 POP
0x177 SWAP1
0x178 JUMP
---
0x165: JUMPDEST 
0x166: V79 = 0x20
0x168: V80 = 0x40
0x16a: V81 = M[0x40]
0x16d: V82 = ADD V81 0x20
0x16e: V83 = 0x40
0x170: M[0x40] = V82
0x172: V84 = 0x0
0x175: M[V81] = 0x0
0x178: JUMP 0xdc
---
Entry stack: [V7, 0x4b, 0xdc]
Stack pops: 1
Stack additions: [V81]
Exit stack: [V7, 0x4b, V81]

================================

Block 0x179
[0x179:0x1b0]
---
Predecessors: []
Successors: []
---
0x179 STOP
0x17a LOG1
0x17b PUSH6 0x627a7a723058
0x182 SHA3
0x183 SWAP10
0x184 ORIGIN
0x185 CALLDATASIZE
0x186 GASLIMIT
0x187 MISSING 0xec
0x188 MISSING 0xa8
0x189 MISSING 0xd3
0x18a ISZERO
0x18b COINBASE
0x18c NUMBER
0x18d MISSING 0xdd
0x18e MISSING 0x2a
0x18f EQ
0x190 SWAP12
0x191 PUSH12 0xdd087e9959f656374b365b25
0x19e MISSING 0x22
0x19f POP
0x1a0 SWAP16
0x1a1 MISSING 0xe0
0x1a2 PUSH14 0x29
---
0x179: STOP 
0x17a: LOG S0 S1 S2
0x17b: V85 = 0x627a7a723058
0x182: V86 = SHA3 0x627a7a723058 S3
0x184: V87 = ORIGIN
0x185: V88 = CALLDATASIZE
0x186: V89 = GASLIMIT
0x187: MISSING 0xec
0x188: MISSING 0xa8
0x189: MISSING 0xd3
0x18a: V90 = ISZERO S0
0x18b: V91 = COINBASE
0x18c: V92 = NUMBER
0x18d: MISSING 0xdd
0x18e: MISSING 0x2a
0x18f: V93 = EQ S0 S1
0x191: V94 = 0xdd087e9959f656374b365b25
0x19e: MISSING 0x22
0x1a1: MISSING 0xe0
0x1a2: V95 = 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V89, V88, V87, S13, S4, S5, S6, S7, S8, S9, S10, S11, S12, V86, V92, V91, V90, 0xdd087e9959f656374b365b25, S13, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, V93, S17, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S1, 0x29]
Exit stack: []

================================

Function 0:
Public function signature: 0xe4ad4bd7
Entry block: 0x3b
Exit block: 0xc6
Body: 0x3b, 0x42, 0x43, 0x4b, 0x76, 0x84, 0x9a, 0xad, 0xc6, 0xd4, 0xdc, 0x162, 0x165

Function 1:
Public fallback function
Entry block: 0x39
Exit block: 0x39
Body: 0x39

