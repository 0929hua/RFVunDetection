Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x41]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x41
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x41
0xc: JUMPI 0x41 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x46]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x8eadb9b3
0x3c EQ
0x3d PUSH2 0x46
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x8eadb9b3
0x3c: V13 = EQ 0x8eadb9b3 V11
0x3d: V14 = 0x46
0x40: JUMPI 0x46 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x45]
---
Predecessors: [0x0, 0xd]
Successors: []
---
0x41 JUMPDEST
0x42 PUSH1 0x0
0x44 DUP1
0x45 REVERT
---
0x41: JUMPDEST 
0x42: V15 = 0x0
0x45: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x46
[0x46:0x4c]
---
Predecessors: [0xd]
Successors: [0x4d, 0x51]
---
0x46 JUMPDEST
0x47 CALLVALUE
0x48 ISZERO
0x49 PUSH2 0x51
0x4c JUMPI
---
0x46: JUMPDEST 
0x47: V16 = CALLVALUE
0x48: V17 = ISZERO V16
0x49: V18 = 0x51
0x4c: JUMPI 0x51 V17
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4d
[0x4d:0x50]
---
Predecessors: [0x46]
Successors: []
---
0x4d PUSH1 0x0
0x4f DUP1
0x50 REVERT
---
0x4d: V19 = 0x0
0x50: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x51
[0x51:0x73]
---
Predecessors: [0x46]
Successors: [0x76]
---
0x51 JUMPDEST
0x52 PUSH2 0x74
0x55 PUSH1 0x4
0x57 DUP1
0x58 DUP1
0x59 CALLDATALOAD
0x5a PUSH1 0x0
0x5c NOT
0x5d AND
0x5e SWAP1
0x5f PUSH1 0x20
0x61 ADD
0x62 SWAP1
0x63 SWAP2
0x64 SWAP1
0x65 DUP1
0x66 CALLDATALOAD
0x67 SWAP1
0x68 PUSH1 0x20
0x6a ADD
0x6b SWAP1
0x6c SWAP2
0x6d SWAP1
0x6e POP
0x6f POP
0x70 PUSH2 0x76
0x73 JUMP
---
0x51: JUMPDEST 
0x52: V20 = 0x74
0x55: V21 = 0x4
0x59: V22 = CALLDATALOAD 0x4
0x5a: V23 = 0x0
0x5c: V24 = NOT 0x0
0x5d: V25 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V22
0x5f: V26 = 0x20
0x61: V27 = ADD 0x20 0x4
0x66: V28 = CALLDATALOAD 0x24
0x68: V29 = 0x20
0x6a: V30 = ADD 0x20 0x24
0x70: V31 = 0x76
0x73: JUMP 0x76
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x74, V25, V28]
Exit stack: [V11, 0x74, V25, V28]

================================

Block 0x74
[0x74:0x75]
---
Predecessors: [0x23a]
Successors: []
---
0x74 JUMPDEST
0x75 STOP
---
0x74: JUMPDEST 
0x75: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x76
[0x76:0x8f]
---
Predecessors: [0x51]
Successors: [0x90, 0x91]
---
0x76 JUMPDEST
0x77 PUSH1 0x0
0x79 DUP1
0x7a PUSH1 0x0
0x7c DUP1
0x7d PUSH1 0x0
0x7f PUSH3 0x7a120
0x83 SWAP5
0x84 POP
0x85 PUSH2 0x1fff
0x88 DUP6
0x89 DUP2
0x8a ISZERO
0x8b ISZERO
0x8c PUSH2 0x91
0x8f JUMPI
---
0x76: JUMPDEST 
0x77: V32 = 0x0
0x7a: V33 = 0x0
0x7d: V34 = 0x0
0x7f: V35 = 0x7a120
0x85: V36 = 0x1fff
0x8a: V37 = ISZERO 0x1fff
0x8b: V38 = ISZERO 0x0
0x8c: V39 = 0x91
0x8f: JUMPI 0x91 0x1
---
Entry stack: [V11, 0x74, V25, V28]
Stack pops: 0
Stack additions: [0x7a120, 0x0, 0x0, 0x0, 0x0, 0x1fff, 0x7a120]
Exit stack: [V11, 0x74, V25, V28, 0x7a120, 0x0, 0x0, 0x0, 0x0, 0x1fff, 0x7a120]

================================

Block 0x90
[0x90:0x90]
---
Predecessors: [0x76]
Successors: []
---
0x90 INVALID
---
0x90: INVALID 
---
Entry stack: [V11, 0x74, V25, V28, 0x7a120, 0x0, 0x0, 0x0, 0x0, 0x1fff, 0x7a120]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x74, V25, V28, 0x7a120, 0x0, 0x0, 0x0, 0x0, 0x1fff, 0x7a120]

================================

Block 0x91
[0x91:0x109]
---
Predecessors: [0x76]
Successors: [0x10a, 0x10b]
---
0x91 JUMPDEST
0x92 MOD
0x93 DUP6
0x94 SUB
0x95 SWAP5
0x96 POP
0x97 PUSH2 0x1e7b
0x9a SWAP4
0x9b POP
0x9c DUP4
0x9d DUP6
0x9e SUB
0x9f SWAP5
0xa0 POP
0xa1 PUSH1 0x20
0xa3 PUSH32 0x666e6f6f00000000000000000000000000000000000000000000000000000000
0xc4 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xe2 SWAP1
0xe3 DIV
0xe4 SWAP1
0xe5 PUSH1 0x2
0xe7 EXP
0xe8 MUL
0xe9 SWAP2
0xea POP
0xeb CALLER
0xec PUSH2 0xffff
0xef AND
0xf0 SWAP1
0xf1 POP
0xf2 DUP1
0xf3 DUP3
0xf4 OR
0xf5 SWAP3
0xf6 POP
0xf7 DUP3
0xf8 PUSH2 0xffff
0xfb AND
0xfc DUP4
0xfd PUSH4 0xffffffff
0x102 AND
0x103 EQ
0x104 ISZERO
0x105 ISZERO
0x106 PUSH2 0x10b
0x109 JUMPI
---
0x91: JUMPDEST 
0x92: V40 = MOD 0x7a120 0x1fff
0x94: V41 = SUB 0x7a120 0x15d
0x97: V42 = 0x1e7b
0x9e: V43 = SUB 0x79fc3 0x1e7b
0xa1: V44 = 0x20
0xa3: V45 = 0x666e6f6f00000000000000000000000000000000000000000000000000000000
0xc4: V46 = 0x100000000000000000000000000000000000000000000000000000000
0xe3: V47 = DIV 0x666e6f6f00000000000000000000000000000000000000000000000000000000 0x100000000000000000000000000000000000000000000000000000000
0xe5: V48 = 0x2
0xe7: V49 = EXP 0x2 0x20
0xe8: V50 = MUL 0x100000000 0x666e6f6f
0xeb: V51 = CALLER
0xec: V52 = 0xffff
0xef: V53 = AND 0xffff V51
0xf4: V54 = OR 0x666e6f6f00000000 V53
0xf8: V55 = 0xffff
0xfb: V56 = AND 0xffff V54
0xfd: V57 = 0xffffffff
0x102: V58 = AND 0xffffffff V54
0x103: V59 = EQ V58 V56
0x104: V60 = ISZERO V59
0x105: V61 = ISZERO V60
0x106: V62 = 0x10b
0x109: JUMPI 0x10b V61
---
Entry stack: [V11, 0x74, V25, V28, 0x7a120, 0x0, 0x0, 0x0, 0x0, 0x1fff, 0x7a120]
Stack pops: 7
Stack additions: [0x78148, 0x1e7b, V54, 0x666e6f6f00000000, V53]
Exit stack: [V11, 0x74, V25, V28, 0x78148, 0x1e7b, V54, 0x666e6f6f00000000, V53]

================================

Block 0x10a
[0x10a:0x10a]
---
Predecessors: [0x91]
Successors: []
---
0x10a INVALID
---
0x10a: INVALID 
---
Entry stack: [V11, 0x74, V25, V28, 0x78148, 0x1e7b, V54, 0x666e6f6f00000000, V53]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x74, V25, V28, 0x78148, 0x1e7b, V54, 0x666e6f6f00000000, V53]

================================

Block 0x10b
[0x10b:0x125]
---
Predecessors: [0x91]
Successors: [0x126, 0x127]
---
0x10b JUMPDEST
0x10c DUP3
0x10d PUSH8 0xffffffffffffffff
0x116 AND
0x117 DUP4
0x118 PUSH4 0xffffffff
0x11d AND
0x11e EQ
0x11f ISZERO
0x120 ISZERO
0x121 ISZERO
0x122 PUSH2 0x127
0x125 JUMPI
---
0x10b: JUMPDEST 
0x10d: V63 = 0xffffffffffffffff
0x116: V64 = AND 0xffffffffffffffff V54
0x118: V65 = 0xffffffff
0x11d: V66 = AND 0xffffffff V54
0x11e: V67 = EQ V66 V64
0x11f: V68 = ISZERO V67
0x120: V69 = ISZERO V68
0x121: V70 = ISZERO V69
0x122: V71 = 0x127
0x125: JUMPI 0x127 V70
---
Entry stack: [V11, 0x74, V25, V28, 0x78148, 0x1e7b, V54, 0x666e6f6f00000000, V53]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x74, V25, V28, 0x78148, 0x1e7b, V54, 0x666e6f6f00000000, V53]

================================

Block 0x126
[0x126:0x126]
---
Predecessors: [0x10b]
Successors: []
---
0x126 INVALID
---
0x126: INVALID 
---
Entry stack: [V11, 0x74, V25, V28, 0x78148, 0x1e7b, V54, 0x666e6f6f00000000, V53]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x74, V25, V28, 0x78148, 0x1e7b, V54, 0x666e6f6f00000000, V53]

================================

Block 0x127
[0x127:0x13a]
---
Predecessors: [0x10b]
Successors: [0x13b, 0x13c]
---
0x127 JUMPDEST
0x128 ORIGIN
0x129 PUSH2 0xffff
0x12c AND
0x12d DUP4
0x12e PUSH4 0xffffffff
0x133 AND
0x134 EQ
0x135 ISZERO
0x136 ISZERO
0x137 PUSH2 0x13c
0x13a JUMPI
---
0x127: JUMPDEST 
0x128: V72 = ORIGIN
0x129: V73 = 0xffff
0x12c: V74 = AND 0xffff V72
0x12e: V75 = 0xffffffff
0x133: V76 = AND 0xffffffff V54
0x134: V77 = EQ V76 V74
0x135: V78 = ISZERO V77
0x136: V79 = ISZERO V78
0x137: V80 = 0x13c
0x13a: JUMPI 0x13c V79
---
Entry stack: [V11, 0x74, V25, V28, 0x78148, 0x1e7b, V54, 0x666e6f6f00000000, V53]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x74, V25, V28, 0x78148, 0x1e7b, V54, 0x666e6f6f00000000, V53]

================================

Block 0x13b
[0x13b:0x13b]
---
Predecessors: [0x127]
Successors: []
---
0x13b INVALID
---
0x13b: INVALID 
---
Entry stack: [V11, 0x74, V25, V28, 0x78148, 0x1e7b, V54, 0x666e6f6f00000000, V53]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x74, V25, V28, 0x78148, 0x1e7b, V54, 0x666e6f6f00000000, V53]

================================

Block 0x13c
[0x13c:0x228]
---
Predecessors: [0x127]
Successors: [0x229, 0x22d]
---
0x13c JUMPDEST
0x13d PUSH1 0x0
0x13f DUP1
0x140 SWAP1
0x141 SLOAD
0x142 SWAP1
0x143 PUSH2 0x100
0x146 EXP
0x147 SWAP1
0x148 DIV
0x149 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15e AND
0x15f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x174 AND
0x175 PUSH4 0x124c32a1
0x17a DUP7
0x17b DUP10
0x17c DUP10
0x17d PUSH25 0x1000000000000000000000000000000000000000000000000
0x197 MUL
0x198 PUSH1 0x40
0x19a MLOAD
0x19b DUP5
0x19c PUSH4 0xffffffff
0x1a1 AND
0x1a2 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1c0 MUL
0x1c1 DUP2
0x1c2 MSTORE
0x1c3 PUSH1 0x4
0x1c5 ADD
0x1c6 DUP1
0x1c7 DUP4
0x1c8 PUSH1 0x0
0x1ca NOT
0x1cb AND
0x1cc PUSH1 0x0
0x1ce NOT
0x1cf AND
0x1d0 DUP2
0x1d1 MSTORE
0x1d2 PUSH1 0x20
0x1d4 ADD
0x1d5 DUP3
0x1d6 PUSH24 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x1ef NOT
0x1f0 AND
0x1f1 PUSH24 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x20a NOT
0x20b AND
0x20c DUP2
0x20d MSTORE
0x20e PUSH1 0x20
0x210 ADD
0x211 SWAP3
0x212 POP
0x213 POP
0x214 POP
0x215 PUSH1 0x20
0x217 PUSH1 0x40
0x219 MLOAD
0x21a DUP1
0x21b DUP4
0x21c SUB
0x21d DUP2
0x21e PUSH1 0x0
0x220 DUP9
0x221 DUP1
0x222 EXTCODESIZE
0x223 ISZERO
0x224 ISZERO
0x225 PUSH2 0x22d
0x228 JUMPI
---
0x13c: JUMPDEST 
0x13d: V81 = 0x0
0x141: V82 = S[0x0]
0x143: V83 = 0x100
0x146: V84 = EXP 0x100 0x0
0x148: V85 = DIV V82 0x1
0x149: V86 = 0xffffffffffffffffffffffffffffffffffffffff
0x15e: V87 = AND 0xffffffffffffffffffffffffffffffffffffffff V85
0x15f: V88 = 0xffffffffffffffffffffffffffffffffffffffff
0x174: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x175: V90 = 0x124c32a1
0x17d: V91 = 0x1000000000000000000000000000000000000000000000000
0x197: V92 = MUL 0x1000000000000000000000000000000000000000000000000 V28
0x198: V93 = 0x40
0x19a: V94 = M[0x40]
0x19c: V95 = 0xffffffff
0x1a1: V96 = AND 0xffffffff 0x124c32a1
0x1a2: V97 = 0x100000000000000000000000000000000000000000000000000000000
0x1c0: V98 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x124c32a1
0x1c2: M[V94] = 0x124c32a100000000000000000000000000000000000000000000000000000000
0x1c3: V99 = 0x4
0x1c5: V100 = ADD 0x4 V94
0x1c8: V101 = 0x0
0x1ca: V102 = NOT 0x0
0x1cb: V103 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V25
0x1cc: V104 = 0x0
0x1ce: V105 = NOT 0x0
0x1cf: V106 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V103
0x1d1: M[V100] = V106
0x1d2: V107 = 0x20
0x1d4: V108 = ADD 0x20 V100
0x1d6: V109 = 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x1ef: V110 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x1f0: V111 = AND 0xffffffffffffffff000000000000000000000000000000000000000000000000 V92
0x1f1: V112 = 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x20a: V113 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x20b: V114 = AND 0xffffffffffffffff000000000000000000000000000000000000000000000000 V111
0x20d: M[V108] = V114
0x20e: V115 = 0x20
0x210: V116 = ADD 0x20 V108
0x215: V117 = 0x20
0x217: V118 = 0x40
0x219: V119 = M[0x40]
0x21c: V120 = SUB V116 V119
0x21e: V121 = 0x0
0x222: V122 = EXTCODESIZE V89
0x223: V123 = ISZERO V122
0x224: V124 = ISZERO V123
0x225: V125 = 0x22d
0x228: JUMPI 0x22d V124
---
Entry stack: [V11, 0x74, V25, V28, 0x78148, 0x1e7b, V54, 0x666e6f6f00000000, V53]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, V89, 0x124c32a1, S4, V116, 0x20, V119, V120, V119, 0x0, V89]
Exit stack: [V11, 0x74, V25, V28, 0x78148, 0x1e7b, V54, 0x666e6f6f00000000, V53, V89, 0x124c32a1, 0x78148, V116, 0x20, V119, V120, V119, 0x0, V89]

================================

Block 0x229
[0x229:0x22c]
---
Predecessors: [0x13c]
Successors: []
---
0x229 PUSH1 0x0
0x22b DUP1
0x22c REVERT
---
0x229: V126 = 0x0
0x22c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x74, V25, V28, 0x78148, 0x1e7b, V54, 0x666e6f6f00000000, V53, V89, 0x124c32a1, 0x78148, V116, 0x20, V119, V120, V119, 0x0, V89]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x74, V25, V28, 0x78148, 0x1e7b, V54, 0x666e6f6f00000000, V53, V89, 0x124c32a1, 0x78148, V116, 0x20, V119, V120, V119, 0x0, V89]

================================

Block 0x22d
[0x22d:0x235]
---
Predecessors: [0x13c]
Successors: [0x236, 0x23a]
---
0x22d JUMPDEST
0x22e DUP8
0x22f CALL
0x230 ISZERO
0x231 ISZERO
0x232 PUSH2 0x23a
0x235 JUMPI
---
0x22d: JUMPDEST 
0x22f: V127 = CALL 0x78148 V89 0x0 V119 V120 V119 0x20
0x230: V128 = ISZERO V127
0x231: V129 = ISZERO V128
0x232: V130 = 0x23a
0x235: JUMPI 0x23a V129
---
Entry stack: [V11, 0x74, V25, V28, 0x78148, 0x1e7b, V54, 0x666e6f6f00000000, V53, V89, 0x124c32a1, 0x78148, V116, 0x20, V119, V120, V119, 0x0, V89]
Stack pops: 8
Stack additions: [S7, S6]
Exit stack: [V11, 0x74, V25, V28, 0x78148, 0x1e7b, V54, 0x666e6f6f00000000, V53, V89, 0x124c32a1, 0x78148, V116]

================================

Block 0x236
[0x236:0x239]
---
Predecessors: [0x22d]
Successors: []
---
0x236 PUSH1 0x0
0x238 DUP1
0x239 REVERT
---
0x236: V131 = 0x0
0x239: REVERT 0x0 0x0
---
Entry stack: [V11, 0x74, V25, V28, 0x78148, 0x1e7b, V54, 0x666e6f6f00000000, V53, V89, 0x124c32a1, 0x78148, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x74, V25, V28, 0x78148, 0x1e7b, V54, 0x666e6f6f00000000, V53, V89, 0x124c32a1, 0x78148, V116]

================================

Block 0x23a
[0x23a:0x24e]
---
Predecessors: [0x22d]
Successors: [0x74]
---
0x23a JUMPDEST
0x23b POP
0x23c POP
0x23d POP
0x23e POP
0x23f PUSH1 0x40
0x241 MLOAD
0x242 DUP1
0x243 MLOAD
0x244 SWAP1
0x245 POP
0x246 POP
0x247 POP
0x248 POP
0x249 POP
0x24a POP
0x24b POP
0x24c POP
0x24d POP
0x24e JUMP
---
0x23a: JUMPDEST 
0x23f: V132 = 0x40
0x241: V133 = M[0x40]
0x243: V134 = M[V133]
0x24e: JUMP 0x74
---
Entry stack: [V11, 0x74, V25, V28, 0x78148, 0x1e7b, V54, 0x666e6f6f00000000, V53, V89, 0x124c32a1, 0x78148, V116]
Stack pops: 12
Stack additions: []
Exit stack: [V11]

================================

Block 0x24f
[0x24f:0x27d]
---
Predecessors: []
Successors: []
---
0x24f STOP
0x250 LOG1
0x251 PUSH6 0x627a7a723058
0x258 SHA3
0x259 DIFFICULTY
0x25a SWAP11
0x25b LOG1
0x25c MISSING 0x4c
0x25d MISSING 0xf7
0x25e MISSING 0xe4
0x25f LOG2
0x260 SWAP16
0x261 MISSING 0xfb
0x262 CALLDATACOPY
0x263 SSTORE
0x264 MISSING 0x22
0x265 DUP1
0x266 MISSING 0xa8
0x267 EXTCODEHASH
0x268 CALLER
0x269 LOG1
0x26a MISSING 0xa8
0x26b EXTCODECOPY
0x26c PUSH17 0x7988950a309aa57eeebcc7700029
---
0x24f: STOP 
0x250: LOG S0 S1 S2
0x251: V135 = 0x627a7a723058
0x258: V136 = SHA3 0x627a7a723058 S3
0x259: V137 = DIFFICULTY
0x25b: LOG S13 V136 S4
0x25c: MISSING 0x4c
0x25d: MISSING 0xf7
0x25e: MISSING 0xe4
0x25f: LOG S0 S1 S2 S3
0x261: MISSING 0xfb
0x262: CALLDATACOPY S0 S1 S2
0x263: S[S3] = S4
0x264: MISSING 0x22
0x266: MISSING 0xa8
0x267: V138 = EXTCODEHASH S0
0x268: V139 = CALLER
0x269: LOG V139 V138 S1
0x26a: MISSING 0xa8
0x26b: EXTCODECOPY S0 S1 S2 S3
0x26c: V140 = 0x7988950a309aa57eeebcc7700029
---
Entry stack: []
Stack pops: 0
Stack additions: [S5, S6, S7, S8, S9, S10, S11, S12, V137, S20, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S4, S0, S0, 0x7988950a309aa57eeebcc7700029]
Exit stack: []

================================

Function 0:
Public function signature: 0x8eadb9b3
Entry block: 0x46
Exit block: 0x74
Body: 0x46, 0x4d, 0x51, 0x74, 0x76, 0x90, 0x91, 0x10a, 0x10b, 0x126, 0x127, 0x13b, 0x13c, 0x229, 0x22d, 0x236, 0x23a

Function 1:
Public fallback function
Entry block: 0x41
Exit block: 0x41
Body: 0x41

