Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6c]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6c
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6c
0xc: JUMPI 0x6c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x71]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x18def8ef
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x71
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x18def8ef
0x3b: V13 = EQ V11 0x18def8ef
0x3c: V14 = 0x71
0x3f: JUMPI 0x71 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xa6]
---
0x40 DUP1
0x41 PUSH4 0x65fe58e3
0x46 EQ
0x47 PUSH2 0xa6
0x4a JUMPI
---
0x41: V15 = 0x65fe58e3
0x46: V16 = EQ 0x65fe58e3 V11
0x47: V17 = 0xa6
0x4a: JUMPI 0xa6 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xcd]
---
0x4b DUP1
0x4c PUSH4 0x7295e099
0x51 EQ
0x52 PUSH2 0xcd
0x55 JUMPI
---
0x4c: V18 = 0x7295e099
0x51: V19 = EQ 0x7295e099 V11
0x52: V20 = 0xcd
0x55: JUMPI 0xcd V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x101]
---
0x56 DUP1
0x57 PUSH4 0x8da5cb5b
0x5c EQ
0x5d PUSH2 0x101
0x60 JUMPI
---
0x57: V21 = 0x8da5cb5b
0x5c: V22 = EQ 0x8da5cb5b V11
0x5d: V23 = 0x101
0x60: JUMPI 0x101 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x116]
---
0x61 DUP1
0x62 PUSH4 0xbc902ad2
0x67 EQ
0x68 PUSH2 0x116
0x6b JUMPI
---
0x62: V24 = 0xbc902ad2
0x67: V25 = EQ 0xbc902ad2 V11
0x68: V26 = 0x116
0x6b: JUMPI 0x116 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x70]
---
Predecessors: [0x0, 0x61]
Successors: []
---
0x6c JUMPDEST
0x6d PUSH1 0x0
0x6f DUP1
0x70 REVERT
---
0x6c: JUMPDEST 
0x6d: V27 = 0x0
0x70: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x71
[0x71:0x78]
---
Predecessors: [0xd]
Successors: [0x79, 0x7d]
---
0x71 JUMPDEST
0x72 CALLVALUE
0x73 DUP1
0x74 ISZERO
0x75 PUSH2 0x7d
0x78 JUMPI
---
0x71: JUMPDEST 
0x72: V28 = CALLVALUE
0x74: V29 = ISZERO V28
0x75: V30 = 0x7d
0x78: JUMPI 0x7d V29
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V28]
Exit stack: [V11, V28]

================================

Block 0x79
[0x79:0x7c]
---
Predecessors: [0x71]
Successors: []
---
0x79 PUSH1 0x0
0x7b DUP1
0x7c REVERT
---
0x79: V31 = 0x0
0x7c: REVERT 0x0 0x0
---
Entry stack: [V11, V28]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V28]

================================

Block 0x7d
[0x7d:0x91]
---
Predecessors: [0x71]
Successors: [0x139]
---
0x7d JUMPDEST
0x7e POP
0x7f PUSH2 0x92
0x82 PUSH1 0x1
0x84 PUSH1 0xa0
0x86 PUSH1 0x2
0x88 EXP
0x89 SUB
0x8a PUSH1 0x4
0x8c CALLDATALOAD
0x8d AND
0x8e PUSH2 0x139
0x91 JUMP
---
0x7d: JUMPDEST 
0x7f: V32 = 0x92
0x82: V33 = 0x1
0x84: V34 = 0xa0
0x86: V35 = 0x2
0x88: V36 = EXP 0x2 0xa0
0x89: V37 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8a: V38 = 0x4
0x8c: V39 = CALLDATALOAD 0x4
0x8d: V40 = AND V39 0xffffffffffffffffffffffffffffffffffffffff
0x8e: V41 = 0x139
0x91: JUMP 0x139
---
Entry stack: [V11, V28]
Stack pops: 1
Stack additions: [0x92, V40]
Exit stack: [V11, 0x92, V40]

================================

Block 0x92
[0x92:0xa5]
---
Predecessors: [0x139]
Successors: []
---
0x92 JUMPDEST
0x93 PUSH1 0x40
0x95 DUP1
0x96 MLOAD
0x97 SWAP2
0x98 ISZERO
0x99 ISZERO
0x9a DUP3
0x9b MSTORE
0x9c MLOAD
0x9d SWAP1
0x9e DUP2
0x9f SWAP1
0xa0 SUB
0xa1 PUSH1 0x20
0xa3 ADD
0xa4 SWAP1
0xa5 RETURN
---
0x92: JUMPDEST 
0x93: V42 = 0x40
0x96: V43 = M[0x40]
0x98: V44 = ISZERO V109
0x99: V45 = ISZERO V44
0x9b: M[V43] = V45
0x9c: V46 = M[0x40]
0xa0: V47 = SUB V43 V46
0xa1: V48 = 0x20
0xa3: V49 = ADD 0x20 V47
0xa5: RETURN V46 V49
---
Entry stack: [V11, 0x92, V109]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x92]

================================

Block 0xa6
[0xa6:0xad]
---
Predecessors: [0x40]
Successors: [0xae, 0xb2]
---
0xa6 JUMPDEST
0xa7 CALLVALUE
0xa8 DUP1
0xa9 ISZERO
0xaa PUSH2 0xb2
0xad JUMPI
---
0xa6: JUMPDEST 
0xa7: V50 = CALLVALUE
0xa9: V51 = ISZERO V50
0xaa: V52 = 0xb2
0xad: JUMPI 0xb2 V51
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V50]
Exit stack: [V11, V50]

================================

Block 0xae
[0xae:0xb1]
---
Predecessors: [0xa6]
Successors: []
---
0xae PUSH1 0x0
0xb0 DUP1
0xb1 REVERT
---
0xae: V53 = 0x0
0xb1: REVERT 0x0 0x0
---
Entry stack: [V11, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V50]

================================

Block 0xb2
[0xb2:0xba]
---
Predecessors: [0xa6]
Successors: [0x14e]
---
0xb2 JUMPDEST
0xb3 POP
0xb4 PUSH2 0xbb
0xb7 PUSH2 0x14e
0xba JUMP
---
0xb2: JUMPDEST 
0xb4: V54 = 0xbb
0xb7: V55 = 0x14e
0xba: JUMP 0x14e
---
Entry stack: [V11, V50]
Stack pops: 1
Stack additions: [0xbb]
Exit stack: [V11, 0xbb]

================================

Block 0xbb
[0xbb:0xcc]
---
Predecessors: [0x14e]
Successors: []
---
0xbb JUMPDEST
0xbc PUSH1 0x40
0xbe DUP1
0xbf MLOAD
0xc0 SWAP2
0xc1 DUP3
0xc2 MSTORE
0xc3 MLOAD
0xc4 SWAP1
0xc5 DUP2
0xc6 SWAP1
0xc7 SUB
0xc8 PUSH1 0x20
0xca ADD
0xcb SWAP1
0xcc RETURN
---
0xbb: JUMPDEST 
0xbc: V56 = 0x40
0xbf: V57 = M[0x40]
0xc2: M[V57] = V111
0xc3: V58 = M[0x40]
0xc7: V59 = SUB V57 V58
0xc8: V60 = 0x20
0xca: V61 = ADD 0x20 V59
0xcc: RETURN V58 V61
---
Entry stack: [V11, 0xbb, V111]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xbb]

================================

Block 0xcd
[0xcd:0xd4]
---
Predecessors: [0x4b]
Successors: [0xd5, 0xd9]
---
0xcd JUMPDEST
0xce CALLVALUE
0xcf DUP1
0xd0 ISZERO
0xd1 PUSH2 0xd9
0xd4 JUMPI
---
0xcd: JUMPDEST 
0xce: V62 = CALLVALUE
0xd0: V63 = ISZERO V62
0xd1: V64 = 0xd9
0xd4: JUMPI 0xd9 V63
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V62]
Exit stack: [V11, V62]

================================

Block 0xd5
[0xd5:0xd8]
---
Predecessors: [0xcd]
Successors: []
---
0xd5 PUSH1 0x0
0xd7 DUP1
0xd8 REVERT
---
0xd5: V65 = 0x0
0xd8: REVERT 0x0 0x0
---
Entry stack: [V11, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V62]

================================

Block 0xd9
[0xd9:0xe4]
---
Predecessors: [0xcd]
Successors: [0x154]
---
0xd9 JUMPDEST
0xda POP
0xdb PUSH2 0xe5
0xde PUSH1 0x4
0xe0 CALLDATALOAD
0xe1 PUSH2 0x154
0xe4 JUMP
---
0xd9: JUMPDEST 
0xdb: V66 = 0xe5
0xde: V67 = 0x4
0xe0: V68 = CALLDATALOAD 0x4
0xe1: V69 = 0x154
0xe4: JUMP 0x154
---
Entry stack: [V11, V62]
Stack pops: 1
Stack additions: [0xe5, V68]
Exit stack: [V11, 0xe5, V68]

================================

Block 0xe5
[0xe5:0x100]
---
Predecessors: [0x154, 0x16f]
Successors: []
---
0xe5 JUMPDEST
0xe6 PUSH1 0x40
0xe8 DUP1
0xe9 MLOAD
0xea PUSH1 0x1
0xec PUSH1 0xa0
0xee PUSH1 0x2
0xf0 EXP
0xf1 SUB
0xf2 SWAP1
0xf3 SWAP3
0xf4 AND
0xf5 DUP3
0xf6 MSTORE
0xf7 MLOAD
0xf8 SWAP1
0xf9 DUP2
0xfa SWAP1
0xfb SUB
0xfc PUSH1 0x20
0xfe ADD
0xff SWAP1
0x100 RETURN
---
0xe5: JUMPDEST 
0xe6: V70 = 0x40
0xe9: V71 = M[0x40]
0xea: V72 = 0x1
0xec: V73 = 0xa0
0xee: V74 = 0x2
0xf0: V75 = EXP 0x2 0xa0
0xf1: V76 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf4: V77 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xf6: M[V71] = V77
0xf7: V78 = M[0x40]
0xfb: V79 = SUB V71 V78
0xfc: V80 = 0x20
0xfe: V81 = ADD 0x20 V79
0x100: RETURN V78 V81
---
Entry stack: [V11, 0xe5, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xe5]

================================

Block 0x101
[0x101:0x108]
---
Predecessors: [0x56]
Successors: [0x109, 0x10d]
---
0x101 JUMPDEST
0x102 CALLVALUE
0x103 DUP1
0x104 ISZERO
0x105 PUSH2 0x10d
0x108 JUMPI
---
0x101: JUMPDEST 
0x102: V82 = CALLVALUE
0x104: V83 = ISZERO V82
0x105: V84 = 0x10d
0x108: JUMPI 0x10d V83
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V82]
Exit stack: [V11, V82]

================================

Block 0x109
[0x109:0x10c]
---
Predecessors: [0x101]
Successors: []
---
0x109 PUSH1 0x0
0x10b DUP1
0x10c REVERT
---
0x109: V85 = 0x0
0x10c: REVERT 0x0 0x0
---
Entry stack: [V11, V82]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V82]

================================

Block 0x10d
[0x10d:0x115]
---
Predecessors: [0x101]
Successors: [0x16f]
---
0x10d JUMPDEST
0x10e POP
0x10f PUSH2 0xe5
0x112 PUSH2 0x16f
0x115 JUMP
---
0x10d: JUMPDEST 
0x10f: V86 = 0xe5
0x112: V87 = 0x16f
0x115: JUMP 0x16f
---
Entry stack: [V11, V82]
Stack pops: 1
Stack additions: [0xe5]
Exit stack: [V11, 0xe5]

================================

Block 0x116
[0x116:0x11d]
---
Predecessors: [0x61]
Successors: [0x11e, 0x122]
---
0x116 JUMPDEST
0x117 CALLVALUE
0x118 DUP1
0x119 ISZERO
0x11a PUSH2 0x122
0x11d JUMPI
---
0x116: JUMPDEST 
0x117: V88 = CALLVALUE
0x119: V89 = ISZERO V88
0x11a: V90 = 0x122
0x11d: JUMPI 0x122 V89
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V88]
Exit stack: [V11, V88]

================================

Block 0x11e
[0x11e:0x121]
---
Predecessors: [0x116]
Successors: []
---
0x11e PUSH1 0x0
0x120 DUP1
0x121 REVERT
---
0x11e: V91 = 0x0
0x121: REVERT 0x0 0x0
---
Entry stack: [V11, V88]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V88]

================================

Block 0x122
[0x122:0x136]
---
Predecessors: [0x116]
Successors: [0x17e]
---
0x122 JUMPDEST
0x123 POP
0x124 PUSH2 0x137
0x127 PUSH1 0x1
0x129 PUSH1 0xa0
0x12b PUSH1 0x2
0x12d EXP
0x12e SUB
0x12f PUSH1 0x4
0x131 CALLDATALOAD
0x132 AND
0x133 PUSH2 0x17e
0x136 JUMP
---
0x122: JUMPDEST 
0x124: V92 = 0x137
0x127: V93 = 0x1
0x129: V94 = 0xa0
0x12b: V95 = 0x2
0x12d: V96 = EXP 0x2 0xa0
0x12e: V97 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12f: V98 = 0x4
0x131: V99 = CALLDATALOAD 0x4
0x132: V100 = AND V99 0xffffffffffffffffffffffffffffffffffffffff
0x133: V101 = 0x17e
0x136: JUMP 0x17e
---
Entry stack: [V11, V88]
Stack pops: 1
Stack additions: [0x137, V100]
Exit stack: [V11, 0x137, V100]

================================

Block 0x137
[0x137:0x138]
---
Predecessors: [0x1bb]
Successors: []
---
0x137 JUMPDEST
0x138 STOP
---
0x137: JUMPDEST 
0x138: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x139
[0x139:0x14d]
---
Predecessors: [0x7d]
Successors: [0x92]
---
0x139 JUMPDEST
0x13a PUSH1 0x2
0x13c PUSH1 0x20
0x13e MSTORE
0x13f PUSH1 0x0
0x141 SWAP1
0x142 DUP2
0x143 MSTORE
0x144 PUSH1 0x40
0x146 SWAP1
0x147 SHA3
0x148 SLOAD
0x149 PUSH1 0xff
0x14b AND
0x14c DUP2
0x14d JUMP
---
0x139: JUMPDEST 
0x13a: V102 = 0x2
0x13c: V103 = 0x20
0x13e: M[0x20] = 0x2
0x13f: V104 = 0x0
0x143: M[0x0] = V40
0x144: V105 = 0x40
0x147: V106 = SHA3 0x0 0x40
0x148: V107 = S[V106]
0x149: V108 = 0xff
0x14b: V109 = AND 0xff V107
0x14d: JUMP 0x92
---
Entry stack: [V11, 0x92, V40]
Stack pops: 2
Stack additions: [S1, V109]
Exit stack: [V11, 0x92, V109]

================================

Block 0x14e
[0x14e:0x153]
---
Predecessors: [0xb2]
Successors: [0xbb]
---
0x14e JUMPDEST
0x14f PUSH1 0x1
0x151 SLOAD
0x152 DUP2
0x153 JUMP
---
0x14e: JUMPDEST 
0x14f: V110 = 0x1
0x151: V111 = S[0x1]
0x153: JUMP 0xbb
---
Entry stack: [V11, 0xbb]
Stack pops: 1
Stack additions: [S0, V111]
Exit stack: [V11, 0xbb, V111]

================================

Block 0x154
[0x154:0x16e]
---
Predecessors: [0xd9]
Successors: [0xe5]
---
0x154 JUMPDEST
0x155 PUSH1 0x3
0x157 PUSH1 0x20
0x159 MSTORE
0x15a PUSH1 0x0
0x15c SWAP1
0x15d DUP2
0x15e MSTORE
0x15f PUSH1 0x40
0x161 SWAP1
0x162 SHA3
0x163 SLOAD
0x164 PUSH1 0x1
0x166 PUSH1 0xa0
0x168 PUSH1 0x2
0x16a EXP
0x16b SUB
0x16c AND
0x16d DUP2
0x16e JUMP
---
0x154: JUMPDEST 
0x155: V112 = 0x3
0x157: V113 = 0x20
0x159: M[0x20] = 0x3
0x15a: V114 = 0x0
0x15e: M[0x0] = V68
0x15f: V115 = 0x40
0x162: V116 = SHA3 0x0 0x40
0x163: V117 = S[V116]
0x164: V118 = 0x1
0x166: V119 = 0xa0
0x168: V120 = 0x2
0x16a: V121 = EXP 0x2 0xa0
0x16b: V122 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16c: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x16e: JUMP 0xe5
---
Entry stack: [V11, 0xe5, V68]
Stack pops: 2
Stack additions: [S1, V123]
Exit stack: [V11, 0xe5, V123]

================================

Block 0x16f
[0x16f:0x17d]
---
Predecessors: [0x10d]
Successors: [0xe5]
---
0x16f JUMPDEST
0x170 PUSH1 0x0
0x172 SLOAD
0x173 PUSH1 0x1
0x175 PUSH1 0xa0
0x177 PUSH1 0x2
0x179 EXP
0x17a SUB
0x17b AND
0x17c DUP2
0x17d JUMP
---
0x16f: JUMPDEST 
0x170: V124 = 0x0
0x172: V125 = S[0x0]
0x173: V126 = 0x1
0x175: V127 = 0xa0
0x177: V128 = 0x2
0x179: V129 = EXP 0x2 0xa0
0x17a: V130 = SUB 0x10000000000000000000000000000000000000000 0x1
0x17b: V131 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x17d: JUMP 0xe5
---
Entry stack: [V11, 0xe5]
Stack pops: 1
Stack additions: [S0, V131]
Exit stack: [V11, 0xe5, V131]

================================

Block 0x17e
[0x17e:0x190]
---
Predecessors: [0x122]
Successors: [0x191, 0x195]
---
0x17e JUMPDEST
0x17f PUSH1 0x0
0x181 SLOAD
0x182 PUSH1 0x1
0x184 PUSH1 0xa0
0x186 PUSH1 0x2
0x188 EXP
0x189 SUB
0x18a AND
0x18b ORIGIN
0x18c EQ
0x18d PUSH2 0x195
0x190 JUMPI
---
0x17e: JUMPDEST 
0x17f: V132 = 0x0
0x181: V133 = S[0x0]
0x182: V134 = 0x1
0x184: V135 = 0xa0
0x186: V136 = 0x2
0x188: V137 = EXP 0x2 0xa0
0x189: V138 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18a: V139 = AND 0xffffffffffffffffffffffffffffffffffffffff V133
0x18b: V140 = ORIGIN
0x18c: V141 = EQ V140 V139
0x18d: V142 = 0x195
0x190: JUMPI 0x195 V141
---
Entry stack: [V11, 0x137, V100]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x137, V100]

================================

Block 0x191
[0x191:0x194]
---
Predecessors: [0x17e]
Successors: []
---
0x191 PUSH1 0x0
0x193 DUP1
0x194 REVERT
---
0x191: V143 = 0x0
0x194: REVERT 0x0 0x0
---
Entry stack: [V11, 0x137, V100]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x137, V100]

================================

Block 0x195
[0x195:0x1b6]
---
Predecessors: [0x17e]
Successors: [0x1b7, 0x1bb]
---
0x195 JUMPDEST
0x196 PUSH1 0x1
0x198 PUSH1 0xa0
0x19a PUSH1 0x2
0x19c EXP
0x19d SUB
0x19e DUP2
0x19f AND
0x1a0 PUSH1 0x0
0x1a2 SWAP1
0x1a3 DUP2
0x1a4 MSTORE
0x1a5 PUSH1 0x2
0x1a7 PUSH1 0x20
0x1a9 MSTORE
0x1aa PUSH1 0x40
0x1ac SWAP1
0x1ad SHA3
0x1ae SLOAD
0x1af PUSH1 0xff
0x1b1 AND
0x1b2 ISZERO
0x1b3 PUSH2 0x1bb
0x1b6 JUMPI
---
0x195: JUMPDEST 
0x196: V144 = 0x1
0x198: V145 = 0xa0
0x19a: V146 = 0x2
0x19c: V147 = EXP 0x2 0xa0
0x19d: V148 = SUB 0x10000000000000000000000000000000000000000 0x1
0x19f: V149 = AND V100 0xffffffffffffffffffffffffffffffffffffffff
0x1a0: V150 = 0x0
0x1a4: M[0x0] = V149
0x1a5: V151 = 0x2
0x1a7: V152 = 0x20
0x1a9: M[0x20] = 0x2
0x1aa: V153 = 0x40
0x1ad: V154 = SHA3 0x0 0x40
0x1ae: V155 = S[V154]
0x1af: V156 = 0xff
0x1b1: V157 = AND 0xff V155
0x1b2: V158 = ISZERO V157
0x1b3: V159 = 0x1bb
0x1b6: JUMPI 0x1bb V158
---
Entry stack: [V11, 0x137, V100]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x137, V100]

================================

Block 0x1b7
[0x1b7:0x1ba]
---
Predecessors: [0x195]
Successors: []
---
0x1b7 PUSH1 0x0
0x1b9 DUP1
0x1ba REVERT
---
0x1b7: V160 = 0x0
0x1ba: REVERT 0x0 0x0
---
Entry stack: [V11, 0x137, V100]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x137, V100]

================================

Block 0x1bb
[0x1bb:0x249]
---
Predecessors: [0x195]
Successors: [0x137]
---
0x1bb JUMPDEST
0x1bc PUSH1 0x1
0x1be DUP1
0x1bf SLOAD
0x1c0 DUP1
0x1c1 DUP3
0x1c2 ADD
0x1c3 DUP3
0x1c4 SSTORE
0x1c5 PUSH1 0x0
0x1c7 SWAP1
0x1c8 DUP2
0x1c9 MSTORE
0x1ca PUSH1 0x3
0x1cc PUSH1 0x20
0x1ce SWAP1
0x1cf DUP2
0x1d0 MSTORE
0x1d1 PUSH1 0x40
0x1d3 DUP1
0x1d4 DUP4
0x1d5 SHA3
0x1d6 DUP1
0x1d7 SLOAD
0x1d8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ed NOT
0x1ee AND
0x1ef PUSH1 0x1
0x1f1 PUSH1 0xa0
0x1f3 PUSH1 0x2
0x1f5 EXP
0x1f6 SUB
0x1f7 DUP8
0x1f8 AND
0x1f9 SWAP1
0x1fa DUP2
0x1fb OR
0x1fc SWAP1
0x1fd SWAP2
0x1fe SSTORE
0x1ff DUP1
0x200 DUP5
0x201 MSTORE
0x202 PUSH1 0x2
0x204 DUP4
0x205 MSTORE
0x206 SWAP3
0x207 DUP2
0x208 SWAP1
0x209 SHA3
0x20a DUP1
0x20b SLOAD
0x20c PUSH1 0xff
0x20e NOT
0x20f AND
0x210 SWAP1
0x211 SWAP5
0x212 OR
0x213 SWAP1
0x214 SWAP4
0x215 SSTORE
0x216 DUP3
0x217 MLOAD
0x218 SWAP2
0x219 DUP3
0x21a MSTORE
0x21b SWAP2
0x21c MLOAD
0x21d PUSH32 0xc0c9d944d4e57ca6a64cf32bdeaf4bd913699655fa681079cbc6636eaffe280f
0x23e SWAP3
0x23f SWAP2
0x240 DUP2
0x241 SWAP1
0x242 SUB
0x243 SWAP1
0x244 SWAP2
0x245 ADD
0x246 SWAP1
0x247 LOG1
0x248 POP
0x249 JUMP
---
0x1bb: JUMPDEST 
0x1bc: V161 = 0x1
0x1bf: V162 = S[0x1]
0x1c2: V163 = ADD 0x1 V162
0x1c4: S[0x1] = V163
0x1c5: V164 = 0x0
0x1c9: M[0x0] = V162
0x1ca: V165 = 0x3
0x1cc: V166 = 0x20
0x1d0: M[0x20] = 0x3
0x1d1: V167 = 0x40
0x1d5: V168 = SHA3 0x0 0x40
0x1d7: V169 = S[V168]
0x1d8: V170 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ed: V171 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1ee: V172 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V169
0x1ef: V173 = 0x1
0x1f1: V174 = 0xa0
0x1f3: V175 = 0x2
0x1f5: V176 = EXP 0x2 0xa0
0x1f6: V177 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f8: V178 = AND V100 0xffffffffffffffffffffffffffffffffffffffff
0x1fb: V179 = OR V178 V172
0x1fe: S[V168] = V179
0x201: M[0x0] = V178
0x202: V180 = 0x2
0x205: M[0x20] = 0x2
0x209: V181 = SHA3 0x0 0x40
0x20b: V182 = S[V181]
0x20c: V183 = 0xff
0x20e: V184 = NOT 0xff
0x20f: V185 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V182
0x212: V186 = OR 0x1 V185
0x215: S[V181] = V186
0x217: V187 = M[0x40]
0x21a: M[V187] = V178
0x21c: V188 = M[0x40]
0x21d: V189 = 0xc0c9d944d4e57ca6a64cf32bdeaf4bd913699655fa681079cbc6636eaffe280f
0x242: V190 = SUB V187 V188
0x245: V191 = ADD 0x20 V190
0x247: LOG V188 V191 0xc0c9d944d4e57ca6a64cf32bdeaf4bd913699655fa681079cbc6636eaffe280f
0x249: JUMP 0x137
---
Entry stack: [V11, 0x137, V100]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x24a
[0x24a:0x275]
---
Predecessors: []
Successors: []
---
0x24a STOP
0x24b LOG1
0x24c PUSH6 0x627a7a723058
0x253 SHA3
0x254 EXTCODESIZE
0x255 EXTCODESIZE
0x256 SHA3
0x257 MISSING 0xe5
0x258 DUP1
0x259 MISSING 0xbb
0x25a MISSING 0xaa
0x25b INVALID
0x25c MISSING 0xe7
0x25d MISSING 0xd4
0x25e CALLER
0x25f MISSING 0xed
0x260 GT
0x261 LOG4
0x262 PUSH11 0x701fd592360d86b3d85e24
0x26e SWAP2
0x26f MISSING 0xdc
0x270 MISSING 0xb0
0x271 SAR
0x272 SWAP7
0x273 DUP8
0x274 STOP
0x275 MISSING 0x29
---
0x24a: STOP 
0x24b: LOG S0 S1 S2
0x24c: V192 = 0x627a7a723058
0x253: V193 = SHA3 0x627a7a723058 S3
0x254: V194 = EXTCODESIZE V193
0x255: V195 = EXTCODESIZE V194
0x256: V196 = SHA3 V195 S4
0x257: MISSING 0xe5
0x259: MISSING 0xbb
0x25a: MISSING 0xaa
0x25b: INVALID 
0x25c: MISSING 0xe7
0x25d: MISSING 0xd4
0x25e: V197 = CALLER
0x25f: MISSING 0xed
0x260: V198 = GT S0 S1
0x261: LOG V198 S2 S3 S4 S5 S6
0x262: V199 = 0x701fd592360d86b3d85e24
0x26f: MISSING 0xdc
0x270: MISSING 0xb0
0x271: V200 = SAR S0 S1
0x274: STOP 
0x275: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V196, S0, S0, V197, S8, S7, 0x701fd592360d86b3d85e24, V200, S8, S2, S3, S4, S5, S6, S7, V200]
Exit stack: []

================================

Function 0:
Public function signature: 0x18def8ef
Entry block: 0x71
Exit block: 0x92
Body: 0x71, 0x79, 0x7d, 0x92, 0x139

Function 1:
Public function signature: 0x65fe58e3
Entry block: 0xa6
Exit block: 0xbb
Body: 0xa6, 0xae, 0xb2, 0xbb, 0x14e

Function 2:
Public function signature: 0x7295e099
Entry block: 0xcd
Exit block: 0xe5
Body: 0xcd, 0xd5, 0xd9, 0xe5, 0x154

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0x101
Exit block: 0xe5
Body: 0xe5, 0x101, 0x109, 0x10d, 0x16f

Function 4:
Public function signature: 0xbc902ad2
Entry block: 0x116
Exit block: 0x137
Body: 0x116, 0x11e, 0x122, 0x137, 0x17e, 0x191, 0x195, 0x1b7, 0x1bb

Function 5:
Public fallback function
Entry block: 0x6c
Exit block: 0x6c
Body: 0x6c

