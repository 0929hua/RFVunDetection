Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xb9]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xb9
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xb9
0xc: JUMPI 0xb9 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0xbe]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x6fdde03
0x3a DUP2
0x3b EQ
0x3c PUSH2 0xbe
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x6fdde03
0x3b: V13 = EQ V11 0x6fdde03
0x3c: V14 = 0xbe
0x3f: JUMPI 0xbe V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x148]
---
0x40 DUP1
0x41 PUSH4 0x95ea7b3
0x46 EQ
0x47 PUSH2 0x148
0x4a JUMPI
---
0x41: V15 = 0x95ea7b3
0x46: V16 = EQ 0x95ea7b3 V11
0x47: V17 = 0x148
0x4a: JUMPI 0x148 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x17e]
---
0x4b DUP1
0x4c PUSH4 0x18160ddd
0x51 EQ
0x52 PUSH2 0x17e
0x55 JUMPI
---
0x4c: V18 = 0x18160ddd
0x51: V19 = EQ 0x18160ddd V11
0x52: V20 = 0x17e
0x55: JUMPI 0x17e V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x1a3]
---
0x56 DUP1
0x57 PUSH4 0x23b872dd
0x5c EQ
0x5d PUSH2 0x1a3
0x60 JUMPI
---
0x57: V21 = 0x23b872dd
0x5c: V22 = EQ 0x23b872dd V11
0x5d: V23 = 0x1a3
0x60: JUMPI 0x1a3 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x1cb]
---
0x61 DUP1
0x62 PUSH4 0x2ff2e9dc
0x67 EQ
0x68 PUSH2 0x1cb
0x6b JUMPI
---
0x62: V24 = 0x2ff2e9dc
0x67: V25 = EQ 0x2ff2e9dc V11
0x68: V26 = 0x1cb
0x6b: JUMPI 0x1cb V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x1de]
---
0x6c DUP1
0x6d PUSH4 0x313ce567
0x72 EQ
0x73 PUSH2 0x1de
0x76 JUMPI
---
0x6d: V27 = 0x313ce567
0x72: V28 = EQ 0x313ce567 V11
0x73: V29 = 0x1de
0x76: JUMPI 0x1de V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x1f1]
---
0x77 DUP1
0x78 PUSH4 0x66188463
0x7d EQ
0x7e PUSH2 0x1f1
0x81 JUMPI
---
0x78: V30 = 0x66188463
0x7d: V31 = EQ 0x66188463 V11
0x7e: V32 = 0x1f1
0x81: JUMPI 0x1f1 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x213]
---
0x82 DUP1
0x83 PUSH4 0x70a08231
0x88 EQ
0x89 PUSH2 0x213
0x8c JUMPI
---
0x83: V33 = 0x70a08231
0x88: V34 = EQ 0x70a08231 V11
0x89: V35 = 0x213
0x8c: JUMPI 0x213 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x232]
---
0x8d DUP1
0x8e PUSH4 0x95d89b41
0x93 EQ
0x94 PUSH2 0x232
0x97 JUMPI
---
0x8e: V36 = 0x95d89b41
0x93: V37 = EQ 0x95d89b41 V11
0x94: V38 = 0x232
0x97: JUMPI 0x232 V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8d]
Successors: [0xa3, 0x245]
---
0x98 DUP1
0x99 PUSH4 0xa9059cbb
0x9e EQ
0x9f PUSH2 0x245
0xa2 JUMPI
---
0x99: V39 = 0xa9059cbb
0x9e: V40 = EQ 0xa9059cbb V11
0x9f: V41 = 0x245
0xa2: JUMPI 0x245 V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa3
[0xa3:0xad]
---
Predecessors: [0x98]
Successors: [0xae, 0x267]
---
0xa3 DUP1
0xa4 PUSH4 0xd73dd623
0xa9 EQ
0xaa PUSH2 0x267
0xad JUMPI
---
0xa4: V42 = 0xd73dd623
0xa9: V43 = EQ 0xd73dd623 V11
0xaa: V44 = 0x267
0xad: JUMPI 0x267 V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xae
[0xae:0xb8]
---
Predecessors: [0xa3]
Successors: [0xb9, 0x289]
---
0xae DUP1
0xaf PUSH4 0xdd62ed3e
0xb4 EQ
0xb5 PUSH2 0x289
0xb8 JUMPI
---
0xaf: V45 = 0xdd62ed3e
0xb4: V46 = EQ 0xdd62ed3e V11
0xb5: V47 = 0x289
0xb8: JUMPI 0x289 V46
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xb9
[0xb9:0xbd]
---
Predecessors: [0x0, 0xae]
Successors: []
---
0xb9 JUMPDEST
0xba PUSH1 0x0
0xbc DUP1
0xbd REVERT
---
0xb9: JUMPDEST 
0xba: V48 = 0x0
0xbd: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xbe
[0xbe:0xc4]
---
Predecessors: [0xd]
Successors: [0xc5, 0xc9]
---
0xbe JUMPDEST
0xbf CALLVALUE
0xc0 ISZERO
0xc1 PUSH2 0xc9
0xc4 JUMPI
---
0xbe: JUMPDEST 
0xbf: V49 = CALLVALUE
0xc0: V50 = ISZERO V49
0xc1: V51 = 0xc9
0xc4: JUMPI 0xc9 V50
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc5
[0xc5:0xc8]
---
Predecessors: [0xbe]
Successors: []
---
0xc5 PUSH1 0x0
0xc7 DUP1
0xc8 REVERT
---
0xc5: V52 = 0x0
0xc8: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc9
[0xc9:0xd0]
---
Predecessors: [0xbe]
Successors: [0x2ae]
---
0xc9 JUMPDEST
0xca PUSH2 0xd1
0xcd PUSH2 0x2ae
0xd0 JUMP
---
0xc9: JUMPDEST 
0xca: V53 = 0xd1
0xcd: V54 = 0x2ae
0xd0: JUMP 0x2ae
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xd1]
Exit stack: [V11, 0xd1]

================================

Block 0xd1
[0xd1:0xf4]
---
Predecessors: [0x344]
Successors: [0xf5]
---
0xd1 JUMPDEST
0xd2 PUSH1 0x40
0xd4 MLOAD
0xd5 PUSH1 0x20
0xd7 DUP1
0xd8 DUP3
0xd9 MSTORE
0xda DUP2
0xdb SWAP1
0xdc DUP2
0xdd ADD
0xde DUP4
0xdf DUP2
0xe0 DUP2
0xe1 MLOAD
0xe2 DUP2
0xe3 MSTORE
0xe4 PUSH1 0x20
0xe6 ADD
0xe7 SWAP2
0xe8 POP
0xe9 DUP1
0xea MLOAD
0xeb SWAP1
0xec PUSH1 0x20
0xee ADD
0xef SWAP1
0xf0 DUP1
0xf1 DUP4
0xf2 DUP4
0xf3 PUSH1 0x0
---
0xd1: JUMPDEST 
0xd2: V55 = 0x40
0xd4: V56 = M[0x40]
0xd5: V57 = 0x20
0xd9: M[V56] = 0x20
0xdd: V58 = ADD V56 0x20
0xe1: V59 = M[S0]
0xe3: M[V58] = V59
0xe4: V60 = 0x20
0xe6: V61 = ADD 0x20 V58
0xea: V62 = M[S0]
0xec: V63 = 0x20
0xee: V64 = ADD 0x20 S0
0xf3: V65 = 0x0
---
Entry stack: [V11, 0xd1, S0]
Stack pops: 1
Stack additions: [S0, V56, V56, V61, V64, V62, V62, V61, V64, 0x0]
Exit stack: [V11, 0xd1, S0, V56, V56, V61, V64, V62, V62, V61, V64, 0x0]

================================

Block 0xf5
[0xf5:0xfd]
---
Predecessors: [0xd1, 0xfe]
Successors: [0xfe, 0x10d]
---
0xf5 JUMPDEST
0xf6 DUP4
0xf7 DUP2
0xf8 LT
0xf9 ISZERO
0xfa PUSH2 0x10d
0xfd JUMPI
---
0xf5: JUMPDEST 
0xf8: V66 = LT S0 V62
0xf9: V67 = ISZERO V66
0xfa: V68 = 0x10d
0xfd: JUMPI 0x10d V67
---
Entry stack: [V11, 0xd1, S9, V56, V56, V61, V64, V62, V62, V61, V64, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xd1, S9, V56, V56, V61, V64, V62, V62, V61, V64, S0]

================================

Block 0xfe
[0xfe:0x10c]
---
Predecessors: [0xf5]
Successors: [0xf5]
---
0xfe DUP1
0xff DUP3
0x100 ADD
0x101 MLOAD
0x102 DUP4
0x103 DUP3
0x104 ADD
0x105 MSTORE
0x106 PUSH1 0x20
0x108 ADD
0x109 PUSH2 0xf5
0x10c JUMP
---
0x100: V69 = ADD V64 S0
0x101: V70 = M[V69]
0x104: V71 = ADD S0 V61
0x105: M[V71] = V70
0x106: V72 = 0x20
0x108: V73 = ADD 0x20 S0
0x109: V74 = 0xf5
0x10c: JUMP 0xf5
---
Entry stack: [V11, 0xd1, S9, V56, V56, V61, V64, V62, V62, V61, V64, S0]
Stack pops: 3
Stack additions: [S2, S1, V73]
Exit stack: [V11, 0xd1, S9, V56, V56, V61, V64, V62, V62, V61, V64, V73]

================================

Block 0x10d
[0x10d:0x120]
---
Predecessors: [0xf5]
Successors: [0x121, 0x13a]
---
0x10d JUMPDEST
0x10e POP
0x10f POP
0x110 POP
0x111 POP
0x112 SWAP1
0x113 POP
0x114 SWAP1
0x115 DUP2
0x116 ADD
0x117 SWAP1
0x118 PUSH1 0x1f
0x11a AND
0x11b DUP1
0x11c ISZERO
0x11d PUSH2 0x13a
0x120 JUMPI
---
0x10d: JUMPDEST 
0x116: V75 = ADD V62 V61
0x118: V76 = 0x1f
0x11a: V77 = AND 0x1f V62
0x11c: V78 = ISZERO V77
0x11d: V79 = 0x13a
0x120: JUMPI 0x13a V78
---
Entry stack: [V11, 0xd1, S9, V56, V56, V61, V64, V62, V62, V61, V64, S0]
Stack pops: 7
Stack additions: [V75, V77]
Exit stack: [V11, 0xd1, S9, V56, V56, V75, V77]

================================

Block 0x121
[0x121:0x139]
---
Predecessors: [0x10d]
Successors: [0x13a]
---
0x121 DUP1
0x122 DUP3
0x123 SUB
0x124 DUP1
0x125 MLOAD
0x126 PUSH1 0x1
0x128 DUP4
0x129 PUSH1 0x20
0x12b SUB
0x12c PUSH2 0x100
0x12f EXP
0x130 SUB
0x131 NOT
0x132 AND
0x133 DUP2
0x134 MSTORE
0x135 PUSH1 0x20
0x137 ADD
0x138 SWAP2
0x139 POP
---
0x123: V80 = SUB V75 V77
0x125: V81 = M[V80]
0x126: V82 = 0x1
0x129: V83 = 0x20
0x12b: V84 = SUB 0x20 V77
0x12c: V85 = 0x100
0x12f: V86 = EXP 0x100 V84
0x130: V87 = SUB V86 0x1
0x131: V88 = NOT V87
0x132: V89 = AND V88 V81
0x134: M[V80] = V89
0x135: V90 = 0x20
0x137: V91 = ADD 0x20 V80
---
Entry stack: [V11, 0xd1, S4, V56, V56, V75, V77]
Stack pops: 2
Stack additions: [V91, S0]
Exit stack: [V11, 0xd1, S4, V56, V56, V91, V77]

================================

Block 0x13a
[0x13a:0x147]
---
Predecessors: [0x10d, 0x121]
Successors: []
---
0x13a JUMPDEST
0x13b POP
0x13c SWAP3
0x13d POP
0x13e POP
0x13f POP
0x140 PUSH1 0x40
0x142 MLOAD
0x143 DUP1
0x144 SWAP2
0x145 SUB
0x146 SWAP1
0x147 RETURN
---
0x13a: JUMPDEST 
0x140: V92 = 0x40
0x142: V93 = M[0x40]
0x145: V94 = SUB S1 V93
0x147: RETURN V93 V94
---
Entry stack: [V11, 0xd1, S4, V56, V56, S1, V77]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0xd1]

================================

Block 0x148
[0x148:0x14e]
---
Predecessors: [0x40]
Successors: [0x14f, 0x153]
---
0x148 JUMPDEST
0x149 CALLVALUE
0x14a ISZERO
0x14b PUSH2 0x153
0x14e JUMPI
---
0x148: JUMPDEST 
0x149: V95 = CALLVALUE
0x14a: V96 = ISZERO V95
0x14b: V97 = 0x153
0x14e: JUMPI 0x153 V96
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x14f
[0x14f:0x152]
---
Predecessors: [0x148]
Successors: []
---
0x14f PUSH1 0x0
0x151 DUP1
0x152 REVERT
---
0x14f: V98 = 0x0
0x152: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x153
[0x153:0x169]
---
Predecessors: [0x148]
Successors: [0x34c]
---
0x153 JUMPDEST
0x154 PUSH2 0x16a
0x157 PUSH1 0x1
0x159 PUSH1 0xa0
0x15b PUSH1 0x2
0x15d EXP
0x15e SUB
0x15f PUSH1 0x4
0x161 CALLDATALOAD
0x162 AND
0x163 PUSH1 0x24
0x165 CALLDATALOAD
0x166 PUSH2 0x34c
0x169 JUMP
---
0x153: JUMPDEST 
0x154: V99 = 0x16a
0x157: V100 = 0x1
0x159: V101 = 0xa0
0x15b: V102 = 0x2
0x15d: V103 = EXP 0x2 0xa0
0x15e: V104 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15f: V105 = 0x4
0x161: V106 = CALLDATALOAD 0x4
0x162: V107 = AND V106 0xffffffffffffffffffffffffffffffffffffffff
0x163: V108 = 0x24
0x165: V109 = CALLDATALOAD 0x24
0x166: V110 = 0x34c
0x169: JUMP 0x34c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x16a, V107, V109]
Exit stack: [V11, 0x16a, V107, V109]

================================

Block 0x16a
[0x16a:0x17d]
---
Predecessors: [0x34c, 0x47a, 0x588, 0x6e9, 0x782]
Successors: []
---
0x16a JUMPDEST
0x16b PUSH1 0x40
0x16d MLOAD
0x16e SWAP1
0x16f ISZERO
0x170 ISZERO
0x171 DUP2
0x172 MSTORE
0x173 PUSH1 0x20
0x175 ADD
0x176 PUSH1 0x40
0x178 MLOAD
0x179 DUP1
0x17a SWAP2
0x17b SUB
0x17c SWAP1
0x17d RETURN
---
0x16a: JUMPDEST 
0x16b: V111 = 0x40
0x16d: V112 = M[0x40]
0x16f: V113 = ISZERO 0x1
0x170: V114 = ISZERO 0x0
0x172: M[V112] = 0x1
0x173: V115 = 0x20
0x175: V116 = ADD 0x20 V112
0x176: V117 = 0x40
0x178: V118 = M[0x40]
0x17b: V119 = SUB V116 V118
0x17d: RETURN V118 V119
---
Entry stack: [V11, S2, S1, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S2, S1]

================================

Block 0x17e
[0x17e:0x184]
---
Predecessors: [0x4b]
Successors: [0x185, 0x189]
---
0x17e JUMPDEST
0x17f CALLVALUE
0x180 ISZERO
0x181 PUSH2 0x189
0x184 JUMPI
---
0x17e: JUMPDEST 
0x17f: V120 = CALLVALUE
0x180: V121 = ISZERO V120
0x181: V122 = 0x189
0x184: JUMPI 0x189 V121
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x185
[0x185:0x188]
---
Predecessors: [0x17e]
Successors: []
---
0x185 PUSH1 0x0
0x187 DUP1
0x188 REVERT
---
0x185: V123 = 0x0
0x188: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x189
[0x189:0x190]
---
Predecessors: [0x17e]
Successors: [0x3b8]
---
0x189 JUMPDEST
0x18a PUSH2 0x191
0x18d PUSH2 0x3b8
0x190 JUMP
---
0x189: JUMPDEST 
0x18a: V124 = 0x191
0x18d: V125 = 0x3b8
0x190: JUMP 0x3b8
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x191]
Exit stack: [V11, 0x191]

================================

Block 0x191
[0x191:0x1a2]
---
Predecessors: [0x3b8, 0x4e8, 0x4ee, 0x5ee, 0x7ee]
Successors: []
---
0x191 JUMPDEST
0x192 PUSH1 0x40
0x194 MLOAD
0x195 SWAP1
0x196 DUP2
0x197 MSTORE
0x198 PUSH1 0x20
0x19a ADD
0x19b PUSH1 0x40
0x19d MLOAD
0x19e DUP1
0x19f SWAP2
0x1a0 SUB
0x1a1 SWAP1
0x1a2 RETURN
---
0x191: JUMPDEST 
0x192: V126 = 0x40
0x194: V127 = M[0x40]
0x197: M[V127] = S0
0x198: V128 = 0x20
0x19a: V129 = ADD 0x20 V127
0x19b: V130 = 0x40
0x19d: V131 = M[0x40]
0x1a0: V132 = SUB V129 V131
0x1a2: RETURN V131 V132
---
Entry stack: [V11, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0x1a3
[0x1a3:0x1a9]
---
Predecessors: [0x56]
Successors: [0x1aa, 0x1ae]
---
0x1a3 JUMPDEST
0x1a4 CALLVALUE
0x1a5 ISZERO
0x1a6 PUSH2 0x1ae
0x1a9 JUMPI
---
0x1a3: JUMPDEST 
0x1a4: V133 = CALLVALUE
0x1a5: V134 = ISZERO V133
0x1a6: V135 = 0x1ae
0x1a9: JUMPI 0x1ae V134
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1aa
[0x1aa:0x1ad]
---
Predecessors: [0x1a3]
Successors: []
---
0x1aa PUSH1 0x0
0x1ac DUP1
0x1ad REVERT
---
0x1aa: V136 = 0x0
0x1ad: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ae
[0x1ae:0x1ca]
---
Predecessors: [0x1a3]
Successors: [0x3be]
---
0x1ae JUMPDEST
0x1af PUSH2 0x16a
0x1b2 PUSH1 0x1
0x1b4 PUSH1 0xa0
0x1b6 PUSH1 0x2
0x1b8 EXP
0x1b9 SUB
0x1ba PUSH1 0x4
0x1bc CALLDATALOAD
0x1bd DUP2
0x1be AND
0x1bf SWAP1
0x1c0 PUSH1 0x24
0x1c2 CALLDATALOAD
0x1c3 AND
0x1c4 PUSH1 0x44
0x1c6 CALLDATALOAD
0x1c7 PUSH2 0x3be
0x1ca JUMP
---
0x1ae: JUMPDEST 
0x1af: V137 = 0x16a
0x1b2: V138 = 0x1
0x1b4: V139 = 0xa0
0x1b6: V140 = 0x2
0x1b8: V141 = EXP 0x2 0xa0
0x1b9: V142 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ba: V143 = 0x4
0x1bc: V144 = CALLDATALOAD 0x4
0x1be: V145 = AND 0xffffffffffffffffffffffffffffffffffffffff V144
0x1c0: V146 = 0x24
0x1c2: V147 = CALLDATALOAD 0x24
0x1c3: V148 = AND V147 0xffffffffffffffffffffffffffffffffffffffff
0x1c4: V149 = 0x44
0x1c6: V150 = CALLDATALOAD 0x44
0x1c7: V151 = 0x3be
0x1ca: JUMP 0x3be
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x16a, V145, V148, V150]
Exit stack: [V11, 0x16a, V145, V148, V150]

================================

Block 0x1cb
[0x1cb:0x1d1]
---
Predecessors: [0x61]
Successors: [0x1d2, 0x1d6]
---
0x1cb JUMPDEST
0x1cc CALLVALUE
0x1cd ISZERO
0x1ce PUSH2 0x1d6
0x1d1 JUMPI
---
0x1cb: JUMPDEST 
0x1cc: V152 = CALLVALUE
0x1cd: V153 = ISZERO V152
0x1ce: V154 = 0x1d6
0x1d1: JUMPI 0x1d6 V153
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1d2
[0x1d2:0x1d5]
---
Predecessors: [0x1cb]
Successors: []
---
0x1d2 PUSH1 0x0
0x1d4 DUP1
0x1d5 REVERT
---
0x1d2: V155 = 0x0
0x1d5: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1d6
[0x1d6:0x1dd]
---
Predecessors: [0x1cb]
Successors: [0x4e8]
---
0x1d6 JUMPDEST
0x1d7 PUSH2 0x191
0x1da PUSH2 0x4e8
0x1dd JUMP
---
0x1d6: JUMPDEST 
0x1d7: V156 = 0x191
0x1da: V157 = 0x4e8
0x1dd: JUMP 0x4e8
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x191]
Exit stack: [V11, 0x191]

================================

Block 0x1de
[0x1de:0x1e4]
---
Predecessors: [0x6c]
Successors: [0x1e5, 0x1e9]
---
0x1de JUMPDEST
0x1df CALLVALUE
0x1e0 ISZERO
0x1e1 PUSH2 0x1e9
0x1e4 JUMPI
---
0x1de: JUMPDEST 
0x1df: V158 = CALLVALUE
0x1e0: V159 = ISZERO V158
0x1e1: V160 = 0x1e9
0x1e4: JUMPI 0x1e9 V159
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1e5
[0x1e5:0x1e8]
---
Predecessors: [0x1de]
Successors: []
---
0x1e5 PUSH1 0x0
0x1e7 DUP1
0x1e8 REVERT
---
0x1e5: V161 = 0x0
0x1e8: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1e9
[0x1e9:0x1f0]
---
Predecessors: [0x1de]
Successors: [0x4ee]
---
0x1e9 JUMPDEST
0x1ea PUSH2 0x191
0x1ed PUSH2 0x4ee
0x1f0 JUMP
---
0x1e9: JUMPDEST 
0x1ea: V162 = 0x191
0x1ed: V163 = 0x4ee
0x1f0: JUMP 0x4ee
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x191]
Exit stack: [V11, 0x191]

================================

Block 0x1f1
[0x1f1:0x1f7]
---
Predecessors: [0x77]
Successors: [0x1f8, 0x1fc]
---
0x1f1 JUMPDEST
0x1f2 CALLVALUE
0x1f3 ISZERO
0x1f4 PUSH2 0x1fc
0x1f7 JUMPI
---
0x1f1: JUMPDEST 
0x1f2: V164 = CALLVALUE
0x1f3: V165 = ISZERO V164
0x1f4: V166 = 0x1fc
0x1f7: JUMPI 0x1fc V165
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1f8
[0x1f8:0x1fb]
---
Predecessors: [0x1f1]
Successors: []
---
0x1f8 PUSH1 0x0
0x1fa DUP1
0x1fb REVERT
---
0x1f8: V167 = 0x0
0x1fb: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1fc
[0x1fc:0x212]
---
Predecessors: [0x1f1]
Successors: [0x4f4]
---
0x1fc JUMPDEST
0x1fd PUSH2 0x16a
0x200 PUSH1 0x1
0x202 PUSH1 0xa0
0x204 PUSH1 0x2
0x206 EXP
0x207 SUB
0x208 PUSH1 0x4
0x20a CALLDATALOAD
0x20b AND
0x20c PUSH1 0x24
0x20e CALLDATALOAD
0x20f PUSH2 0x4f4
0x212 JUMP
---
0x1fc: JUMPDEST 
0x1fd: V168 = 0x16a
0x200: V169 = 0x1
0x202: V170 = 0xa0
0x204: V171 = 0x2
0x206: V172 = EXP 0x2 0xa0
0x207: V173 = SUB 0x10000000000000000000000000000000000000000 0x1
0x208: V174 = 0x4
0x20a: V175 = CALLDATALOAD 0x4
0x20b: V176 = AND V175 0xffffffffffffffffffffffffffffffffffffffff
0x20c: V177 = 0x24
0x20e: V178 = CALLDATALOAD 0x24
0x20f: V179 = 0x4f4
0x212: JUMP 0x4f4
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x16a, V176, V178]
Exit stack: [V11, 0x16a, V176, V178]

================================

Block 0x213
[0x213:0x219]
---
Predecessors: [0x82]
Successors: [0x21a, 0x21e]
---
0x213 JUMPDEST
0x214 CALLVALUE
0x215 ISZERO
0x216 PUSH2 0x21e
0x219 JUMPI
---
0x213: JUMPDEST 
0x214: V180 = CALLVALUE
0x215: V181 = ISZERO V180
0x216: V182 = 0x21e
0x219: JUMPI 0x21e V181
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x21a
[0x21a:0x21d]
---
Predecessors: [0x213]
Successors: []
---
0x21a PUSH1 0x0
0x21c DUP1
0x21d REVERT
---
0x21a: V183 = 0x0
0x21d: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x21e
[0x21e:0x231]
---
Predecessors: [0x213]
Successors: [0x5ee]
---
0x21e JUMPDEST
0x21f PUSH2 0x191
0x222 PUSH1 0x1
0x224 PUSH1 0xa0
0x226 PUSH1 0x2
0x228 EXP
0x229 SUB
0x22a PUSH1 0x4
0x22c CALLDATALOAD
0x22d AND
0x22e PUSH2 0x5ee
0x231 JUMP
---
0x21e: JUMPDEST 
0x21f: V184 = 0x191
0x222: V185 = 0x1
0x224: V186 = 0xa0
0x226: V187 = 0x2
0x228: V188 = EXP 0x2 0xa0
0x229: V189 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22a: V190 = 0x4
0x22c: V191 = CALLDATALOAD 0x4
0x22d: V192 = AND V191 0xffffffffffffffffffffffffffffffffffffffff
0x22e: V193 = 0x5ee
0x231: JUMP 0x5ee
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x191, V192]
Exit stack: [V11, 0x191, V192]

================================

Block 0x232
[0x232:0x238]
---
Predecessors: [0x8d]
Successors: [0x239, 0x23d]
---
0x232 JUMPDEST
0x233 CALLVALUE
0x234 ISZERO
0x235 PUSH2 0x23d
0x238 JUMPI
---
0x232: JUMPDEST 
0x233: V194 = CALLVALUE
0x234: V195 = ISZERO V194
0x235: V196 = 0x23d
0x238: JUMPI 0x23d V195
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x239
[0x239:0x23c]
---
Predecessors: [0x232]
Successors: []
---
0x239 PUSH1 0x0
0x23b DUP1
0x23c REVERT
---
0x239: V197 = 0x0
0x23c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x23d
[0x23d:0x244]
---
Predecessors: [0x232]
Successors: [0x609]
---
0x23d JUMPDEST
0x23e PUSH2 0xd1
0x241 PUSH2 0x609
0x244 JUMP
---
0x23d: JUMPDEST 
0x23e: V198 = 0xd1
0x241: V199 = 0x609
0x244: JUMP 0x609
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xd1]
Exit stack: [V11, 0xd1]

================================

Block 0x245
[0x245:0x24b]
---
Predecessors: [0x98]
Successors: [0x24c, 0x250]
---
0x245 JUMPDEST
0x246 CALLVALUE
0x247 ISZERO
0x248 PUSH2 0x250
0x24b JUMPI
---
0x245: JUMPDEST 
0x246: V200 = CALLVALUE
0x247: V201 = ISZERO V200
0x248: V202 = 0x250
0x24b: JUMPI 0x250 V201
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x24c
[0x24c:0x24f]
---
Predecessors: [0x245]
Successors: []
---
0x24c PUSH1 0x0
0x24e DUP1
0x24f REVERT
---
0x24c: V203 = 0x0
0x24f: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x250
[0x250:0x266]
---
Predecessors: [0x245]
Successors: [0x674]
---
0x250 JUMPDEST
0x251 PUSH2 0x16a
0x254 PUSH1 0x1
0x256 PUSH1 0xa0
0x258 PUSH1 0x2
0x25a EXP
0x25b SUB
0x25c PUSH1 0x4
0x25e CALLDATALOAD
0x25f AND
0x260 PUSH1 0x24
0x262 CALLDATALOAD
0x263 PUSH2 0x674
0x266 JUMP
---
0x250: JUMPDEST 
0x251: V204 = 0x16a
0x254: V205 = 0x1
0x256: V206 = 0xa0
0x258: V207 = 0x2
0x25a: V208 = EXP 0x2 0xa0
0x25b: V209 = SUB 0x10000000000000000000000000000000000000000 0x1
0x25c: V210 = 0x4
0x25e: V211 = CALLDATALOAD 0x4
0x25f: V212 = AND V211 0xffffffffffffffffffffffffffffffffffffffff
0x260: V213 = 0x24
0x262: V214 = CALLDATALOAD 0x24
0x263: V215 = 0x674
0x266: JUMP 0x674
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x16a, V212, V214]
Exit stack: [V11, 0x16a, V212, V214]

================================

Block 0x267
[0x267:0x26d]
---
Predecessors: [0xa3]
Successors: [0x26e, 0x272]
---
0x267 JUMPDEST
0x268 CALLVALUE
0x269 ISZERO
0x26a PUSH2 0x272
0x26d JUMPI
---
0x267: JUMPDEST 
0x268: V216 = CALLVALUE
0x269: V217 = ISZERO V216
0x26a: V218 = 0x272
0x26d: JUMPI 0x272 V217
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x26e
[0x26e:0x271]
---
Predecessors: [0x267]
Successors: []
---
0x26e PUSH1 0x0
0x270 DUP1
0x271 REVERT
---
0x26e: V219 = 0x0
0x271: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x272
[0x272:0x288]
---
Predecessors: [0x267]
Successors: [0x74a]
---
0x272 JUMPDEST
0x273 PUSH2 0x16a
0x276 PUSH1 0x1
0x278 PUSH1 0xa0
0x27a PUSH1 0x2
0x27c EXP
0x27d SUB
0x27e PUSH1 0x4
0x280 CALLDATALOAD
0x281 AND
0x282 PUSH1 0x24
0x284 CALLDATALOAD
0x285 PUSH2 0x74a
0x288 JUMP
---
0x272: JUMPDEST 
0x273: V220 = 0x16a
0x276: V221 = 0x1
0x278: V222 = 0xa0
0x27a: V223 = 0x2
0x27c: V224 = EXP 0x2 0xa0
0x27d: V225 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27e: V226 = 0x4
0x280: V227 = CALLDATALOAD 0x4
0x281: V228 = AND V227 0xffffffffffffffffffffffffffffffffffffffff
0x282: V229 = 0x24
0x284: V230 = CALLDATALOAD 0x24
0x285: V231 = 0x74a
0x288: JUMP 0x74a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x16a, V228, V230]
Exit stack: [V11, 0x16a, V228, V230]

================================

Block 0x289
[0x289:0x28f]
---
Predecessors: [0xae]
Successors: [0x290, 0x294]
---
0x289 JUMPDEST
0x28a CALLVALUE
0x28b ISZERO
0x28c PUSH2 0x294
0x28f JUMPI
---
0x289: JUMPDEST 
0x28a: V232 = CALLVALUE
0x28b: V233 = ISZERO V232
0x28c: V234 = 0x294
0x28f: JUMPI 0x294 V233
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x290
[0x290:0x293]
---
Predecessors: [0x289]
Successors: []
---
0x290 PUSH1 0x0
0x292 DUP1
0x293 REVERT
---
0x290: V235 = 0x0
0x293: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x294
[0x294:0x2ad]
---
Predecessors: [0x289]
Successors: [0x7ee]
---
0x294 JUMPDEST
0x295 PUSH2 0x191
0x298 PUSH1 0x1
0x29a PUSH1 0xa0
0x29c PUSH1 0x2
0x29e EXP
0x29f SUB
0x2a0 PUSH1 0x4
0x2a2 CALLDATALOAD
0x2a3 DUP2
0x2a4 AND
0x2a5 SWAP1
0x2a6 PUSH1 0x24
0x2a8 CALLDATALOAD
0x2a9 AND
0x2aa PUSH2 0x7ee
0x2ad JUMP
---
0x294: JUMPDEST 
0x295: V236 = 0x191
0x298: V237 = 0x1
0x29a: V238 = 0xa0
0x29c: V239 = 0x2
0x29e: V240 = EXP 0x2 0xa0
0x29f: V241 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a0: V242 = 0x4
0x2a2: V243 = CALLDATALOAD 0x4
0x2a4: V244 = AND 0xffffffffffffffffffffffffffffffffffffffff V243
0x2a6: V245 = 0x24
0x2a8: V246 = CALLDATALOAD 0x24
0x2a9: V247 = AND V246 0xffffffffffffffffffffffffffffffffffffffff
0x2aa: V248 = 0x7ee
0x2ad: JUMP 0x7ee
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x191, V244, V247]
Exit stack: [V11, 0x191, V244, V247]

================================

Block 0x2ae
[0x2ae:0x2fd]
---
Predecessors: [0xc9]
Successors: [0x2fe, 0x344]
---
0x2ae JUMPDEST
0x2af PUSH1 0x3
0x2b1 DUP1
0x2b2 SLOAD
0x2b3 PUSH1 0x1
0x2b5 DUP2
0x2b6 PUSH1 0x1
0x2b8 AND
0x2b9 ISZERO
0x2ba PUSH2 0x100
0x2bd MUL
0x2be SUB
0x2bf AND
0x2c0 PUSH1 0x2
0x2c2 SWAP1
0x2c3 DIV
0x2c4 DUP1
0x2c5 PUSH1 0x1f
0x2c7 ADD
0x2c8 PUSH1 0x20
0x2ca DUP1
0x2cb SWAP2
0x2cc DIV
0x2cd MUL
0x2ce PUSH1 0x20
0x2d0 ADD
0x2d1 PUSH1 0x40
0x2d3 MLOAD
0x2d4 SWAP1
0x2d5 DUP2
0x2d6 ADD
0x2d7 PUSH1 0x40
0x2d9 MSTORE
0x2da DUP1
0x2db SWAP3
0x2dc SWAP2
0x2dd SWAP1
0x2de DUP2
0x2df DUP2
0x2e0 MSTORE
0x2e1 PUSH1 0x20
0x2e3 ADD
0x2e4 DUP3
0x2e5 DUP1
0x2e6 SLOAD
0x2e7 PUSH1 0x1
0x2e9 DUP2
0x2ea PUSH1 0x1
0x2ec AND
0x2ed ISZERO
0x2ee PUSH2 0x100
0x2f1 MUL
0x2f2 SUB
0x2f3 AND
0x2f4 PUSH1 0x2
0x2f6 SWAP1
0x2f7 DIV
0x2f8 DUP1
0x2f9 ISZERO
0x2fa PUSH2 0x344
0x2fd JUMPI
---
0x2ae: JUMPDEST 
0x2af: V249 = 0x3
0x2b2: V250 = S[0x3]
0x2b3: V251 = 0x1
0x2b6: V252 = 0x1
0x2b8: V253 = AND 0x1 V250
0x2b9: V254 = ISZERO V253
0x2ba: V255 = 0x100
0x2bd: V256 = MUL 0x100 V254
0x2be: V257 = SUB V256 0x1
0x2bf: V258 = AND V257 V250
0x2c0: V259 = 0x2
0x2c3: V260 = DIV V258 0x2
0x2c5: V261 = 0x1f
0x2c7: V262 = ADD 0x1f V260
0x2c8: V263 = 0x20
0x2cc: V264 = DIV V262 0x20
0x2cd: V265 = MUL V264 0x20
0x2ce: V266 = 0x20
0x2d0: V267 = ADD 0x20 V265
0x2d1: V268 = 0x40
0x2d3: V269 = M[0x40]
0x2d6: V270 = ADD V269 V267
0x2d7: V271 = 0x40
0x2d9: M[0x40] = V270
0x2e0: M[V269] = V260
0x2e1: V272 = 0x20
0x2e3: V273 = ADD 0x20 V269
0x2e6: V274 = S[0x3]
0x2e7: V275 = 0x1
0x2ea: V276 = 0x1
0x2ec: V277 = AND 0x1 V274
0x2ed: V278 = ISZERO V277
0x2ee: V279 = 0x100
0x2f1: V280 = MUL 0x100 V278
0x2f2: V281 = SUB V280 0x1
0x2f3: V282 = AND V281 V274
0x2f4: V283 = 0x2
0x2f7: V284 = DIV V282 0x2
0x2f9: V285 = ISZERO V284
0x2fa: V286 = 0x344
0x2fd: JUMPI 0x344 V285
---
Entry stack: [V11, 0xd1]
Stack pops: 0
Stack additions: [V269, 0x3, V260, V273, 0x3, V284]
Exit stack: [V11, 0xd1, V269, 0x3, V260, V273, 0x3, V284]

================================

Block 0x2fe
[0x2fe:0x305]
---
Predecessors: [0x2ae]
Successors: [0x306, 0x319]
---
0x2fe DUP1
0x2ff PUSH1 0x1f
0x301 LT
0x302 PUSH2 0x319
0x305 JUMPI
---
0x2ff: V287 = 0x1f
0x301: V288 = LT 0x1f V284
0x302: V289 = 0x319
0x305: JUMPI 0x319 V288
---
Entry stack: [V11, 0xd1, V269, 0x3, V260, V273, 0x3, V284]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xd1, V269, 0x3, V260, V273, 0x3, V284]

================================

Block 0x306
[0x306:0x318]
---
Predecessors: [0x2fe]
Successors: [0x344]
---
0x306 PUSH2 0x100
0x309 DUP1
0x30a DUP4
0x30b SLOAD
0x30c DIV
0x30d MUL
0x30e DUP4
0x30f MSTORE
0x310 SWAP2
0x311 PUSH1 0x20
0x313 ADD
0x314 SWAP2
0x315 PUSH2 0x344
0x318 JUMP
---
0x306: V290 = 0x100
0x30b: V291 = S[0x3]
0x30c: V292 = DIV V291 0x100
0x30d: V293 = MUL V292 0x100
0x30f: M[V273] = V293
0x311: V294 = 0x20
0x313: V295 = ADD 0x20 V273
0x315: V296 = 0x344
0x318: JUMP 0x344
---
Entry stack: [V11, 0xd1, V269, 0x3, V260, V273, 0x3, V284]
Stack pops: 3
Stack additions: [V295, S1, S0]
Exit stack: [V11, 0xd1, V269, 0x3, V260, V295, 0x3, V284]

================================

Block 0x319
[0x319:0x326]
---
Predecessors: [0x2fe, 0x659]
Successors: [0x327]
---
0x319 JUMPDEST
0x31a DUP3
0x31b ADD
0x31c SWAP2
0x31d SWAP1
0x31e PUSH1 0x0
0x320 MSTORE
0x321 PUSH1 0x20
0x323 PUSH1 0x0
0x325 SHA3
0x326 SWAP1
---
0x319: JUMPDEST 
0x31b: V297 = ADD S2 S0
0x31e: V298 = 0x0
0x320: M[0x0] = {0x3, 0x4}
0x321: V299 = 0x20
0x323: V300 = 0x0
0x325: V301 = SHA3 0x0 0x20
---
Entry stack: [V11, 0xd1, S5, {0x3, 0x4}, S3, S2, {0x3, 0x4}, S0]
Stack pops: 3
Stack additions: [V297, V301, S2]
Exit stack: [V11, 0xd1, S5, {0x3, 0x4}, S3, V297, V301, S2]

================================

Block 0x327
[0x327:0x33a]
---
Predecessors: [0x319, 0x327]
Successors: [0x327, 0x33b]
---
0x327 JUMPDEST
0x328 DUP2
0x329 SLOAD
0x32a DUP2
0x32b MSTORE
0x32c SWAP1
0x32d PUSH1 0x1
0x32f ADD
0x330 SWAP1
0x331 PUSH1 0x20
0x333 ADD
0x334 DUP1
0x335 DUP4
0x336 GT
0x337 PUSH2 0x327
0x33a JUMPI
---
0x327: JUMPDEST 
0x329: V302 = S[S1]
0x32b: M[S0] = V302
0x32d: V303 = 0x1
0x32f: V304 = ADD 0x1 S1
0x331: V305 = 0x20
0x333: V306 = ADD 0x20 S0
0x336: V307 = GT V297 V306
0x337: V308 = 0x327
0x33a: JUMPI 0x327 V307
---
Entry stack: [V11, 0xd1, S5, {0x3, 0x4}, S3, V297, S1, S0]
Stack pops: 3
Stack additions: [S2, V304, V306]
Exit stack: [V11, 0xd1, S5, {0x3, 0x4}, S3, V297, V304, V306]

================================

Block 0x33b
[0x33b:0x343]
---
Predecessors: [0x327]
Successors: [0x344]
---
0x33b DUP3
0x33c SWAP1
0x33d SUB
0x33e PUSH1 0x1f
0x340 AND
0x341 DUP3
0x342 ADD
0x343 SWAP2
---
0x33d: V309 = SUB V306 V297
0x33e: V310 = 0x1f
0x340: V311 = AND 0x1f V309
0x342: V312 = ADD V297 V311
---
Entry stack: [V11, 0xd1, S5, {0x3, 0x4}, S3, V297, V304, V306]
Stack pops: 3
Stack additions: [V312, S1, S2]
Exit stack: [V11, 0xd1, S5, {0x3, 0x4}, S3, V312, V304, V297]

================================

Block 0x344
[0x344:0x34b]
---
Predecessors: [0x2ae, 0x306, 0x33b, 0x609, 0x661]
Successors: [0xd1]
---
0x344 JUMPDEST
0x345 POP
0x346 POP
0x347 POP
0x348 POP
0x349 POP
0x34a DUP2
0x34b JUMP
---
0x344: JUMPDEST 
0x34b: JUMP 0xd1
---
Entry stack: [V11, 0xd1, S5, {0x3, 0x4}, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0xd1, S5]

================================

Block 0x34c
[0x34c:0x3b7]
---
Predecessors: [0x153]
Successors: [0x16a]
---
0x34c JUMPDEST
0x34d PUSH1 0x1
0x34f PUSH1 0xa0
0x351 PUSH1 0x2
0x353 EXP
0x354 SUB
0x355 CALLER
0x356 DUP2
0x357 AND
0x358 PUSH1 0x0
0x35a DUP2
0x35b DUP2
0x35c MSTORE
0x35d PUSH1 0x2
0x35f PUSH1 0x20
0x361 SWAP1
0x362 DUP2
0x363 MSTORE
0x364 PUSH1 0x40
0x366 DUP1
0x367 DUP4
0x368 SHA3
0x369 SWAP5
0x36a DUP8
0x36b AND
0x36c DUP1
0x36d DUP5
0x36e MSTORE
0x36f SWAP5
0x370 SWAP1
0x371 SWAP2
0x372 MSTORE
0x373 DUP1
0x374 DUP3
0x375 SHA3
0x376 DUP6
0x377 SWAP1
0x378 SSTORE
0x379 SWAP1
0x37a SWAP3
0x37b SWAP2
0x37c SWAP1
0x37d PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x39e SWAP1
0x39f DUP6
0x3a0 SWAP1
0x3a1 MLOAD
0x3a2 SWAP1
0x3a3 DUP2
0x3a4 MSTORE
0x3a5 PUSH1 0x20
0x3a7 ADD
0x3a8 PUSH1 0x40
0x3aa MLOAD
0x3ab DUP1
0x3ac SWAP2
0x3ad SUB
0x3ae SWAP1
0x3af LOG3
0x3b0 POP
0x3b1 PUSH1 0x1
0x3b3 SWAP3
0x3b4 SWAP2
0x3b5 POP
0x3b6 POP
0x3b7 JUMP
---
0x34c: JUMPDEST 
0x34d: V313 = 0x1
0x34f: V314 = 0xa0
0x351: V315 = 0x2
0x353: V316 = EXP 0x2 0xa0
0x354: V317 = SUB 0x10000000000000000000000000000000000000000 0x1
0x355: V318 = CALLER
0x357: V319 = AND 0xffffffffffffffffffffffffffffffffffffffff V318
0x358: V320 = 0x0
0x35c: M[0x0] = V319
0x35d: V321 = 0x2
0x35f: V322 = 0x20
0x363: M[0x20] = 0x2
0x364: V323 = 0x40
0x368: V324 = SHA3 0x0 0x40
0x36b: V325 = AND V107 0xffffffffffffffffffffffffffffffffffffffff
0x36e: M[0x0] = V325
0x372: M[0x20] = V324
0x375: V326 = SHA3 0x0 0x40
0x378: S[V326] = V109
0x37d: V327 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x3a1: V328 = M[0x40]
0x3a4: M[V328] = V109
0x3a5: V329 = 0x20
0x3a7: V330 = ADD 0x20 V328
0x3a8: V331 = 0x40
0x3aa: V332 = M[0x40]
0x3ad: V333 = SUB V330 V332
0x3af: LOG V332 V333 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V319 V325
0x3b1: V334 = 0x1
0x3b7: JUMP 0x16a
---
Entry stack: [V11, 0x16a, V107, V109]
Stack pops: 3
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x3b8
[0x3b8:0x3bd]
---
Predecessors: [0x189]
Successors: [0x191]
---
0x3b8 JUMPDEST
0x3b9 PUSH1 0x0
0x3bb SLOAD
0x3bc DUP2
0x3bd JUMP
---
0x3b8: JUMPDEST 
0x3b9: V335 = 0x0
0x3bb: V336 = S[0x0]
0x3bd: JUMP 0x191
---
Entry stack: [V11, 0x191]
Stack pops: 1
Stack additions: [S0, V336]
Exit stack: [V11, 0x191, V336]

================================

Block 0x3be
[0x3be:0x3d1]
---
Predecessors: [0x1ae]
Successors: [0x3d2, 0x3d6]
---
0x3be JUMPDEST
0x3bf PUSH1 0x0
0x3c1 DUP1
0x3c2 PUSH1 0x1
0x3c4 PUSH1 0xa0
0x3c6 PUSH1 0x2
0x3c8 EXP
0x3c9 SUB
0x3ca DUP5
0x3cb AND
0x3cc ISZERO
0x3cd ISZERO
0x3ce PUSH2 0x3d6
0x3d1 JUMPI
---
0x3be: JUMPDEST 
0x3bf: V337 = 0x0
0x3c2: V338 = 0x1
0x3c4: V339 = 0xa0
0x3c6: V340 = 0x2
0x3c8: V341 = EXP 0x2 0xa0
0x3c9: V342 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3cb: V343 = AND V148 0xffffffffffffffffffffffffffffffffffffffff
0x3cc: V344 = ISZERO V343
0x3cd: V345 = ISZERO V344
0x3ce: V346 = 0x3d6
0x3d1: JUMPI 0x3d6 V345
---
Entry stack: [V11, 0x16a, V145, V148, V150]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0]
Exit stack: [V11, 0x16a, V145, V148, V150, 0x0, 0x0]

================================

Block 0x3d2
[0x3d2:0x3d5]
---
Predecessors: [0x3be]
Successors: []
---
0x3d2 PUSH1 0x0
0x3d4 DUP1
0x3d5 REVERT
---
0x3d2: V347 = 0x0
0x3d5: REVERT 0x0 0x0
---
Entry stack: [V11, 0x16a, V145, V148, V150, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x16a, V145, V148, V150, 0x0, 0x0]

================================

Block 0x3d6
[0x3d6:0x41b]
---
Predecessors: [0x3be]
Successors: [0x819]
---
0x3d6 JUMPDEST
0x3d7 POP
0x3d8 PUSH1 0x1
0x3da PUSH1 0xa0
0x3dc PUSH1 0x2
0x3de EXP
0x3df SUB
0x3e0 DUP1
0x3e1 DUP6
0x3e2 AND
0x3e3 PUSH1 0x0
0x3e5 DUP2
0x3e6 DUP2
0x3e7 MSTORE
0x3e8 PUSH1 0x2
0x3ea PUSH1 0x20
0x3ec SWAP1
0x3ed DUP2
0x3ee MSTORE
0x3ef PUSH1 0x40
0x3f1 DUP1
0x3f2 DUP4
0x3f3 SHA3
0x3f4 CALLER
0x3f5 SWAP1
0x3f6 SWAP6
0x3f7 AND
0x3f8 DUP4
0x3f9 MSTORE
0x3fa SWAP4
0x3fb DUP2
0x3fc MSTORE
0x3fd DUP4
0x3fe DUP3
0x3ff SHA3
0x400 SLOAD
0x401 SWAP3
0x402 DUP3
0x403 MSTORE
0x404 PUSH1 0x1
0x406 SWAP1
0x407 MSTORE
0x408 SWAP2
0x409 SWAP1
0x40a SWAP2
0x40b SHA3
0x40c SLOAD
0x40d PUSH2 0x41c
0x410 SWAP1
0x411 DUP5
0x412 PUSH4 0xffffffff
0x417 PUSH2 0x819
0x41a AND
0x41b JUMP
---
0x3d6: JUMPDEST 
0x3d8: V348 = 0x1
0x3da: V349 = 0xa0
0x3dc: V350 = 0x2
0x3de: V351 = EXP 0x2 0xa0
0x3df: V352 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3e2: V353 = AND V145 0xffffffffffffffffffffffffffffffffffffffff
0x3e3: V354 = 0x0
0x3e7: M[0x0] = V353
0x3e8: V355 = 0x2
0x3ea: V356 = 0x20
0x3ee: M[0x20] = 0x2
0x3ef: V357 = 0x40
0x3f3: V358 = SHA3 0x0 0x40
0x3f4: V359 = CALLER
0x3f7: V360 = AND 0xffffffffffffffffffffffffffffffffffffffff V359
0x3f9: M[0x0] = V360
0x3fc: M[0x20] = V358
0x3ff: V361 = SHA3 0x0 0x40
0x400: V362 = S[V361]
0x403: M[0x0] = V353
0x404: V363 = 0x1
0x407: M[0x20] = 0x1
0x40b: V364 = SHA3 0x0 0x40
0x40c: V365 = S[V364]
0x40d: V366 = 0x41c
0x412: V367 = 0xffffffff
0x417: V368 = 0x819
0x41a: V369 = AND 0x819 0xffffffff
0x41b: JUMP 0x819
---
Entry stack: [V11, 0x16a, V145, V148, V150, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V362, 0x41c, V365, S2]
Exit stack: [V11, 0x16a, V145, V148, V150, 0x0, V362, 0x41c, V365, V150]

================================

Block 0x41c
[0x41c:0x450]
---
Predecessors: [0x825]
Successors: [0x82b]
---
0x41c JUMPDEST
0x41d PUSH1 0x1
0x41f PUSH1 0xa0
0x421 PUSH1 0x2
0x423 EXP
0x424 SUB
0x425 DUP1
0x426 DUP8
0x427 AND
0x428 PUSH1 0x0
0x42a SWAP1
0x42b DUP2
0x42c MSTORE
0x42d PUSH1 0x1
0x42f PUSH1 0x20
0x431 MSTORE
0x432 PUSH1 0x40
0x434 DUP1
0x435 DUP3
0x436 SHA3
0x437 SWAP4
0x438 SWAP1
0x439 SWAP4
0x43a SSTORE
0x43b SWAP1
0x43c DUP7
0x43d AND
0x43e DUP2
0x43f MSTORE
0x440 SHA3
0x441 SLOAD
0x442 PUSH2 0x451
0x445 SWAP1
0x446 DUP5
0x447 PUSH4 0xffffffff
0x44c PUSH2 0x82b
0x44f AND
0x450 JUMP
---
0x41c: JUMPDEST 
0x41d: V370 = 0x1
0x41f: V371 = 0xa0
0x421: V372 = 0x2
0x423: V373 = EXP 0x2 0xa0
0x424: V374 = SUB 0x10000000000000000000000000000000000000000 0x1
0x427: V375 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x428: V376 = 0x0
0x42c: M[0x0] = V375
0x42d: V377 = 0x1
0x42f: V378 = 0x20
0x431: M[0x20] = 0x1
0x432: V379 = 0x40
0x436: V380 = SHA3 0x0 0x40
0x43a: S[V380] = V691
0x43d: V381 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x43f: M[0x0] = V381
0x440: V382 = SHA3 0x0 0x40
0x441: V383 = S[V382]
0x442: V384 = 0x451
0x447: V385 = 0xffffffff
0x44c: V386 = 0x82b
0x44f: V387 = AND 0x82b 0xffffffff
0x450: JUMP 0x82b
---
Entry stack: [V11, S6, S5, S4, S3, S2, S1, V691]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, 0x451, V383, S3]
Exit stack: [V11, S6, S5, S4, S3, S2, S1, 0x451, V383, S3]

================================

Block 0x451
[0x451:0x479]
---
Predecessors: [0x83a]
Successors: [0x819]
---
0x451 JUMPDEST
0x452 PUSH1 0x1
0x454 PUSH1 0xa0
0x456 PUSH1 0x2
0x458 EXP
0x459 SUB
0x45a DUP6
0x45b AND
0x45c PUSH1 0x0
0x45e SWAP1
0x45f DUP2
0x460 MSTORE
0x461 PUSH1 0x1
0x463 PUSH1 0x20
0x465 MSTORE
0x466 PUSH1 0x40
0x468 SWAP1
0x469 SHA3
0x46a SSTORE
0x46b PUSH2 0x47a
0x46e DUP2
0x46f DUP5
0x470 PUSH4 0xffffffff
0x475 PUSH2 0x819
0x478 AND
0x479 JUMP
---
0x451: JUMPDEST 
0x452: V388 = 0x1
0x454: V389 = 0xa0
0x456: V390 = 0x2
0x458: V391 = EXP 0x2 0xa0
0x459: V392 = SUB 0x10000000000000000000000000000000000000000 0x1
0x45b: V393 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x45c: V394 = 0x0
0x460: M[0x0] = V393
0x461: V395 = 0x1
0x463: V396 = 0x20
0x465: M[0x20] = 0x1
0x466: V397 = 0x40
0x469: V398 = SHA3 0x0 0x40
0x46a: S[V398] = S0
0x46b: V399 = 0x47a
0x470: V400 = 0xffffffff
0x475: V401 = 0x819
0x478: V402 = AND 0x819 0xffffffff
0x479: JUMP 0x819
---
Entry stack: [V11, 0x16a, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, 0x47a, S1, S3]
Exit stack: [V11, 0x16a, S5, S4, S3, S2, S1, 0x47a, S1, S3]

================================

Block 0x47a
[0x47a:0x4e7]
---
Predecessors: [0x825]
Successors: [0x16a]
---
0x47a JUMPDEST
0x47b PUSH1 0x1
0x47d PUSH1 0xa0
0x47f PUSH1 0x2
0x481 EXP
0x482 SUB
0x483 DUP1
0x484 DUP8
0x485 AND
0x486 PUSH1 0x0
0x488 DUP2
0x489 DUP2
0x48a MSTORE
0x48b PUSH1 0x2
0x48d PUSH1 0x20
0x48f SWAP1
0x490 DUP2
0x491 MSTORE
0x492 PUSH1 0x40
0x494 DUP1
0x495 DUP4
0x496 SHA3
0x497 CALLER
0x498 DUP7
0x499 AND
0x49a DUP5
0x49b MSTORE
0x49c SWAP1
0x49d SWAP2
0x49e MSTORE
0x49f SWAP1
0x4a0 DUP2
0x4a1 SWAP1
0x4a2 SHA3
0x4a3 SWAP4
0x4a4 SWAP1
0x4a5 SWAP4
0x4a6 SSTORE
0x4a7 SWAP1
0x4a8 DUP7
0x4a9 AND
0x4aa SWAP2
0x4ab PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x4cc SWAP1
0x4cd DUP7
0x4ce SWAP1
0x4cf MLOAD
0x4d0 SWAP1
0x4d1 DUP2
0x4d2 MSTORE
0x4d3 PUSH1 0x20
0x4d5 ADD
0x4d6 PUSH1 0x40
0x4d8 MLOAD
0x4d9 DUP1
0x4da SWAP2
0x4db SUB
0x4dc SWAP1
0x4dd LOG3
0x4de POP
0x4df PUSH1 0x1
0x4e1 SWAP5
0x4e2 SWAP4
0x4e3 POP
0x4e4 POP
0x4e5 POP
0x4e6 POP
0x4e7 JUMP
---
0x47a: JUMPDEST 
0x47b: V403 = 0x1
0x47d: V404 = 0xa0
0x47f: V405 = 0x2
0x481: V406 = EXP 0x2 0xa0
0x482: V407 = SUB 0x10000000000000000000000000000000000000000 0x1
0x485: V408 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x486: V409 = 0x0
0x48a: M[0x0] = V408
0x48b: V410 = 0x2
0x48d: V411 = 0x20
0x491: M[0x20] = 0x2
0x492: V412 = 0x40
0x496: V413 = SHA3 0x0 0x40
0x497: V414 = CALLER
0x499: V415 = AND 0xffffffffffffffffffffffffffffffffffffffff V414
0x49b: M[0x0] = V415
0x49e: M[0x20] = V413
0x4a2: V416 = SHA3 0x0 0x40
0x4a6: S[V416] = V691
0x4a9: V417 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x4ab: V418 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x4cf: V419 = M[0x40]
0x4d2: M[V419] = S3
0x4d3: V420 = 0x20
0x4d5: V421 = ADD 0x20 V419
0x4d6: V422 = 0x40
0x4d8: V423 = M[0x40]
0x4db: V424 = SUB V421 V423
0x4dd: LOG V423 V424 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V408 V417
0x4df: V425 = 0x1
0x4e7: JUMP S6
---
Entry stack: [V11, S6, S5, S4, S3, S2, S1, V691]
Stack pops: 7
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x4e8
[0x4e8:0x4ed]
---
Predecessors: [0x1d6]
Successors: [0x191]
---
0x4e8 JUMPDEST
0x4e9 PUSH1 0x6
0x4eb SLOAD
0x4ec DUP2
0x4ed JUMP
---
0x4e8: JUMPDEST 
0x4e9: V426 = 0x6
0x4eb: V427 = S[0x6]
0x4ed: JUMP 0x191
---
Entry stack: [V11, 0x191]
Stack pops: 1
Stack additions: [S0, V427]
Exit stack: [V11, 0x191, V427]

================================

Block 0x4ee
[0x4ee:0x4f3]
---
Predecessors: [0x1e9]
Successors: [0x191]
---
0x4ee JUMPDEST
0x4ef PUSH1 0x5
0x4f1 SLOAD
0x4f2 DUP2
0x4f3 JUMP
---
0x4ee: JUMPDEST 
0x4ef: V428 = 0x5
0x4f1: V429 = S[0x5]
0x4f3: JUMP 0x191
---
Entry stack: [V11, 0x191]
Stack pops: 1
Stack additions: [S0, V429]
Exit stack: [V11, 0x191, V429]

================================

Block 0x4f4
[0x4f4:0x524]
---
Predecessors: [0x1fc]
Successors: [0x525, 0x551]
---
0x4f4 JUMPDEST
0x4f5 PUSH1 0x1
0x4f7 PUSH1 0xa0
0x4f9 PUSH1 0x2
0x4fb EXP
0x4fc SUB
0x4fd CALLER
0x4fe DUP2
0x4ff AND
0x500 PUSH1 0x0
0x502 SWAP1
0x503 DUP2
0x504 MSTORE
0x505 PUSH1 0x2
0x507 PUSH1 0x20
0x509 SWAP1
0x50a DUP2
0x50b MSTORE
0x50c PUSH1 0x40
0x50e DUP1
0x50f DUP4
0x510 SHA3
0x511 SWAP4
0x512 DUP7
0x513 AND
0x514 DUP4
0x515 MSTORE
0x516 SWAP3
0x517 SWAP1
0x518 MSTORE
0x519 SWAP1
0x51a DUP2
0x51b SHA3
0x51c SLOAD
0x51d DUP1
0x51e DUP4
0x51f GT
0x520 ISZERO
0x521 PUSH2 0x551
0x524 JUMPI
---
0x4f4: JUMPDEST 
0x4f5: V430 = 0x1
0x4f7: V431 = 0xa0
0x4f9: V432 = 0x2
0x4fb: V433 = EXP 0x2 0xa0
0x4fc: V434 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4fd: V435 = CALLER
0x4ff: V436 = AND 0xffffffffffffffffffffffffffffffffffffffff V435
0x500: V437 = 0x0
0x504: M[0x0] = V436
0x505: V438 = 0x2
0x507: V439 = 0x20
0x50b: M[0x20] = 0x2
0x50c: V440 = 0x40
0x510: V441 = SHA3 0x0 0x40
0x513: V442 = AND V176 0xffffffffffffffffffffffffffffffffffffffff
0x515: M[0x0] = V442
0x518: M[0x20] = V441
0x51b: V443 = SHA3 0x0 0x40
0x51c: V444 = S[V443]
0x51f: V445 = GT V178 V444
0x520: V446 = ISZERO V445
0x521: V447 = 0x551
0x524: JUMPI 0x551 V446
---
Entry stack: [V11, 0x16a, V176, V178]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V444]
Exit stack: [V11, 0x16a, V176, V178, 0x0, V444]

================================

Block 0x525
[0x525:0x550]
---
Predecessors: [0x4f4]
Successors: [0x588]
---
0x525 PUSH1 0x1
0x527 PUSH1 0xa0
0x529 PUSH1 0x2
0x52b EXP
0x52c SUB
0x52d CALLER
0x52e DUP2
0x52f AND
0x530 PUSH1 0x0
0x532 SWAP1
0x533 DUP2
0x534 MSTORE
0x535 PUSH1 0x2
0x537 PUSH1 0x20
0x539 SWAP1
0x53a DUP2
0x53b MSTORE
0x53c PUSH1 0x40
0x53e DUP1
0x53f DUP4
0x540 SHA3
0x541 SWAP4
0x542 DUP9
0x543 AND
0x544 DUP4
0x545 MSTORE
0x546 SWAP3
0x547 SWAP1
0x548 MSTORE
0x549 SWAP1
0x54a DUP2
0x54b SHA3
0x54c SSTORE
0x54d PUSH2 0x588
0x550 JUMP
---
0x525: V448 = 0x1
0x527: V449 = 0xa0
0x529: V450 = 0x2
0x52b: V451 = EXP 0x2 0xa0
0x52c: V452 = SUB 0x10000000000000000000000000000000000000000 0x1
0x52d: V453 = CALLER
0x52f: V454 = AND 0xffffffffffffffffffffffffffffffffffffffff V453
0x530: V455 = 0x0
0x534: M[0x0] = V454
0x535: V456 = 0x2
0x537: V457 = 0x20
0x53b: M[0x20] = 0x2
0x53c: V458 = 0x40
0x540: V459 = SHA3 0x0 0x40
0x543: V460 = AND V176 0xffffffffffffffffffffffffffffffffffffffff
0x545: M[0x0] = V460
0x548: M[0x20] = V459
0x54b: V461 = SHA3 0x0 0x40
0x54c: S[V461] = 0x0
0x54d: V462 = 0x588
0x550: JUMP 0x588
---
Entry stack: [V11, 0x16a, V176, V178, 0x0, V444]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x16a, V176, V178, 0x0, V444]

================================

Block 0x551
[0x551:0x560]
---
Predecessors: [0x4f4]
Successors: [0x819]
---
0x551 JUMPDEST
0x552 PUSH2 0x561
0x555 DUP2
0x556 DUP5
0x557 PUSH4 0xffffffff
0x55c PUSH2 0x819
0x55f AND
0x560 JUMP
---
0x551: JUMPDEST 
0x552: V463 = 0x561
0x557: V464 = 0xffffffff
0x55c: V465 = 0x819
0x55f: V466 = AND 0x819 0xffffffff
0x560: JUMP 0x819
---
Entry stack: [V11, 0x16a, V176, V178, 0x0, V444]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x561, S0, S2]
Exit stack: [V11, 0x16a, V176, V178, 0x0, V444, 0x561, V444, V178]

================================

Block 0x561
[0x561:0x587]
---
Predecessors: [0x825]
Successors: [0x588]
---
0x561 JUMPDEST
0x562 PUSH1 0x1
0x564 PUSH1 0xa0
0x566 PUSH1 0x2
0x568 EXP
0x569 SUB
0x56a CALLER
0x56b DUP2
0x56c AND
0x56d PUSH1 0x0
0x56f SWAP1
0x570 DUP2
0x571 MSTORE
0x572 PUSH1 0x2
0x574 PUSH1 0x20
0x576 SWAP1
0x577 DUP2
0x578 MSTORE
0x579 PUSH1 0x40
0x57b DUP1
0x57c DUP4
0x57d SHA3
0x57e SWAP4
0x57f DUP10
0x580 AND
0x581 DUP4
0x582 MSTORE
0x583 SWAP3
0x584 SWAP1
0x585 MSTORE
0x586 SHA3
0x587 SSTORE
---
0x561: JUMPDEST 
0x562: V467 = 0x1
0x564: V468 = 0xa0
0x566: V469 = 0x2
0x568: V470 = EXP 0x2 0xa0
0x569: V471 = SUB 0x10000000000000000000000000000000000000000 0x1
0x56a: V472 = CALLER
0x56c: V473 = AND 0xffffffffffffffffffffffffffffffffffffffff V472
0x56d: V474 = 0x0
0x571: M[0x0] = V473
0x572: V475 = 0x2
0x574: V476 = 0x20
0x578: M[0x20] = 0x2
0x579: V477 = 0x40
0x57d: V478 = SHA3 0x0 0x40
0x580: V479 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x582: M[0x0] = V479
0x585: M[0x20] = V478
0x586: V480 = SHA3 0x0 0x40
0x587: S[V480] = V691
---
Entry stack: [V11, S6, S5, S4, S3, S2, S1, V691]
Stack pops: 5
Stack additions: [S4, S3, S2, S1]
Exit stack: [V11, S6, S5, S4, S3, S2, S1]

================================

Block 0x588
[0x588:0x5ed]
---
Predecessors: [0x525, 0x561]
Successors: [0x16a]
---
0x588 JUMPDEST
0x589 PUSH1 0x1
0x58b PUSH1 0xa0
0x58d PUSH1 0x2
0x58f EXP
0x590 SUB
0x591 CALLER
0x592 DUP2
0x593 AND
0x594 PUSH1 0x0
0x596 DUP2
0x597 DUP2
0x598 MSTORE
0x599 PUSH1 0x2
0x59b PUSH1 0x20
0x59d SWAP1
0x59e DUP2
0x59f MSTORE
0x5a0 PUSH1 0x40
0x5a2 DUP1
0x5a3 DUP4
0x5a4 SHA3
0x5a5 SWAP5
0x5a6 DUP10
0x5a7 AND
0x5a8 DUP1
0x5a9 DUP5
0x5aa MSTORE
0x5ab SWAP5
0x5ac SWAP1
0x5ad SWAP2
0x5ae MSTORE
0x5af SWAP1
0x5b0 DUP2
0x5b1 SWAP1
0x5b2 SHA3
0x5b3 SLOAD
0x5b4 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x5d5 SWAP2
0x5d6 MLOAD
0x5d7 SWAP1
0x5d8 DUP2
0x5d9 MSTORE
0x5da PUSH1 0x20
0x5dc ADD
0x5dd PUSH1 0x40
0x5df MLOAD
0x5e0 DUP1
0x5e1 SWAP2
0x5e2 SUB
0x5e3 SWAP1
0x5e4 LOG3
0x5e5 POP
0x5e6 PUSH1 0x1
0x5e8 SWAP4
0x5e9 SWAP3
0x5ea POP
0x5eb POP
0x5ec POP
0x5ed JUMP
---
0x588: JUMPDEST 
0x589: V481 = 0x1
0x58b: V482 = 0xa0
0x58d: V483 = 0x2
0x58f: V484 = EXP 0x2 0xa0
0x590: V485 = SUB 0x10000000000000000000000000000000000000000 0x1
0x591: V486 = CALLER
0x593: V487 = AND 0xffffffffffffffffffffffffffffffffffffffff V486
0x594: V488 = 0x0
0x598: M[0x0] = V487
0x599: V489 = 0x2
0x59b: V490 = 0x20
0x59f: M[0x20] = 0x2
0x5a0: V491 = 0x40
0x5a4: V492 = SHA3 0x0 0x40
0x5a7: V493 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x5aa: M[0x0] = V493
0x5ae: M[0x20] = V492
0x5b2: V494 = SHA3 0x0 0x40
0x5b3: V495 = S[V494]
0x5b4: V496 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x5d6: V497 = M[0x40]
0x5d9: M[V497] = V495
0x5da: V498 = 0x20
0x5dc: V499 = ADD 0x20 V497
0x5dd: V500 = 0x40
0x5df: V501 = M[0x40]
0x5e2: V502 = SUB V499 V501
0x5e4: LOG V501 V502 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V487 V493
0x5e6: V503 = 0x1
0x5ed: JUMP S4
---
Entry stack: [V11, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [0x1]
Exit stack: [V11, S5, 0x1]

================================

Block 0x5ee
[0x5ee:0x608]
---
Predecessors: [0x21e]
Successors: [0x191]
---
0x5ee JUMPDEST
0x5ef PUSH1 0x1
0x5f1 PUSH1 0xa0
0x5f3 PUSH1 0x2
0x5f5 EXP
0x5f6 SUB
0x5f7 AND
0x5f8 PUSH1 0x0
0x5fa SWAP1
0x5fb DUP2
0x5fc MSTORE
0x5fd PUSH1 0x1
0x5ff PUSH1 0x20
0x601 MSTORE
0x602 PUSH1 0x40
0x604 SWAP1
0x605 SHA3
0x606 SLOAD
0x607 SWAP1
0x608 JUMP
---
0x5ee: JUMPDEST 
0x5ef: V504 = 0x1
0x5f1: V505 = 0xa0
0x5f3: V506 = 0x2
0x5f5: V507 = EXP 0x2 0xa0
0x5f6: V508 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5f7: V509 = AND 0xffffffffffffffffffffffffffffffffffffffff V192
0x5f8: V510 = 0x0
0x5fc: M[0x0] = V509
0x5fd: V511 = 0x1
0x5ff: V512 = 0x20
0x601: M[0x20] = 0x1
0x602: V513 = 0x40
0x605: V514 = SHA3 0x0 0x40
0x606: V515 = S[V514]
0x608: JUMP 0x191
---
Entry stack: [V11, 0x191, V192]
Stack pops: 2
Stack additions: [V515]
Exit stack: [V11, V515]

================================

Block 0x609
[0x609:0x658]
---
Predecessors: [0x23d]
Successors: [0x344, 0x659]
---
0x609 JUMPDEST
0x60a PUSH1 0x4
0x60c DUP1
0x60d SLOAD
0x60e PUSH1 0x1
0x610 DUP2
0x611 PUSH1 0x1
0x613 AND
0x614 ISZERO
0x615 PUSH2 0x100
0x618 MUL
0x619 SUB
0x61a AND
0x61b PUSH1 0x2
0x61d SWAP1
0x61e DIV
0x61f DUP1
0x620 PUSH1 0x1f
0x622 ADD
0x623 PUSH1 0x20
0x625 DUP1
0x626 SWAP2
0x627 DIV
0x628 MUL
0x629 PUSH1 0x20
0x62b ADD
0x62c PUSH1 0x40
0x62e MLOAD
0x62f SWAP1
0x630 DUP2
0x631 ADD
0x632 PUSH1 0x40
0x634 MSTORE
0x635 DUP1
0x636 SWAP3
0x637 SWAP2
0x638 SWAP1
0x639 DUP2
0x63a DUP2
0x63b MSTORE
0x63c PUSH1 0x20
0x63e ADD
0x63f DUP3
0x640 DUP1
0x641 SLOAD
0x642 PUSH1 0x1
0x644 DUP2
0x645 PUSH1 0x1
0x647 AND
0x648 ISZERO
0x649 PUSH2 0x100
0x64c MUL
0x64d SUB
0x64e AND
0x64f PUSH1 0x2
0x651 SWAP1
0x652 DIV
0x653 DUP1
0x654 ISZERO
0x655 PUSH2 0x344
0x658 JUMPI
---
0x609: JUMPDEST 
0x60a: V516 = 0x4
0x60d: V517 = S[0x4]
0x60e: V518 = 0x1
0x611: V519 = 0x1
0x613: V520 = AND 0x1 V517
0x614: V521 = ISZERO V520
0x615: V522 = 0x100
0x618: V523 = MUL 0x100 V521
0x619: V524 = SUB V523 0x1
0x61a: V525 = AND V524 V517
0x61b: V526 = 0x2
0x61e: V527 = DIV V525 0x2
0x620: V528 = 0x1f
0x622: V529 = ADD 0x1f V527
0x623: V530 = 0x20
0x627: V531 = DIV V529 0x20
0x628: V532 = MUL V531 0x20
0x629: V533 = 0x20
0x62b: V534 = ADD 0x20 V532
0x62c: V535 = 0x40
0x62e: V536 = M[0x40]
0x631: V537 = ADD V536 V534
0x632: V538 = 0x40
0x634: M[0x40] = V537
0x63b: M[V536] = V527
0x63c: V539 = 0x20
0x63e: V540 = ADD 0x20 V536
0x641: V541 = S[0x4]
0x642: V542 = 0x1
0x645: V543 = 0x1
0x647: V544 = AND 0x1 V541
0x648: V545 = ISZERO V544
0x649: V546 = 0x100
0x64c: V547 = MUL 0x100 V545
0x64d: V548 = SUB V547 0x1
0x64e: V549 = AND V548 V541
0x64f: V550 = 0x2
0x652: V551 = DIV V549 0x2
0x654: V552 = ISZERO V551
0x655: V553 = 0x344
0x658: JUMPI 0x344 V552
---
Entry stack: [V11, 0xd1]
Stack pops: 0
Stack additions: [V536, 0x4, V527, V540, 0x4, V551]
Exit stack: [V11, 0xd1, V536, 0x4, V527, V540, 0x4, V551]

================================

Block 0x659
[0x659:0x660]
---
Predecessors: [0x609]
Successors: [0x319, 0x661]
---
0x659 DUP1
0x65a PUSH1 0x1f
0x65c LT
0x65d PUSH2 0x319
0x660 JUMPI
---
0x65a: V554 = 0x1f
0x65c: V555 = LT 0x1f V551
0x65d: V556 = 0x319
0x660: JUMPI 0x319 V555
---
Entry stack: [V11, 0xd1, V536, 0x4, V527, V540, 0x4, V551]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xd1, V536, 0x4, V527, V540, 0x4, V551]

================================

Block 0x661
[0x661:0x673]
---
Predecessors: [0x659]
Successors: [0x344]
---
0x661 PUSH2 0x100
0x664 DUP1
0x665 DUP4
0x666 SLOAD
0x667 DIV
0x668 MUL
0x669 DUP4
0x66a MSTORE
0x66b SWAP2
0x66c PUSH1 0x20
0x66e ADD
0x66f SWAP2
0x670 PUSH2 0x344
0x673 JUMP
---
0x661: V557 = 0x100
0x666: V558 = S[0x4]
0x667: V559 = DIV V558 0x100
0x668: V560 = MUL V559 0x100
0x66a: M[V540] = V560
0x66c: V561 = 0x20
0x66e: V562 = ADD 0x20 V540
0x670: V563 = 0x344
0x673: JUMP 0x344
---
Entry stack: [V11, 0xd1, V536, 0x4, V527, V540, 0x4, V551]
Stack pops: 3
Stack additions: [V562, S1, S0]
Exit stack: [V11, 0xd1, V536, 0x4, V527, V562, 0x4, V551]

================================

Block 0x674
[0x674:0x686]
---
Predecessors: [0x250]
Successors: [0x687, 0x68b]
---
0x674 JUMPDEST
0x675 PUSH1 0x0
0x677 PUSH1 0x1
0x679 PUSH1 0xa0
0x67b PUSH1 0x2
0x67d EXP
0x67e SUB
0x67f DUP4
0x680 AND
0x681 ISZERO
0x682 ISZERO
0x683 PUSH2 0x68b
0x686 JUMPI
---
0x674: JUMPDEST 
0x675: V564 = 0x0
0x677: V565 = 0x1
0x679: V566 = 0xa0
0x67b: V567 = 0x2
0x67d: V568 = EXP 0x2 0xa0
0x67e: V569 = SUB 0x10000000000000000000000000000000000000000 0x1
0x680: V570 = AND V212 0xffffffffffffffffffffffffffffffffffffffff
0x681: V571 = ISZERO V570
0x682: V572 = ISZERO V571
0x683: V573 = 0x68b
0x686: JUMPI 0x68b V572
---
Entry stack: [V11, 0x16a, V212, V214]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V11, 0x16a, V212, V214, 0x0]

================================

Block 0x687
[0x687:0x68a]
---
Predecessors: [0x674]
Successors: []
---
0x687 PUSH1 0x0
0x689 DUP1
0x68a REVERT
---
0x687: V574 = 0x0
0x68a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x16a, V212, V214, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x16a, V212, V214, 0x0]

================================

Block 0x68b
[0x68b:0x6b3]
---
Predecessors: [0x674]
Successors: [0x819]
---
0x68b JUMPDEST
0x68c PUSH1 0x1
0x68e PUSH1 0xa0
0x690 PUSH1 0x2
0x692 EXP
0x693 SUB
0x694 CALLER
0x695 AND
0x696 PUSH1 0x0
0x698 SWAP1
0x699 DUP2
0x69a MSTORE
0x69b PUSH1 0x1
0x69d PUSH1 0x20
0x69f MSTORE
0x6a0 PUSH1 0x40
0x6a2 SWAP1
0x6a3 SHA3
0x6a4 SLOAD
0x6a5 PUSH2 0x6b4
0x6a8 SWAP1
0x6a9 DUP4
0x6aa PUSH4 0xffffffff
0x6af PUSH2 0x819
0x6b2 AND
0x6b3 JUMP
---
0x68b: JUMPDEST 
0x68c: V575 = 0x1
0x68e: V576 = 0xa0
0x690: V577 = 0x2
0x692: V578 = EXP 0x2 0xa0
0x693: V579 = SUB 0x10000000000000000000000000000000000000000 0x1
0x694: V580 = CALLER
0x695: V581 = AND V580 0xffffffffffffffffffffffffffffffffffffffff
0x696: V582 = 0x0
0x69a: M[0x0] = V581
0x69b: V583 = 0x1
0x69d: V584 = 0x20
0x69f: M[0x20] = 0x1
0x6a0: V585 = 0x40
0x6a3: V586 = SHA3 0x0 0x40
0x6a4: V587 = S[V586]
0x6a5: V588 = 0x6b4
0x6aa: V589 = 0xffffffff
0x6af: V590 = 0x819
0x6b2: V591 = AND 0x819 0xffffffff
0x6b3: JUMP 0x819
---
Entry stack: [V11, 0x16a, V212, V214, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x6b4, V587, S1]
Exit stack: [V11, 0x16a, V212, V214, 0x0, 0x6b4, V587, V214]

================================

Block 0x6b4
[0x6b4:0x6e8]
---
Predecessors: [0x825]
Successors: [0x82b]
---
0x6b4 JUMPDEST
0x6b5 PUSH1 0x1
0x6b7 PUSH1 0xa0
0x6b9 PUSH1 0x2
0x6bb EXP
0x6bc SUB
0x6bd CALLER
0x6be DUP2
0x6bf AND
0x6c0 PUSH1 0x0
0x6c2 SWAP1
0x6c3 DUP2
0x6c4 MSTORE
0x6c5 PUSH1 0x1
0x6c7 PUSH1 0x20
0x6c9 MSTORE
0x6ca PUSH1 0x40
0x6cc DUP1
0x6cd DUP3
0x6ce SHA3
0x6cf SWAP4
0x6d0 SWAP1
0x6d1 SWAP4
0x6d2 SSTORE
0x6d3 SWAP1
0x6d4 DUP6
0x6d5 AND
0x6d6 DUP2
0x6d7 MSTORE
0x6d8 SHA3
0x6d9 SLOAD
0x6da PUSH2 0x6e9
0x6dd SWAP1
0x6de DUP4
0x6df PUSH4 0xffffffff
0x6e4 PUSH2 0x82b
0x6e7 AND
0x6e8 JUMP
---
0x6b4: JUMPDEST 
0x6b5: V592 = 0x1
0x6b7: V593 = 0xa0
0x6b9: V594 = 0x2
0x6bb: V595 = EXP 0x2 0xa0
0x6bc: V596 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6bd: V597 = CALLER
0x6bf: V598 = AND 0xffffffffffffffffffffffffffffffffffffffff V597
0x6c0: V599 = 0x0
0x6c4: M[0x0] = V598
0x6c5: V600 = 0x1
0x6c7: V601 = 0x20
0x6c9: M[0x20] = 0x1
0x6ca: V602 = 0x40
0x6ce: V603 = SHA3 0x0 0x40
0x6d2: S[V603] = V691
0x6d5: V604 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x6d7: M[0x0] = V604
0x6d8: V605 = SHA3 0x0 0x40
0x6d9: V606 = S[V605]
0x6da: V607 = 0x6e9
0x6df: V608 = 0xffffffff
0x6e4: V609 = 0x82b
0x6e7: V610 = AND 0x82b 0xffffffff
0x6e8: JUMP 0x82b
---
Entry stack: [V11, S6, S5, S4, S3, S2, S1, V691]
Stack pops: 4
Stack additions: [S3, S2, S1, 0x6e9, V606, S2]
Exit stack: [V11, S6, S5, S4, S3, S2, S1, 0x6e9, V606, S2]

================================

Block 0x6e9
[0x6e9:0x749]
---
Predecessors: [0x83a]
Successors: [0x16a]
---
0x6e9 JUMPDEST
0x6ea PUSH1 0x1
0x6ec PUSH1 0xa0
0x6ee PUSH1 0x2
0x6f0 EXP
0x6f1 SUB
0x6f2 DUP1
0x6f3 DUP6
0x6f4 AND
0x6f5 PUSH1 0x0
0x6f7 DUP2
0x6f8 DUP2
0x6f9 MSTORE
0x6fa PUSH1 0x1
0x6fc PUSH1 0x20
0x6fe MSTORE
0x6ff PUSH1 0x40
0x701 SWAP1
0x702 DUP2
0x703 SWAP1
0x704 SHA3
0x705 SWAP4
0x706 SWAP1
0x707 SWAP4
0x708 SSTORE
0x709 SWAP2
0x70a CALLER
0x70b SWAP1
0x70c SWAP2
0x70d AND
0x70e SWAP1
0x70f PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x730 SWAP1
0x731 DUP6
0x732 SWAP1
0x733 MLOAD
0x734 SWAP1
0x735 DUP2
0x736 MSTORE
0x737 PUSH1 0x20
0x739 ADD
0x73a PUSH1 0x40
0x73c MLOAD
0x73d DUP1
0x73e SWAP2
0x73f SUB
0x740 SWAP1
0x741 LOG3
0x742 POP
0x743 PUSH1 0x1
0x745 SWAP3
0x746 SWAP2
0x747 POP
0x748 POP
0x749 JUMP
---
0x6e9: JUMPDEST 
0x6ea: V611 = 0x1
0x6ec: V612 = 0xa0
0x6ee: V613 = 0x2
0x6f0: V614 = EXP 0x2 0xa0
0x6f1: V615 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6f4: V616 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x6f5: V617 = 0x0
0x6f9: M[0x0] = V616
0x6fa: V618 = 0x1
0x6fc: V619 = 0x20
0x6fe: M[0x20] = 0x1
0x6ff: V620 = 0x40
0x704: V621 = SHA3 0x0 0x40
0x708: S[V621] = S0
0x70a: V622 = CALLER
0x70d: V623 = AND 0xffffffffffffffffffffffffffffffffffffffff V622
0x70f: V624 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x733: V625 = M[0x40]
0x736: M[V625] = S2
0x737: V626 = 0x20
0x739: V627 = ADD 0x20 V625
0x73a: V628 = 0x40
0x73c: V629 = M[0x40]
0x73f: V630 = SUB V627 V629
0x741: LOG V629 V630 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V623 V616
0x743: V631 = 0x1
0x749: JUMP S4
---
Entry stack: [V11, 0x16a, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [0x1]
Exit stack: [V11, 0x16a, S5, 0x1]

================================

Block 0x74a
[0x74a:0x781]
---
Predecessors: [0x272]
Successors: [0x82b]
---
0x74a JUMPDEST
0x74b PUSH1 0x1
0x74d PUSH1 0xa0
0x74f PUSH1 0x2
0x751 EXP
0x752 SUB
0x753 CALLER
0x754 DUP2
0x755 AND
0x756 PUSH1 0x0
0x758 SWAP1
0x759 DUP2
0x75a MSTORE
0x75b PUSH1 0x2
0x75d PUSH1 0x20
0x75f SWAP1
0x760 DUP2
0x761 MSTORE
0x762 PUSH1 0x40
0x764 DUP1
0x765 DUP4
0x766 SHA3
0x767 SWAP4
0x768 DUP7
0x769 AND
0x76a DUP4
0x76b MSTORE
0x76c SWAP3
0x76d SWAP1
0x76e MSTORE
0x76f SWAP1
0x770 DUP2
0x771 SHA3
0x772 SLOAD
0x773 PUSH2 0x782
0x776 SWAP1
0x777 DUP4
0x778 PUSH4 0xffffffff
0x77d PUSH2 0x82b
0x780 AND
0x781 JUMP
---
0x74a: JUMPDEST 
0x74b: V632 = 0x1
0x74d: V633 = 0xa0
0x74f: V634 = 0x2
0x751: V635 = EXP 0x2 0xa0
0x752: V636 = SUB 0x10000000000000000000000000000000000000000 0x1
0x753: V637 = CALLER
0x755: V638 = AND 0xffffffffffffffffffffffffffffffffffffffff V637
0x756: V639 = 0x0
0x75a: M[0x0] = V638
0x75b: V640 = 0x2
0x75d: V641 = 0x20
0x761: M[0x20] = 0x2
0x762: V642 = 0x40
0x766: V643 = SHA3 0x0 0x40
0x769: V644 = AND V228 0xffffffffffffffffffffffffffffffffffffffff
0x76b: M[0x0] = V644
0x76e: M[0x20] = V643
0x771: V645 = SHA3 0x0 0x40
0x772: V646 = S[V645]
0x773: V647 = 0x782
0x778: V648 = 0xffffffff
0x77d: V649 = 0x82b
0x780: V650 = AND 0x82b 0xffffffff
0x781: JUMP 0x82b
---
Entry stack: [V11, 0x16a, V228, V230]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x782, V646, S0]
Exit stack: [V11, 0x16a, V228, V230, 0x0, 0x782, V646, V230]

================================

Block 0x782
[0x782:0x7ed]
---
Predecessors: [0x83a]
Successors: [0x16a]
---
0x782 JUMPDEST
0x783 PUSH1 0x1
0x785 PUSH1 0xa0
0x787 PUSH1 0x2
0x789 EXP
0x78a SUB
0x78b CALLER
0x78c DUP2
0x78d AND
0x78e PUSH1 0x0
0x790 DUP2
0x791 DUP2
0x792 MSTORE
0x793 PUSH1 0x2
0x795 PUSH1 0x20
0x797 SWAP1
0x798 DUP2
0x799 MSTORE
0x79a PUSH1 0x40
0x79c DUP1
0x79d DUP4
0x79e SHA3
0x79f SWAP5
0x7a0 DUP10
0x7a1 AND
0x7a2 DUP1
0x7a3 DUP5
0x7a4 MSTORE
0x7a5 SWAP5
0x7a6 SWAP1
0x7a7 SWAP2
0x7a8 MSTORE
0x7a9 SWAP1
0x7aa DUP2
0x7ab SWAP1
0x7ac SHA3
0x7ad DUP5
0x7ae SWAP1
0x7af SSTORE
0x7b0 SWAP2
0x7b1 SWAP3
0x7b2 SWAP1
0x7b3 SWAP2
0x7b4 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x7d5 SWAP2
0x7d6 SWAP1
0x7d7 MLOAD
0x7d8 SWAP1
0x7d9 DUP2
0x7da MSTORE
0x7db PUSH1 0x20
0x7dd ADD
0x7de PUSH1 0x40
0x7e0 MLOAD
0x7e1 DUP1
0x7e2 SWAP2
0x7e3 SUB
0x7e4 SWAP1
0x7e5 LOG3
0x7e6 POP
0x7e7 PUSH1 0x1
0x7e9 SWAP3
0x7ea SWAP2
0x7eb POP
0x7ec POP
0x7ed JUMP
---
0x782: JUMPDEST 
0x783: V651 = 0x1
0x785: V652 = 0xa0
0x787: V653 = 0x2
0x789: V654 = EXP 0x2 0xa0
0x78a: V655 = SUB 0x10000000000000000000000000000000000000000 0x1
0x78b: V656 = CALLER
0x78d: V657 = AND 0xffffffffffffffffffffffffffffffffffffffff V656
0x78e: V658 = 0x0
0x792: M[0x0] = V657
0x793: V659 = 0x2
0x795: V660 = 0x20
0x799: M[0x20] = 0x2
0x79a: V661 = 0x40
0x79e: V662 = SHA3 0x0 0x40
0x7a1: V663 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x7a4: M[0x0] = V663
0x7a8: M[0x20] = V662
0x7ac: V664 = SHA3 0x0 0x40
0x7af: S[V664] = S0
0x7b4: V665 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x7d7: V666 = M[0x40]
0x7da: M[V666] = S0
0x7db: V667 = 0x20
0x7dd: V668 = ADD 0x20 V666
0x7de: V669 = 0x40
0x7e0: V670 = M[0x40]
0x7e3: V671 = SUB V668 V670
0x7e5: LOG V670 V671 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V657 V663
0x7e7: V672 = 0x1
0x7ed: JUMP S4
---
Entry stack: [V11, 0x16a, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [0x1]
Exit stack: [V11, 0x16a, S5, 0x1]

================================

Block 0x7ee
[0x7ee:0x818]
---
Predecessors: [0x294]
Successors: [0x191]
---
0x7ee JUMPDEST
0x7ef PUSH1 0x1
0x7f1 PUSH1 0xa0
0x7f3 PUSH1 0x2
0x7f5 EXP
0x7f6 SUB
0x7f7 SWAP2
0x7f8 DUP3
0x7f9 AND
0x7fa PUSH1 0x0
0x7fc SWAP1
0x7fd DUP2
0x7fe MSTORE
0x7ff PUSH1 0x2
0x801 PUSH1 0x20
0x803 SWAP1
0x804 DUP2
0x805 MSTORE
0x806 PUSH1 0x40
0x808 DUP1
0x809 DUP4
0x80a SHA3
0x80b SWAP4
0x80c SWAP1
0x80d SWAP5
0x80e AND
0x80f DUP3
0x810 MSTORE
0x811 SWAP2
0x812 SWAP1
0x813 SWAP2
0x814 MSTORE
0x815 SHA3
0x816 SLOAD
0x817 SWAP1
0x818 JUMP
---
0x7ee: JUMPDEST 
0x7ef: V673 = 0x1
0x7f1: V674 = 0xa0
0x7f3: V675 = 0x2
0x7f5: V676 = EXP 0x2 0xa0
0x7f6: V677 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7f9: V678 = AND 0xffffffffffffffffffffffffffffffffffffffff V244
0x7fa: V679 = 0x0
0x7fe: M[0x0] = V678
0x7ff: V680 = 0x2
0x801: V681 = 0x20
0x805: M[0x20] = 0x2
0x806: V682 = 0x40
0x80a: V683 = SHA3 0x0 0x40
0x80e: V684 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0x810: M[0x0] = V684
0x814: M[0x20] = V683
0x815: V685 = SHA3 0x0 0x40
0x816: V686 = S[V685]
0x818: JUMP 0x191
---
Entry stack: [V11, 0x191, V244, V247]
Stack pops: 3
Stack additions: [V686]
Exit stack: [V11, V686]

================================

Block 0x819
[0x819:0x823]
---
Predecessors: [0x3d6, 0x451, 0x551, 0x68b]
Successors: [0x824, 0x825]
---
0x819 JUMPDEST
0x81a PUSH1 0x0
0x81c DUP3
0x81d DUP3
0x81e GT
0x81f ISZERO
0x820 PUSH2 0x825
0x823 JUMPI
---
0x819: JUMPDEST 
0x81a: V687 = 0x0
0x81e: V688 = GT S0 S1
0x81f: V689 = ISZERO V688
0x820: V690 = 0x825
0x823: JUMPI 0x825 V689
---
Entry stack: [V11, S8, S7, S6, S5, S4, S3, {0x41c, 0x47a, 0x561, 0x6b4}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V11, S8, S7, S6, S5, S4, S3, {0x41c, 0x47a, 0x561, 0x6b4}, S1, S0, 0x0]

================================

Block 0x824
[0x824:0x824]
---
Predecessors: [0x819]
Successors: []
---
0x824 INVALID
---
0x824: INVALID 
---
Entry stack: [V11, S9, S8, S7, S6, S5, S4, {0x41c, 0x47a, 0x561, 0x6b4}, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S9, S8, S7, S6, S5, S4, {0x41c, 0x47a, 0x561, 0x6b4}, S2, S1, 0x0]

================================

Block 0x825
[0x825:0x82a]
---
Predecessors: [0x819]
Successors: [0x41c, 0x47a, 0x561, 0x6b4]
---
0x825 JUMPDEST
0x826 POP
0x827 SWAP1
0x828 SUB
0x829 SWAP1
0x82a JUMP
---
0x825: JUMPDEST 
0x828: V691 = SUB S2 S1
0x82a: JUMP {0x41c, 0x47a, 0x561, 0x6b4}
---
Entry stack: [V11, S9, S8, S7, S6, S5, S4, {0x41c, 0x47a, 0x561, 0x6b4}, S2, S1, 0x0]
Stack pops: 4
Stack additions: [V691]
Exit stack: [V11, S9, S8, S7, S6, S5, S4, V691]

================================

Block 0x82b
[0x82b:0x838]
---
Predecessors: [0x41c, 0x6b4, 0x74a]
Successors: [0x839, 0x83a]
---
0x82b JUMPDEST
0x82c PUSH1 0x0
0x82e DUP3
0x82f DUP3
0x830 ADD
0x831 DUP4
0x832 DUP2
0x833 LT
0x834 ISZERO
0x835 PUSH2 0x83a
0x838 JUMPI
---
0x82b: JUMPDEST 
0x82c: V692 = 0x0
0x830: V693 = ADD S0 S1
0x833: V694 = LT V693 S1
0x834: V695 = ISZERO V694
0x835: V696 = 0x83a
0x838: JUMPI 0x83a V695
---
Entry stack: [V11, S8, S7, S6, S5, S4, S3, {0x451, 0x6e9, 0x782}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V693]
Exit stack: [V11, S8, S7, S6, S5, S4, S3, {0x451, 0x6e9, 0x782}, S1, S0, 0x0, V693]

================================

Block 0x839
[0x839:0x839]
---
Predecessors: [0x82b]
Successors: []
---
0x839 INVALID
---
0x839: INVALID 
---
Entry stack: [V11, S10, S9, S8, S7, S6, S5, {0x451, 0x6e9, 0x782}, S3, S2, 0x0, V693]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S10, S9, S8, S7, S6, S5, {0x451, 0x6e9, 0x782}, S3, S2, 0x0, V693]

================================

Block 0x83a
[0x83a:0x840]
---
Predecessors: [0x82b]
Successors: [0x451, 0x6e9, 0x782]
---
0x83a JUMPDEST
0x83b SWAP4
0x83c SWAP3
0x83d POP
0x83e POP
0x83f POP
0x840 JUMP
---
0x83a: JUMPDEST 
0x840: JUMP {0x451, 0x6e9, 0x782}
---
Entry stack: [V11, S10, S9, S8, S7, S6, S5, {0x451, 0x6e9, 0x782}, S3, S2, 0x0, V693]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V11, S10, S9, S8, S7, S6, S5, V693]

================================

Block 0x841
[0x841:0x86c]
---
Predecessors: []
Successors: []
---
0x841 STOP
0x842 LOG1
0x843 PUSH6 0x627a7a723058
0x84a SHA3
0x84b TIMESTAMP
0x84c SHA3
0x84d MISSING 0xbf
0x84e MISSING 0x23
0x84f SWAP16
0x850 MISSING 0xc6
0x851 SWAP7
0x852 ORIGIN
0x853 DUP4
0x854 MISSING 0xc5
0x855 JUMP
0x856 ORIGIN
0x857 OR
0x858 DUP12
0x859 MISSING 0xf6
0x85a DIFFICULTY
0x85b EQ
0x85c MISSING 0x24
0x85d STOP
0x85e SWAP11
0x85f INVALID
0x860 MISSING 0xce
0x861 MISSING 0xfc
0x862 MISSING 0x24
0x863 MISSING 0x23
0x864 SWAP11
0x865 PUSH4 0x4f43c47e
0x86a DELEGATECALL
0x86b STOP
0x86c MISSING 0x29
---
0x841: STOP 
0x842: LOG S0 S1 S2
0x843: V697 = 0x627a7a723058
0x84a: V698 = SHA3 0x627a7a723058 S3
0x84b: V699 = TIMESTAMP
0x84c: V700 = SHA3 V699 V698
0x84d: MISSING 0xbf
0x84e: MISSING 0x23
0x850: MISSING 0xc6
0x852: V701 = ORIGIN
0x854: MISSING 0xc5
0x855: JUMP S0
0x856: V702 = ORIGIN
0x857: V703 = OR V702 S0
0x859: MISSING 0xf6
0x85a: V704 = DIFFICULTY
0x85b: V705 = EQ V704 S0
0x85c: MISSING 0x24
0x85d: STOP 
0x85f: INVALID 
0x860: MISSING 0xce
0x861: MISSING 0xfc
0x862: MISSING 0x24
0x863: MISSING 0x23
0x865: V706 = 0x4f43c47e
0x86a: V707 = DELEGATECALL 0x4f43c47e S11 S1 S2 S3 S4
0x86b: STOP 
0x86c: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V700, S16, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S0, S2, V701, S7, S1, S2, S3, S4, S5, S6, S0, S11, V703, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, V705, S11, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S0, V707, S5, S6, S7, S8, S9, S10, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0xbe
Exit block: 0x13a
Body: 0xbe, 0xc5, 0xc9, 0xd1, 0xf5, 0xfe, 0x10d, 0x121, 0x13a, 0x2ae, 0x2fe, 0x306, 0x319, 0x327, 0x33b, 0x344

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x148
Exit block: 0x16a
Body: 0x148, 0x14f, 0x153, 0x16a, 0x34c

Function 2:
Public function signature: 0x18160ddd
Entry block: 0x17e
Exit block: 0x191
Body: 0x17e, 0x185, 0x189, 0x191, 0x3b8

Function 3:
Public function signature: 0x23b872dd
Entry block: 0x1a3
Exit block: 0x16a
Body: 0x16a, 0x1a3, 0x1aa, 0x1ae, 0x3be, 0x3d2, 0x3d6, 0x41c

Function 4:
Public function signature: 0x2ff2e9dc
Entry block: 0x1cb
Exit block: 0x191
Body: 0x191, 0x1cb, 0x1d2, 0x1d6, 0x4e8

Function 5:
Public function signature: 0x313ce567
Entry block: 0x1de
Exit block: 0x191
Body: 0x191, 0x1de, 0x1e5, 0x1e9, 0x4ee

Function 6:
Public function signature: 0x66188463
Entry block: 0x1f1
Exit block: 0x16a
Body: 0x16a, 0x1f1, 0x1f8, 0x1fc, 0x4f4, 0x525, 0x551, 0x561, 0x588

Function 7:
Public function signature: 0x70a08231
Entry block: 0x213
Exit block: 0x191
Body: 0x191, 0x213, 0x21a, 0x21e, 0x5ee

Function 8:
Public function signature: 0x95d89b41
Entry block: 0x232
Exit block: 0x13a
Body: 0xd1, 0xf5, 0xfe, 0x10d, 0x121, 0x13a, 0x232, 0x239, 0x23d, 0x319, 0x327, 0x33b, 0x344, 0x609, 0x659, 0x661

Function 9:
Public function signature: 0xa9059cbb
Entry block: 0x245
Exit block: 0x16a
Body: 0x16a, 0x245, 0x24c, 0x250, 0x674, 0x687, 0x68b, 0x6b4

Function 10:
Public function signature: 0xd73dd623
Entry block: 0x267
Exit block: 0x16a
Body: 0x16a, 0x267, 0x26e, 0x272, 0x74a, 0x782

Function 11:
Public function signature: 0xdd62ed3e
Entry block: 0x289
Exit block: 0x191
Body: 0x191, 0x289, 0x290, 0x294, 0x7ee

Function 12:
Public fallback function
Entry block: 0xb9
Exit block: 0xb9
Body: 0xb9

Function 13:
Private function
Entry block: 0x82b
Exit block: 0x83a
Body: 0x82b, 0x83a

Function 14:
Private function
Entry block: 0x819
Exit block: 0x825
Body: 0x819, 0x825

