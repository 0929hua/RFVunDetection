Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6d]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6d
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6d
0xc: JUMPI 0x6d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x6f]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x33984958
0x3c EQ
0x3d PUSH2 0x6f
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x33984958
0x3c: V13 = EQ 0x33984958 V11
0x3d: V14 = 0x6f
0x40: JUMPI 0x6f V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x86]
---
0x41 DUP1
0x42 PUSH4 0x43ec51f7
0x47 EQ
0x48 PUSH2 0x86
0x4b JUMPI
---
0x42: V15 = 0x43ec51f7
0x47: V16 = EQ 0x43ec51f7 V11
0x48: V17 = 0x86
0x4b: JUMPI 0x86 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xc6]
---
0x4c DUP1
0x4d PUSH4 0x778d491e
0x52 EQ
0x53 PUSH2 0xc6
0x56 JUMPI
---
0x4d: V18 = 0x778d491e
0x52: V19 = EQ 0x778d491e V11
0x53: V20 = 0xc6
0x56: JUMPI 0xc6 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xe6]
---
0x57 DUP1
0x58 PUSH4 0x8da5cb5b
0x5d EQ
0x5e PUSH2 0xe6
0x61 JUMPI
---
0x58: V21 = 0x8da5cb5b
0x5d: V22 = EQ 0x8da5cb5b V11
0x5e: V23 = 0xe6
0x61: JUMPI 0xe6 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x13d]
---
0x62 DUP1
0x63 PUSH4 0xf2fde38b
0x68 EQ
0x69 PUSH2 0x13d
0x6c JUMPI
---
0x63: V24 = 0xf2fde38b
0x68: V25 = EQ 0xf2fde38b V11
0x69: V26 = 0x13d
0x6c: JUMPI 0x13d V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x6e]
---
Predecessors: [0x0, 0x62]
Successors: []
---
0x6d JUMPDEST
0x6e STOP
---
0x6d: JUMPDEST 
0x6e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6f
[0x6f:0x76]
---
Predecessors: [0xd]
Successors: [0x77, 0x7b]
---
0x6f JUMPDEST
0x70 CALLVALUE
0x71 DUP1
0x72 ISZERO
0x73 PUSH2 0x7b
0x76 JUMPI
---
0x6f: JUMPDEST 
0x70: V27 = CALLVALUE
0x72: V28 = ISZERO V27
0x73: V29 = 0x7b
0x76: JUMPI 0x7b V28
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V27]
Exit stack: [V11, V27]

================================

Block 0x77
[0x77:0x7a]
---
Predecessors: [0x6f]
Successors: []
---
0x77 PUSH1 0x0
0x79 DUP1
0x7a REVERT
---
0x77: V30 = 0x0
0x7a: REVERT 0x0 0x0
---
Entry stack: [V11, V27]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V27]

================================

Block 0x7b
[0x7b:0x83]
---
Predecessors: [0x6f]
Successors: [0x180]
---
0x7b JUMPDEST
0x7c POP
0x7d PUSH2 0x84
0x80 PUSH2 0x180
0x83 JUMP
---
0x7b: JUMPDEST 
0x7d: V31 = 0x84
0x80: V32 = 0x180
0x83: JUMP 0x180
---
Entry stack: [V11, V27]
Stack pops: 1
Stack additions: [0x84]
Exit stack: [V11, 0x84]

================================

Block 0x84
[0x84:0x85]
---
Predecessors: [0x180]
Successors: []
---
0x84 JUMPDEST
0x85 STOP
---
0x84: JUMPDEST 
0x85: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x86
[0x86:0xc3]
---
Predecessors: [0x41]
Successors: [0x182]
---
0x86 JUMPDEST
0x87 PUSH2 0xc4
0x8a PUSH1 0x4
0x8c DUP1
0x8d CALLDATASIZE
0x8e SUB
0x8f DUP2
0x90 ADD
0x91 SWAP1
0x92 DUP1
0x93 DUP1
0x94 CALLDATALOAD
0x95 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaa AND
0xab SWAP1
0xac PUSH1 0x20
0xae ADD
0xaf SWAP1
0xb0 SWAP3
0xb1 SWAP2
0xb2 SWAP1
0xb3 DUP1
0xb4 CALLDATALOAD
0xb5 SWAP1
0xb6 PUSH1 0x20
0xb8 ADD
0xb9 SWAP1
0xba SWAP3
0xbb SWAP2
0xbc SWAP1
0xbd POP
0xbe POP
0xbf POP
0xc0 PUSH2 0x182
0xc3 JUMP
---
0x86: JUMPDEST 
0x87: V33 = 0xc4
0x8a: V34 = 0x4
0x8d: V35 = CALLDATASIZE
0x8e: V36 = SUB V35 0x4
0x90: V37 = ADD 0x4 V36
0x94: V38 = CALLDATALOAD 0x4
0x95: V39 = 0xffffffffffffffffffffffffffffffffffffffff
0xaa: V40 = AND 0xffffffffffffffffffffffffffffffffffffffff V38
0xac: V41 = 0x20
0xae: V42 = ADD 0x20 0x4
0xb4: V43 = CALLDATALOAD 0x24
0xb6: V44 = 0x20
0xb8: V45 = ADD 0x20 0x24
0xc0: V46 = 0x182
0xc3: JUMP 0x182
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xc4, V40, V43]
Exit stack: [V11, 0xc4, V40, V43]

================================

Block 0xc4
[0xc4:0xc5]
---
Predecessors: [0x258]
Successors: []
---
0xc4 JUMPDEST
0xc5 STOP
---
0xc4: JUMPDEST 
0xc5: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc6
[0xc6:0xe3]
---
Predecessors: [0x4c]
Successors: [0x25d]
---
0xc6 JUMPDEST
0xc7 PUSH2 0xe4
0xca PUSH1 0x4
0xcc DUP1
0xcd CALLDATASIZE
0xce SUB
0xcf DUP2
0xd0 ADD
0xd1 SWAP1
0xd2 DUP1
0xd3 DUP1
0xd4 CALLDATALOAD
0xd5 SWAP1
0xd6 PUSH1 0x20
0xd8 ADD
0xd9 SWAP1
0xda SWAP3
0xdb SWAP2
0xdc SWAP1
0xdd POP
0xde POP
0xdf POP
0xe0 PUSH2 0x25d
0xe3 JUMP
---
0xc6: JUMPDEST 
0xc7: V47 = 0xe4
0xca: V48 = 0x4
0xcd: V49 = CALLDATASIZE
0xce: V50 = SUB V49 0x4
0xd0: V51 = ADD 0x4 V50
0xd4: V52 = CALLDATALOAD 0x4
0xd6: V53 = 0x20
0xd8: V54 = ADD 0x20 0x4
0xe0: V55 = 0x25d
0xe3: JUMP 0x25d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe4, V52]
Exit stack: [V11, 0xe4, V52]

================================

Block 0xe4
[0xe4:0xe5]
---
Predecessors: [0x354]
Successors: []
---
0xe4 JUMPDEST
0xe5 STOP
---
0xe4: JUMPDEST 
0xe5: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe6
[0xe6:0xed]
---
Predecessors: [0x57]
Successors: [0xee, 0xf2]
---
0xe6 JUMPDEST
0xe7 CALLVALUE
0xe8 DUP1
0xe9 ISZERO
0xea PUSH2 0xf2
0xed JUMPI
---
0xe6: JUMPDEST 
0xe7: V56 = CALLVALUE
0xe9: V57 = ISZERO V56
0xea: V58 = 0xf2
0xed: JUMPI 0xf2 V57
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V56]
Exit stack: [V11, V56]

================================

Block 0xee
[0xee:0xf1]
---
Predecessors: [0xe6]
Successors: []
---
0xee PUSH1 0x0
0xf0 DUP1
0xf1 REVERT
---
0xee: V59 = 0x0
0xf1: REVERT 0x0 0x0
---
Entry stack: [V11, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V56]

================================

Block 0xf2
[0xf2:0xfa]
---
Predecessors: [0xe6]
Successors: [0x358]
---
0xf2 JUMPDEST
0xf3 POP
0xf4 PUSH2 0xfb
0xf7 PUSH2 0x358
0xfa JUMP
---
0xf2: JUMPDEST 
0xf4: V60 = 0xfb
0xf7: V61 = 0x358
0xfa: JUMP 0x358
---
Entry stack: [V11, V56]
Stack pops: 1
Stack additions: [0xfb]
Exit stack: [V11, 0xfb]

================================

Block 0xfb
[0xfb:0x13c]
---
Predecessors: [0x358]
Successors: []
---
0xfb JUMPDEST
0xfc PUSH1 0x40
0xfe MLOAD
0xff DUP1
0x100 DUP3
0x101 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x116 AND
0x117 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12c AND
0x12d DUP2
0x12e MSTORE
0x12f PUSH1 0x20
0x131 ADD
0x132 SWAP2
0x133 POP
0x134 POP
0x135 PUSH1 0x40
0x137 MLOAD
0x138 DUP1
0x139 SWAP2
0x13a SUB
0x13b SWAP1
0x13c RETURN
---
0xfb: JUMPDEST 
0xfc: V62 = 0x40
0xfe: V63 = M[0x40]
0x101: V64 = 0xffffffffffffffffffffffffffffffffffffffff
0x116: V65 = AND 0xffffffffffffffffffffffffffffffffffffffff V205
0x117: V66 = 0xffffffffffffffffffffffffffffffffffffffff
0x12c: V67 = AND 0xffffffffffffffffffffffffffffffffffffffff V65
0x12e: M[V63] = V67
0x12f: V68 = 0x20
0x131: V69 = ADD 0x20 V63
0x135: V70 = 0x40
0x137: V71 = M[0x40]
0x13a: V72 = SUB V69 V71
0x13c: RETURN V71 V72
---
Entry stack: [V11, 0xfb, V205]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xfb]

================================

Block 0x13d
[0x13d:0x144]
---
Predecessors: [0x62]
Successors: [0x145, 0x149]
---
0x13d JUMPDEST
0x13e CALLVALUE
0x13f DUP1
0x140 ISZERO
0x141 PUSH2 0x149
0x144 JUMPI
---
0x13d: JUMPDEST 
0x13e: V73 = CALLVALUE
0x140: V74 = ISZERO V73
0x141: V75 = 0x149
0x144: JUMPI 0x149 V74
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V73]
Exit stack: [V11, V73]

================================

Block 0x145
[0x145:0x148]
---
Predecessors: [0x13d]
Successors: []
---
0x145 PUSH1 0x0
0x147 DUP1
0x148 REVERT
---
0x145: V76 = 0x0
0x148: REVERT 0x0 0x0
---
Entry stack: [V11, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V73]

================================

Block 0x149
[0x149:0x17d]
---
Predecessors: [0x13d]
Successors: [0x37d]
---
0x149 JUMPDEST
0x14a POP
0x14b PUSH2 0x17e
0x14e PUSH1 0x4
0x150 DUP1
0x151 CALLDATASIZE
0x152 SUB
0x153 DUP2
0x154 ADD
0x155 SWAP1
0x156 DUP1
0x157 DUP1
0x158 CALLDATALOAD
0x159 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16e AND
0x16f SWAP1
0x170 PUSH1 0x20
0x172 ADD
0x173 SWAP1
0x174 SWAP3
0x175 SWAP2
0x176 SWAP1
0x177 POP
0x178 POP
0x179 POP
0x17a PUSH2 0x37d
0x17d JUMP
---
0x149: JUMPDEST 
0x14b: V77 = 0x17e
0x14e: V78 = 0x4
0x151: V79 = CALLDATASIZE
0x152: V80 = SUB V79 0x4
0x154: V81 = ADD 0x4 V80
0x158: V82 = CALLDATALOAD 0x4
0x159: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x16e: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0x170: V85 = 0x20
0x172: V86 = ADD 0x20 0x4
0x17a: V87 = 0x37d
0x17d: JUMP 0x37d
---
Entry stack: [V11, V73]
Stack pops: 1
Stack additions: [0x17e, V84]
Exit stack: [V11, 0x17e, V84]

================================

Block 0x17e
[0x17e:0x17f]
---
Predecessors: [0x414]
Successors: []
---
0x17e JUMPDEST
0x17f STOP
---
0x17e: JUMPDEST 
0x17f: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x180
[0x180:0x181]
---
Predecessors: [0x7b]
Successors: [0x84]
---
0x180 JUMPDEST
0x181 JUMP
---
0x180: JUMPDEST 
0x181: JUMP 0x84
---
Entry stack: [V11, 0x84]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x182
[0x182:0x1d8]
---
Predecessors: [0x86]
Successors: [0x1d9, 0x1dd]
---
0x182 JUMPDEST
0x183 PUSH1 0x0
0x185 DUP1
0x186 SWAP1
0x187 SLOAD
0x188 SWAP1
0x189 PUSH2 0x100
0x18c EXP
0x18d SWAP1
0x18e DIV
0x18f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a4 AND
0x1a5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ba AND
0x1bb CALLER
0x1bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d1 AND
0x1d2 EQ
0x1d3 ISZERO
0x1d4 ISZERO
0x1d5 PUSH2 0x1dd
0x1d8 JUMPI
---
0x182: JUMPDEST 
0x183: V88 = 0x0
0x187: V89 = S[0x0]
0x189: V90 = 0x100
0x18c: V91 = EXP 0x100 0x0
0x18e: V92 = DIV V89 0x1
0x18f: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a4: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x1a5: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ba: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x1bb: V97 = CALLER
0x1bc: V98 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d1: V99 = AND 0xffffffffffffffffffffffffffffffffffffffff V97
0x1d2: V100 = EQ V99 V96
0x1d3: V101 = ISZERO V100
0x1d4: V102 = ISZERO V101
0x1d5: V103 = 0x1dd
0x1d8: JUMPI 0x1dd V102
---
Entry stack: [V11, 0xc4, V40, V43]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc4, V40, V43]

================================

Block 0x1d9
[0x1d9:0x1dc]
---
Predecessors: [0x182]
Successors: []
---
0x1d9 PUSH1 0x0
0x1db DUP1
0x1dc REVERT
---
0x1d9: V104 = 0x0
0x1dc: REVERT 0x0 0x0
---
Entry stack: [V11, 0xc4, V40, V43]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc4, V40, V43]

================================

Block 0x1dd
[0x1dd:0x1e7]
---
Predecessors: [0x182]
Successors: [0x1e8, 0x1ec]
---
0x1dd JUMPDEST
0x1de PUSH1 0x0
0x1e0 DUP2
0x1e1 GT
0x1e2 ISZERO
0x1e3 ISZERO
0x1e4 PUSH2 0x1ec
0x1e7 JUMPI
---
0x1dd: JUMPDEST 
0x1de: V105 = 0x0
0x1e1: V106 = GT V43 0x0
0x1e2: V107 = ISZERO V106
0x1e3: V108 = ISZERO V107
0x1e4: V109 = 0x1ec
0x1e7: JUMPI 0x1ec V108
---
Entry stack: [V11, 0xc4, V40, V43]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xc4, V40, V43]

================================

Block 0x1e8
[0x1e8:0x1eb]
---
Predecessors: [0x1dd]
Successors: []
---
0x1e8 PUSH1 0x0
0x1ea DUP1
0x1eb REVERT
---
0x1e8: V110 = 0x0
0x1eb: REVERT 0x0 0x0
---
Entry stack: [V11, 0xc4, V40, V43]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc4, V40, V43]

================================

Block 0x1ec
[0x1ec:0x20d]
---
Predecessors: [0x1dd]
Successors: [0x20e, 0x212]
---
0x1ec JUMPDEST
0x1ed DUP1
0x1ee ADDRESS
0x1ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x204 AND
0x205 BALANCE
0x206 LT
0x207 ISZERO
0x208 ISZERO
0x209 ISZERO
0x20a PUSH2 0x212
0x20d JUMPI
---
0x1ec: JUMPDEST 
0x1ee: V111 = ADDRESS
0x1ef: V112 = 0xffffffffffffffffffffffffffffffffffffffff
0x204: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x205: V114 = BALANCE V113
0x206: V115 = LT V114 V43
0x207: V116 = ISZERO V115
0x208: V117 = ISZERO V116
0x209: V118 = ISZERO V117
0x20a: V119 = 0x212
0x20d: JUMPI 0x212 V118
---
Entry stack: [V11, 0xc4, V40, V43]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xc4, V40, V43]

================================

Block 0x20e
[0x20e:0x211]
---
Predecessors: [0x1ec]
Successors: []
---
0x20e PUSH1 0x0
0x210 DUP1
0x211 REVERT
---
0x20e: V120 = 0x0
0x211: REVERT 0x0 0x0
---
Entry stack: [V11, 0xc4, V40, V43]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc4, V40, V43]

================================

Block 0x212
[0x212:0x24e]
---
Predecessors: [0x1ec]
Successors: [0x24f, 0x258]
---
0x212 JUMPDEST
0x213 DUP2
0x214 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x229 AND
0x22a PUSH2 0x8fc
0x22d DUP3
0x22e SWAP1
0x22f DUP2
0x230 ISZERO
0x231 MUL
0x232 SWAP1
0x233 PUSH1 0x40
0x235 MLOAD
0x236 PUSH1 0x0
0x238 PUSH1 0x40
0x23a MLOAD
0x23b DUP1
0x23c DUP4
0x23d SUB
0x23e DUP2
0x23f DUP6
0x240 DUP9
0x241 DUP9
0x242 CALL
0x243 SWAP4
0x244 POP
0x245 POP
0x246 POP
0x247 POP
0x248 ISZERO
0x249 DUP1
0x24a ISZERO
0x24b PUSH2 0x258
0x24e JUMPI
---
0x212: JUMPDEST 
0x214: V121 = 0xffffffffffffffffffffffffffffffffffffffff
0x229: V122 = AND 0xffffffffffffffffffffffffffffffffffffffff V40
0x22a: V123 = 0x8fc
0x230: V124 = ISZERO V43
0x231: V125 = MUL V124 0x8fc
0x233: V126 = 0x40
0x235: V127 = M[0x40]
0x236: V128 = 0x0
0x238: V129 = 0x40
0x23a: V130 = M[0x40]
0x23d: V131 = SUB V127 V130
0x242: V132 = CALL V125 V122 V43 V130 V131 V130 0x0
0x248: V133 = ISZERO V132
0x24a: V134 = ISZERO V133
0x24b: V135 = 0x258
0x24e: JUMPI 0x258 V134
---
Entry stack: [V11, 0xc4, V40, V43]
Stack pops: 2
Stack additions: [S1, S0, V133]
Exit stack: [V11, 0xc4, V40, V43, V133]

================================

Block 0x24f
[0x24f:0x257]
---
Predecessors: [0x212]
Successors: []
---
0x24f RETURNDATASIZE
0x250 PUSH1 0x0
0x252 DUP1
0x253 RETURNDATACOPY
0x254 RETURNDATASIZE
0x255 PUSH1 0x0
0x257 REVERT
---
0x24f: V136 = RETURNDATASIZE
0x250: V137 = 0x0
0x253: RETURNDATACOPY 0x0 0x0 V136
0x254: V138 = RETURNDATASIZE
0x255: V139 = 0x0
0x257: REVERT 0x0 V138
---
Entry stack: [V11, 0xc4, V40, V43, V133]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc4, V40, V43, V133]

================================

Block 0x258
[0x258:0x25c]
---
Predecessors: [0x212]
Successors: [0xc4]
---
0x258 JUMPDEST
0x259 POP
0x25a POP
0x25b POP
0x25c JUMP
---
0x258: JUMPDEST 
0x25c: JUMP 0xc4
---
Entry stack: [V11, 0xc4, V40, V43, V133]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x25d
[0x25d:0x2b3]
---
Predecessors: [0xc6]
Successors: [0x2b4, 0x2b8]
---
0x25d JUMPDEST
0x25e PUSH1 0x0
0x260 DUP1
0x261 SWAP1
0x262 SLOAD
0x263 SWAP1
0x264 PUSH2 0x100
0x267 EXP
0x268 SWAP1
0x269 DIV
0x26a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27f AND
0x280 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x295 AND
0x296 CALLER
0x297 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ac AND
0x2ad EQ
0x2ae ISZERO
0x2af ISZERO
0x2b0 PUSH2 0x2b8
0x2b3 JUMPI
---
0x25d: JUMPDEST 
0x25e: V140 = 0x0
0x262: V141 = S[0x0]
0x264: V142 = 0x100
0x267: V143 = EXP 0x100 0x0
0x269: V144 = DIV V141 0x1
0x26a: V145 = 0xffffffffffffffffffffffffffffffffffffffff
0x27f: V146 = AND 0xffffffffffffffffffffffffffffffffffffffff V144
0x280: V147 = 0xffffffffffffffffffffffffffffffffffffffff
0x295: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V146
0x296: V149 = CALLER
0x297: V150 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ac: V151 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x2ad: V152 = EQ V151 V148
0x2ae: V153 = ISZERO V152
0x2af: V154 = ISZERO V153
0x2b0: V155 = 0x2b8
0x2b3: JUMPI 0x2b8 V154
---
Entry stack: [V11, 0xe4, V52]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe4, V52]

================================

Block 0x2b4
[0x2b4:0x2b7]
---
Predecessors: [0x25d]
Successors: []
---
0x2b4 PUSH1 0x0
0x2b6 DUP1
0x2b7 REVERT
---
0x2b4: V156 = 0x0
0x2b7: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe4, V52]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe4, V52]

================================

Block 0x2b8
[0x2b8:0x2c2]
---
Predecessors: [0x25d]
Successors: [0x2c3, 0x2c7]
---
0x2b8 JUMPDEST
0x2b9 PUSH1 0x0
0x2bb DUP2
0x2bc GT
0x2bd ISZERO
0x2be ISZERO
0x2bf PUSH2 0x2c7
0x2c2 JUMPI
---
0x2b8: JUMPDEST 
0x2b9: V157 = 0x0
0x2bc: V158 = GT V52 0x0
0x2bd: V159 = ISZERO V158
0x2be: V160 = ISZERO V159
0x2bf: V161 = 0x2c7
0x2c2: JUMPI 0x2c7 V160
---
Entry stack: [V11, 0xe4, V52]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xe4, V52]

================================

Block 0x2c3
[0x2c3:0x2c6]
---
Predecessors: [0x2b8]
Successors: []
---
0x2c3 PUSH1 0x0
0x2c5 DUP1
0x2c6 REVERT
---
0x2c3: V162 = 0x0
0x2c6: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe4, V52]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe4, V52]

================================

Block 0x2c7
[0x2c7:0x2e8]
---
Predecessors: [0x2b8]
Successors: [0x2e9, 0x2ed]
---
0x2c7 JUMPDEST
0x2c8 DUP1
0x2c9 ADDRESS
0x2ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2df AND
0x2e0 BALANCE
0x2e1 LT
0x2e2 ISZERO
0x2e3 ISZERO
0x2e4 ISZERO
0x2e5 PUSH2 0x2ed
0x2e8 JUMPI
---
0x2c7: JUMPDEST 
0x2c9: V163 = ADDRESS
0x2ca: V164 = 0xffffffffffffffffffffffffffffffffffffffff
0x2df: V165 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0x2e0: V166 = BALANCE V165
0x2e1: V167 = LT V166 V52
0x2e2: V168 = ISZERO V167
0x2e3: V169 = ISZERO V168
0x2e4: V170 = ISZERO V169
0x2e5: V171 = 0x2ed
0x2e8: JUMPI 0x2ed V170
---
Entry stack: [V11, 0xe4, V52]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xe4, V52]

================================

Block 0x2e9
[0x2e9:0x2ec]
---
Predecessors: [0x2c7]
Successors: []
---
0x2e9 PUSH1 0x0
0x2eb DUP1
0x2ec REVERT
---
0x2e9: V172 = 0x0
0x2ec: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe4, V52]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe4, V52]

================================

Block 0x2ed
[0x2ed:0x34a]
---
Predecessors: [0x2c7]
Successors: [0x34b, 0x354]
---
0x2ed JUMPDEST
0x2ee PUSH1 0x0
0x2f0 DUP1
0x2f1 SWAP1
0x2f2 SLOAD
0x2f3 SWAP1
0x2f4 PUSH2 0x100
0x2f7 EXP
0x2f8 SWAP1
0x2f9 DIV
0x2fa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x30f AND
0x310 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x325 AND
0x326 PUSH2 0x8fc
0x329 DUP3
0x32a SWAP1
0x32b DUP2
0x32c ISZERO
0x32d MUL
0x32e SWAP1
0x32f PUSH1 0x40
0x331 MLOAD
0x332 PUSH1 0x0
0x334 PUSH1 0x40
0x336 MLOAD
0x337 DUP1
0x338 DUP4
0x339 SUB
0x33a DUP2
0x33b DUP6
0x33c DUP9
0x33d DUP9
0x33e CALL
0x33f SWAP4
0x340 POP
0x341 POP
0x342 POP
0x343 POP
0x344 ISZERO
0x345 DUP1
0x346 ISZERO
0x347 PUSH2 0x354
0x34a JUMPI
---
0x2ed: JUMPDEST 
0x2ee: V173 = 0x0
0x2f2: V174 = S[0x0]
0x2f4: V175 = 0x100
0x2f7: V176 = EXP 0x100 0x0
0x2f9: V177 = DIV V174 0x1
0x2fa: V178 = 0xffffffffffffffffffffffffffffffffffffffff
0x30f: V179 = AND 0xffffffffffffffffffffffffffffffffffffffff V177
0x310: V180 = 0xffffffffffffffffffffffffffffffffffffffff
0x325: V181 = AND 0xffffffffffffffffffffffffffffffffffffffff V179
0x326: V182 = 0x8fc
0x32c: V183 = ISZERO V52
0x32d: V184 = MUL V183 0x8fc
0x32f: V185 = 0x40
0x331: V186 = M[0x40]
0x332: V187 = 0x0
0x334: V188 = 0x40
0x336: V189 = M[0x40]
0x339: V190 = SUB V186 V189
0x33e: V191 = CALL V184 V181 V52 V189 V190 V189 0x0
0x344: V192 = ISZERO V191
0x346: V193 = ISZERO V192
0x347: V194 = 0x354
0x34a: JUMPI 0x354 V193
---
Entry stack: [V11, 0xe4, V52]
Stack pops: 1
Stack additions: [S0, V192]
Exit stack: [V11, 0xe4, V52, V192]

================================

Block 0x34b
[0x34b:0x353]
---
Predecessors: [0x2ed]
Successors: []
---
0x34b RETURNDATASIZE
0x34c PUSH1 0x0
0x34e DUP1
0x34f RETURNDATACOPY
0x350 RETURNDATASIZE
0x351 PUSH1 0x0
0x353 REVERT
---
0x34b: V195 = RETURNDATASIZE
0x34c: V196 = 0x0
0x34f: RETURNDATACOPY 0x0 0x0 V195
0x350: V197 = RETURNDATASIZE
0x351: V198 = 0x0
0x353: REVERT 0x0 V197
---
Entry stack: [V11, 0xe4, V52, V192]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe4, V52, V192]

================================

Block 0x354
[0x354:0x357]
---
Predecessors: [0x2ed]
Successors: [0xe4]
---
0x354 JUMPDEST
0x355 POP
0x356 POP
0x357 JUMP
---
0x354: JUMPDEST 
0x357: JUMP 0xe4
---
Entry stack: [V11, 0xe4, V52, V192]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x358
[0x358:0x37c]
---
Predecessors: [0xf2]
Successors: [0xfb]
---
0x358 JUMPDEST
0x359 PUSH1 0x0
0x35b DUP1
0x35c SWAP1
0x35d SLOAD
0x35e SWAP1
0x35f PUSH2 0x100
0x362 EXP
0x363 SWAP1
0x364 DIV
0x365 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37a AND
0x37b DUP2
0x37c JUMP
---
0x358: JUMPDEST 
0x359: V199 = 0x0
0x35d: V200 = S[0x0]
0x35f: V201 = 0x100
0x362: V202 = EXP 0x100 0x0
0x364: V203 = DIV V200 0x1
0x365: V204 = 0xffffffffffffffffffffffffffffffffffffffff
0x37a: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff V203
0x37c: JUMP 0xfb
---
Entry stack: [V11, 0xfb]
Stack pops: 1
Stack additions: [S0, V205]
Exit stack: [V11, 0xfb, V205]

================================

Block 0x37d
[0x37d:0x3d3]
---
Predecessors: [0x149]
Successors: [0x3d4, 0x3d8]
---
0x37d JUMPDEST
0x37e PUSH1 0x0
0x380 DUP1
0x381 SWAP1
0x382 SLOAD
0x383 SWAP1
0x384 PUSH2 0x100
0x387 EXP
0x388 SWAP1
0x389 DIV
0x38a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x39f AND
0x3a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b5 AND
0x3b6 CALLER
0x3b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3cc AND
0x3cd EQ
0x3ce ISZERO
0x3cf ISZERO
0x3d0 PUSH2 0x3d8
0x3d3 JUMPI
---
0x37d: JUMPDEST 
0x37e: V206 = 0x0
0x382: V207 = S[0x0]
0x384: V208 = 0x100
0x387: V209 = EXP 0x100 0x0
0x389: V210 = DIV V207 0x1
0x38a: V211 = 0xffffffffffffffffffffffffffffffffffffffff
0x39f: V212 = AND 0xffffffffffffffffffffffffffffffffffffffff V210
0x3a0: V213 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b5: V214 = AND 0xffffffffffffffffffffffffffffffffffffffff V212
0x3b6: V215 = CALLER
0x3b7: V216 = 0xffffffffffffffffffffffffffffffffffffffff
0x3cc: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff V215
0x3cd: V218 = EQ V217 V214
0x3ce: V219 = ISZERO V218
0x3cf: V220 = ISZERO V219
0x3d0: V221 = 0x3d8
0x3d3: JUMPI 0x3d8 V220
---
Entry stack: [V11, 0x17e, V84]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x17e, V84]

================================

Block 0x3d4
[0x3d4:0x3d7]
---
Predecessors: [0x37d]
Successors: []
---
0x3d4 PUSH1 0x0
0x3d6 DUP1
0x3d7 REVERT
---
0x3d4: V222 = 0x0
0x3d7: REVERT 0x0 0x0
---
Entry stack: [V11, 0x17e, V84]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x17e, V84]

================================

Block 0x3d8
[0x3d8:0x40f]
---
Predecessors: [0x37d]
Successors: [0x410, 0x414]
---
0x3d8 JUMPDEST
0x3d9 PUSH1 0x0
0x3db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f0 AND
0x3f1 DUP2
0x3f2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x407 AND
0x408 EQ
0x409 ISZERO
0x40a ISZERO
0x40b ISZERO
0x40c PUSH2 0x414
0x40f JUMPI
---
0x3d8: JUMPDEST 
0x3d9: V223 = 0x0
0x3db: V224 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f0: V225 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x3f2: V226 = 0xffffffffffffffffffffffffffffffffffffffff
0x407: V227 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0x408: V228 = EQ V227 0x0
0x409: V229 = ISZERO V228
0x40a: V230 = ISZERO V229
0x40b: V231 = ISZERO V230
0x40c: V232 = 0x414
0x40f: JUMPI 0x414 V231
---
Entry stack: [V11, 0x17e, V84]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x17e, V84]

================================

Block 0x410
[0x410:0x413]
---
Predecessors: [0x3d8]
Successors: []
---
0x410 PUSH1 0x0
0x412 DUP1
0x413 REVERT
---
0x410: V233 = 0x0
0x413: REVERT 0x0 0x0
---
Entry stack: [V11, 0x17e, V84]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x17e, V84]

================================

Block 0x414
[0x414:0x4d1]
---
Predecessors: [0x3d8]
Successors: [0x17e]
---
0x414 JUMPDEST
0x415 DUP1
0x416 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x42b AND
0x42c PUSH1 0x0
0x42e DUP1
0x42f SWAP1
0x430 SLOAD
0x431 SWAP1
0x432 PUSH2 0x100
0x435 EXP
0x436 SWAP1
0x437 DIV
0x438 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x44d AND
0x44e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x463 AND
0x464 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x485 PUSH1 0x40
0x487 MLOAD
0x488 PUSH1 0x40
0x48a MLOAD
0x48b DUP1
0x48c SWAP2
0x48d SUB
0x48e SWAP1
0x48f LOG3
0x490 DUP1
0x491 PUSH1 0x0
0x493 DUP1
0x494 PUSH2 0x100
0x497 EXP
0x498 DUP2
0x499 SLOAD
0x49a DUP2
0x49b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4b0 MUL
0x4b1 NOT
0x4b2 AND
0x4b3 SWAP1
0x4b4 DUP4
0x4b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ca AND
0x4cb MUL
0x4cc OR
0x4cd SWAP1
0x4ce SSTORE
0x4cf POP
0x4d0 POP
0x4d1 JUMP
---
0x414: JUMPDEST 
0x416: V234 = 0xffffffffffffffffffffffffffffffffffffffff
0x42b: V235 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0x42c: V236 = 0x0
0x430: V237 = S[0x0]
0x432: V238 = 0x100
0x435: V239 = EXP 0x100 0x0
0x437: V240 = DIV V237 0x1
0x438: V241 = 0xffffffffffffffffffffffffffffffffffffffff
0x44d: V242 = AND 0xffffffffffffffffffffffffffffffffffffffff V240
0x44e: V243 = 0xffffffffffffffffffffffffffffffffffffffff
0x463: V244 = AND 0xffffffffffffffffffffffffffffffffffffffff V242
0x464: V245 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x485: V246 = 0x40
0x487: V247 = M[0x40]
0x488: V248 = 0x40
0x48a: V249 = M[0x40]
0x48d: V250 = SUB V247 V249
0x48f: LOG V249 V250 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V244 V235
0x491: V251 = 0x0
0x494: V252 = 0x100
0x497: V253 = EXP 0x100 0x0
0x499: V254 = S[0x0]
0x49b: V255 = 0xffffffffffffffffffffffffffffffffffffffff
0x4b0: V256 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x4b1: V257 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x4b2: V258 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V254
0x4b5: V259 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ca: V260 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0x4cb: V261 = MUL V260 0x1
0x4cc: V262 = OR V261 V258
0x4ce: S[0x0] = V262
0x4d1: JUMP 0x17e
---
Entry stack: [V11, 0x17e, V84]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x4d2
[0x4d2:0x504]
---
Predecessors: []
Successors: []
---
0x4d2 STOP
0x4d3 LOG1
0x4d4 PUSH6 0x627a7a723058
0x4db SHA3
0x4dc LT
0x4dd LOG3
0x4de MISSING 0x23
0x4df MISSING 0xd3
0x4e0 PUSH2 0x1c94
0x4e3 EQ
0x4e4 MISSING 0xac
0x4e5 MISSING 0xe7
0x4e6 GASPRICE
0x4e7 PUSH1 0x81
0x4e9 ORIGIN
0x4ea MISSING 0xdb
0x4eb DUP14
0x4ec MISSING 0xe7
0x4ed EXTCODESIZE
0x4ee GT
0x4ef DIFFICULTY
0x4f0 DUP5
0x4f1 DIV
0x4f2 PUSH18 0x4cd6059f3ad412aca0029
---
0x4d2: STOP 
0x4d3: LOG S0 S1 S2
0x4d4: V263 = 0x627a7a723058
0x4db: V264 = SHA3 0x627a7a723058 S3
0x4dc: V265 = LT V264 S4
0x4dd: LOG V265 S5 S6 S7 S8
0x4de: MISSING 0x23
0x4df: MISSING 0xd3
0x4e0: V266 = 0x1c94
0x4e3: V267 = EQ 0x1c94 S0
0x4e4: MISSING 0xac
0x4e5: MISSING 0xe7
0x4e6: V268 = GASPRICE
0x4e7: V269 = 0x81
0x4e9: V270 = ORIGIN
0x4ea: MISSING 0xdb
0x4ec: MISSING 0xe7
0x4ed: V271 = EXTCODESIZE S0
0x4ee: V272 = GT V271 S1
0x4ef: V273 = DIFFICULTY
0x4f1: V274 = DIV S4 V273
0x4f2: V275 = 0x4cd6059f3ad412aca0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V267, V270, 0x81, V268, S13, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, 0x4cd6059f3ad412aca0029, V274, V272, S2, S3, S4]
Exit stack: []

================================

Function 0:
Public function signature: 0x33984958
Entry block: 0x6f
Exit block: 0x84
Body: 0x6f, 0x77, 0x7b, 0x84, 0x180

Function 1:
Public function signature: 0x43ec51f7
Entry block: 0x86
Exit block: 0xc4
Body: 0x86, 0xc4, 0x182, 0x1d9, 0x1dd, 0x1e8, 0x1ec, 0x20e, 0x212, 0x24f, 0x258

Function 2:
Public function signature: 0x778d491e
Entry block: 0xc6
Exit block: 0xe4
Body: 0xc6, 0xe4, 0x25d, 0x2b4, 0x2b8, 0x2c3, 0x2c7, 0x2e9, 0x2ed, 0x34b, 0x354

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0xe6
Exit block: 0xfb
Body: 0xe6, 0xee, 0xf2, 0xfb, 0x358

Function 4:
Public function signature: 0xf2fde38b
Entry block: 0x13d
Exit block: 0x17e
Body: 0x13d, 0x145, 0x149, 0x17e, 0x37d, 0x3d4, 0x3d8, 0x410, 0x414

Function 5:
Public fallback function
Entry block: 0x6d
Exit block: 0x6d
Body: 0x6d

