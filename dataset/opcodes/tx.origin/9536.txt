Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x78]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x78
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x78
0xc: JUMPI 0x78 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x7a]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x3999795
0x3c EQ
0x3d PUSH2 0x7a
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x3999795
0x3c: V13 = EQ 0x3999795 V11
0x3d: V14 = 0x7a
0x40: JUMPI 0x7a V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xcf]
---
0x41 DUP1
0x42 PUSH4 0x65372147
0x47 EQ
0x48 PUSH2 0xcf
0x4b JUMPI
---
0x42: V15 = 0x65372147
0x47: V16 = EQ 0x65372147 V11
0x48: V17 = 0xcf
0x4b: JUMPI 0xcf V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xfe]
---
0x4c DUP1
0x4d PUSH4 0xb2c3609b
0x52 EQ
0x53 PUSH2 0xfe
0x56 JUMPI
---
0x4d: V18 = 0xb2c3609b
0x52: V19 = EQ 0xb2c3609b V11
0x53: V20 = 0xfe
0x56: JUMPI 0xfe V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x119]
---
0x57 DUP1
0x58 PUSH4 0xbef4876b
0x5d EQ
0x5e PUSH2 0x119
0x61 JUMPI
---
0x58: V21 = 0xbef4876b
0x5d: V22 = EQ 0xbef4876b V11
0x5e: V23 = 0x119
0x61: JUMPI 0x119 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x146]
---
0x62 DUP1
0x63 PUSH4 0xf1b6315e
0x68 EQ
0x69 PUSH2 0x146
0x6c JUMPI
---
0x63: V24 = 0xf1b6315e
0x68: V25 = EQ 0xf1b6315e V11
0x69: V26 = 0x146
0x6c: JUMPI 0x146 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x161]
---
0x6d DUP1
0x6e PUSH4 0xf50ab247
0x73 EQ
0x74 PUSH2 0x161
0x77 JUMPI
---
0x6e: V27 = 0xf50ab247
0x73: V28 = EQ 0xf50ab247 V11
0x74: V29 = 0x161
0x77: JUMPI 0x161 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x79]
---
Predecessors: [0x0, 0x6d]
Successors: []
---
0x78 JUMPDEST
0x79 STOP
---
0x78: JUMPDEST 
0x79: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7a
[0x7a:0x80]
---
Predecessors: [0xd]
Successors: [0x81, 0x85]
---
0x7a JUMPDEST
0x7b CALLVALUE
0x7c ISZERO
0x7d PUSH2 0x85
0x80 JUMPI
---
0x7a: JUMPDEST 
0x7b: V30 = CALLVALUE
0x7c: V31 = ISZERO V30
0x7d: V32 = 0x85
0x80: JUMPI 0x85 V31
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x81
[0x81:0x84]
---
Predecessors: [0x7a]
Successors: []
---
0x81 PUSH1 0x0
0x83 DUP1
0x84 REVERT
---
0x81: V33 = 0x0
0x84: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x85
[0x85:0x8c]
---
Predecessors: [0x7a]
Successors: [0x16b]
---
0x85 JUMPDEST
0x86 PUSH2 0x8d
0x89 PUSH2 0x16b
0x8c JUMP
---
0x85: JUMPDEST 
0x86: V34 = 0x8d
0x89: V35 = 0x16b
0x8c: JUMP 0x16b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x8d]
Exit stack: [V11, 0x8d]

================================

Block 0x8d
[0x8d:0xce]
---
Predecessors: [0x16b]
Successors: []
---
0x8d JUMPDEST
0x8e PUSH1 0x40
0x90 MLOAD
0x91 DUP1
0x92 DUP3
0x93 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa8 AND
0xa9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbe AND
0xbf DUP2
0xc0 MSTORE
0xc1 PUSH1 0x20
0xc3 ADD
0xc4 SWAP2
0xc5 POP
0xc6 POP
0xc7 PUSH1 0x40
0xc9 MLOAD
0xca DUP1
0xcb SWAP2
0xcc SUB
0xcd SWAP1
0xce RETURN
---
0x8d: JUMPDEST 
0x8e: V36 = 0x40
0x90: V37 = M[0x40]
0x93: V38 = 0xffffffffffffffffffffffffffffffffffffffff
0xa8: V39 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0xa9: V40 = 0xffffffffffffffffffffffffffffffffffffffff
0xbe: V41 = AND 0xffffffffffffffffffffffffffffffffffffffff V39
0xc0: M[V37] = V41
0xc1: V42 = 0x20
0xc3: V43 = ADD 0x20 V37
0xc7: V44 = 0x40
0xc9: V45 = M[0x40]
0xcc: V46 = SUB V43 V45
0xce: RETURN V45 V46
---
Entry stack: [V11, 0x8d, V106]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x8d]

================================

Block 0xcf
[0xcf:0xd5]
---
Predecessors: [0x41]
Successors: [0xd6, 0xda]
---
0xcf JUMPDEST
0xd0 CALLVALUE
0xd1 ISZERO
0xd2 PUSH2 0xda
0xd5 JUMPI
---
0xcf: JUMPDEST 
0xd0: V47 = CALLVALUE
0xd1: V48 = ISZERO V47
0xd2: V49 = 0xda
0xd5: JUMPI 0xda V48
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd6
[0xd6:0xd9]
---
Predecessors: [0xcf]
Successors: []
---
0xd6 PUSH1 0x0
0xd8 DUP1
0xd9 REVERT
---
0xd6: V50 = 0x0
0xd9: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xda
[0xda:0xe1]
---
Predecessors: [0xcf]
Successors: [0x191]
---
0xda JUMPDEST
0xdb PUSH2 0xe2
0xde PUSH2 0x191
0xe1 JUMP
---
0xda: JUMPDEST 
0xdb: V51 = 0xe2
0xde: V52 = 0x191
0xe1: JUMP 0x191
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe2]
Exit stack: [V11, 0xe2]

================================

Block 0xe2
[0xe2:0xfd]
---
Predecessors: [0x191]
Successors: []
---
0xe2 JUMPDEST
0xe3 PUSH1 0x40
0xe5 MLOAD
0xe6 DUP1
0xe7 DUP3
0xe8 PUSH1 0xff
0xea AND
0xeb PUSH1 0xff
0xed AND
0xee DUP2
0xef MSTORE
0xf0 PUSH1 0x20
0xf2 ADD
0xf3 SWAP2
0xf4 POP
0xf5 POP
0xf6 PUSH1 0x40
0xf8 MLOAD
0xf9 DUP1
0xfa SWAP2
0xfb SUB
0xfc SWAP1
0xfd RETURN
---
0xe2: JUMPDEST 
0xe3: V53 = 0x40
0xe5: V54 = M[0x40]
0xe8: V55 = 0xff
0xea: V56 = AND 0xff V113
0xeb: V57 = 0xff
0xed: V58 = AND 0xff V56
0xef: M[V54] = V58
0xf0: V59 = 0x20
0xf2: V60 = ADD 0x20 V54
0xf6: V61 = 0x40
0xf8: V62 = M[0x40]
0xfb: V63 = SUB V60 V62
0xfd: RETURN V62 V63
---
Entry stack: [V11, 0xe2, V113]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xe2]

================================

Block 0xfe
[0xfe:0x116]
---
Predecessors: [0x4c]
Successors: [0x1a3]
---
0xfe JUMPDEST
0xff PUSH2 0x117
0x102 PUSH1 0x4
0x104 DUP1
0x105 DUP1
0x106 CALLDATALOAD
0x107 PUSH1 0xff
0x109 AND
0x10a SWAP1
0x10b PUSH1 0x20
0x10d ADD
0x10e SWAP1
0x10f SWAP2
0x110 SWAP1
0x111 POP
0x112 POP
0x113 PUSH2 0x1a3
0x116 JUMP
---
0xfe: JUMPDEST 
0xff: V64 = 0x117
0x102: V65 = 0x4
0x106: V66 = CALLDATALOAD 0x4
0x107: V67 = 0xff
0x109: V68 = AND 0xff V66
0x10b: V69 = 0x20
0x10d: V70 = ADD 0x20 0x4
0x113: V71 = 0x1a3
0x116: JUMP 0x1a3
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x117, V68]
Exit stack: [V11, 0x117, V68]

================================

Block 0x117
[0x117:0x118]
---
Predecessors: [0x284]
Successors: []
---
0x117 JUMPDEST
0x118 STOP
---
0x117: JUMPDEST 
0x118: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x119
[0x119:0x11f]
---
Predecessors: [0x57]
Successors: [0x120, 0x124]
---
0x119 JUMPDEST
0x11a CALLVALUE
0x11b ISZERO
0x11c PUSH2 0x124
0x11f JUMPI
---
0x119: JUMPDEST 
0x11a: V72 = CALLVALUE
0x11b: V73 = ISZERO V72
0x11c: V74 = 0x124
0x11f: JUMPI 0x124 V73
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x120
[0x120:0x123]
---
Predecessors: [0x119]
Successors: []
---
0x120 PUSH1 0x0
0x122 DUP1
0x123 REVERT
---
0x120: V75 = 0x0
0x123: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x124
[0x124:0x12b]
---
Predecessors: [0x119]
Successors: [0x287]
---
0x124 JUMPDEST
0x125 PUSH2 0x12c
0x128 PUSH2 0x287
0x12b JUMP
---
0x124: JUMPDEST 
0x125: V76 = 0x12c
0x128: V77 = 0x287
0x12b: JUMP 0x287
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x12c]
Exit stack: [V11, 0x12c]

================================

Block 0x12c
[0x12c:0x145]
---
Predecessors: [0x287]
Successors: []
---
0x12c JUMPDEST
0x12d PUSH1 0x40
0x12f MLOAD
0x130 DUP1
0x131 DUP3
0x132 ISZERO
0x133 ISZERO
0x134 ISZERO
0x135 ISZERO
0x136 DUP2
0x137 MSTORE
0x138 PUSH1 0x20
0x13a ADD
0x13b SWAP2
0x13c POP
0x13d POP
0x13e PUSH1 0x40
0x140 MLOAD
0x141 DUP1
0x142 SWAP2
0x143 SUB
0x144 SWAP1
0x145 RETURN
---
0x12c: JUMPDEST 
0x12d: V78 = 0x40
0x12f: V79 = M[0x40]
0x132: V80 = ISZERO V185
0x133: V81 = ISZERO V80
0x134: V82 = ISZERO V81
0x135: V83 = ISZERO V82
0x137: M[V79] = V83
0x138: V84 = 0x20
0x13a: V85 = ADD 0x20 V79
0x13e: V86 = 0x40
0x140: V87 = M[0x40]
0x143: V88 = SUB V85 V87
0x145: RETURN V87 V88
---
Entry stack: [V11, 0x12c, V185]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x12c]

================================

Block 0x146
[0x146:0x15e]
---
Predecessors: [0x62]
Successors: [0x29a]
---
0x146 JUMPDEST
0x147 PUSH2 0x15f
0x14a PUSH1 0x4
0x14c DUP1
0x14d DUP1
0x14e CALLDATALOAD
0x14f PUSH1 0xff
0x151 AND
0x152 SWAP1
0x153 PUSH1 0x20
0x155 ADD
0x156 SWAP1
0x157 SWAP2
0x158 SWAP1
0x159 POP
0x15a POP
0x15b PUSH2 0x29a
0x15e JUMP
---
0x146: JUMPDEST 
0x147: V89 = 0x15f
0x14a: V90 = 0x4
0x14e: V91 = CALLDATALOAD 0x4
0x14f: V92 = 0xff
0x151: V93 = AND 0xff V91
0x153: V94 = 0x20
0x155: V95 = ADD 0x20 0x4
0x15b: V96 = 0x29a
0x15e: JUMP 0x29a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x15f, V93]
Exit stack: [V11, 0x15f, V93]

================================

Block 0x15f
[0x15f:0x160]
---
Predecessors: [0x310]
Successors: []
---
0x15f JUMPDEST
0x160 STOP
---
0x15f: JUMPDEST 
0x160: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x161
[0x161:0x168]
---
Predecessors: [0x6d]
Successors: [0x313]
---
0x161 JUMPDEST
0x162 PUSH2 0x169
0x165 PUSH2 0x313
0x168 JUMP
---
0x161: JUMPDEST 
0x162: V97 = 0x169
0x165: V98 = 0x313
0x168: JUMP 0x313
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x169]
Exit stack: [V11, 0x169]

================================

Block 0x169
[0x169:0x16a]
---
Predecessors: [0x3de]
Successors: []
---
0x169 JUMPDEST
0x16a STOP
---
0x169: JUMPDEST 
0x16a: STOP 
---
Entry stack: [V11, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S0]

================================

Block 0x16b
[0x16b:0x190]
---
Predecessors: [0x85]
Successors: [0x8d]
---
0x16b JUMPDEST
0x16c PUSH1 0x0
0x16e PUSH1 0x2
0x170 SWAP1
0x171 SLOAD
0x172 SWAP1
0x173 PUSH2 0x100
0x176 EXP
0x177 SWAP1
0x178 DIV
0x179 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18e AND
0x18f DUP2
0x190 JUMP
---
0x16b: JUMPDEST 
0x16c: V99 = 0x0
0x16e: V100 = 0x2
0x171: V101 = S[0x0]
0x173: V102 = 0x100
0x176: V103 = EXP 0x100 0x2
0x178: V104 = DIV V101 0x10000
0x179: V105 = 0xffffffffffffffffffffffffffffffffffffffff
0x18e: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x190: JUMP 0x8d
---
Entry stack: [V11, 0x8d]
Stack pops: 1
Stack additions: [S0, V106]
Exit stack: [V11, 0x8d, V106]

================================

Block 0x191
[0x191:0x1a2]
---
Predecessors: [0xda]
Successors: [0xe2]
---
0x191 JUMPDEST
0x192 PUSH1 0x0
0x194 DUP1
0x195 SWAP1
0x196 SLOAD
0x197 SWAP1
0x198 PUSH2 0x100
0x19b EXP
0x19c SWAP1
0x19d DIV
0x19e PUSH1 0xff
0x1a0 AND
0x1a1 DUP2
0x1a2 JUMP
---
0x191: JUMPDEST 
0x192: V107 = 0x0
0x196: V108 = S[0x0]
0x198: V109 = 0x100
0x19b: V110 = EXP 0x100 0x0
0x19d: V111 = DIV V108 0x1
0x19e: V112 = 0xff
0x1a0: V113 = AND 0xff V111
0x1a2: JUMP 0xe2
---
Entry stack: [V11, 0xe2]
Stack pops: 1
Stack additions: [S0, V113]
Exit stack: [V11, 0xe2, V113]

================================

Block 0x1a3
[0x1a3:0x1d8]
---
Predecessors: [0xfe]
Successors: [0x1d9, 0x1dd]
---
0x1a3 JUMPDEST
0x1a4 ORIGIN
0x1a5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ba AND
0x1bb CALLER
0x1bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d1 AND
0x1d2 EQ
0x1d3 ISZERO
0x1d4 ISZERO
0x1d5 PUSH2 0x1dd
0x1d8 JUMPI
---
0x1a3: JUMPDEST 
0x1a4: V114 = ORIGIN
0x1a5: V115 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ba: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x1bb: V117 = CALLER
0x1bc: V118 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d1: V119 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x1d2: V120 = EQ V119 V116
0x1d3: V121 = ISZERO V120
0x1d4: V122 = ISZERO V121
0x1d5: V123 = 0x1dd
0x1d8: JUMPI 0x1dd V122
---
Entry stack: [V11, 0x117, V68]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x117, V68]

================================

Block 0x1d9
[0x1d9:0x1dc]
---
Predecessors: [0x1a3]
Successors: []
---
0x1d9 PUSH1 0x0
0x1db DUP1
0x1dc REVERT
---
0x1d9: V124 = 0x0
0x1dc: REVERT 0x0 0x0
---
Entry stack: [V11, 0x117, V68]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x117, V68]

================================

Block 0x1dd
[0x1dd:0x1fa]
---
Predecessors: [0x1a3]
Successors: [0x1fb, 0x206]
---
0x1dd JUMPDEST
0x1de DUP1
0x1df PUSH1 0xff
0x1e1 AND
0x1e2 PUSH1 0x0
0x1e4 DUP1
0x1e5 SWAP1
0x1e6 SLOAD
0x1e7 SWAP1
0x1e8 PUSH2 0x100
0x1eb EXP
0x1ec SWAP1
0x1ed DIV
0x1ee PUSH1 0xff
0x1f0 AND
0x1f1 PUSH1 0xff
0x1f3 AND
0x1f4 EQ
0x1f5 DUP1
0x1f6 ISZERO
0x1f7 PUSH2 0x206
0x1fa JUMPI
---
0x1dd: JUMPDEST 
0x1df: V125 = 0xff
0x1e1: V126 = AND 0xff V68
0x1e2: V127 = 0x0
0x1e6: V128 = S[0x0]
0x1e8: V129 = 0x100
0x1eb: V130 = EXP 0x100 0x0
0x1ed: V131 = DIV V128 0x1
0x1ee: V132 = 0xff
0x1f0: V133 = AND 0xff V131
0x1f1: V134 = 0xff
0x1f3: V135 = AND 0xff V133
0x1f4: V136 = EQ V135 V126
0x1f6: V137 = ISZERO V136
0x1f7: V138 = 0x206
0x1fa: JUMPI 0x206 V137
---
Entry stack: [V11, 0x117, V68]
Stack pops: 1
Stack additions: [S0, V136]
Exit stack: [V11, 0x117, V68, V136]

================================

Block 0x1fb
[0x1fb:0x205]
---
Predecessors: [0x1dd]
Successors: [0x206]
---
0x1fb POP
0x1fc PUSH7 0x38d7ea4c68000
0x204 CALLVALUE
0x205 GT
---
0x1fc: V139 = 0x38d7ea4c68000
0x204: V140 = CALLVALUE
0x205: V141 = GT V140 0x38d7ea4c68000
---
Entry stack: [V11, 0x117, V68, V136]
Stack pops: 1
Stack additions: [V141]
Exit stack: [V11, 0x117, V68, V141]

================================

Block 0x206
[0x206:0x20c]
---
Predecessors: [0x1dd, 0x1fb]
Successors: [0x20d, 0x21f]
---
0x206 JUMPDEST
0x207 DUP1
0x208 ISZERO
0x209 PUSH2 0x21f
0x20c JUMPI
---
0x206: JUMPDEST 
0x208: V142 = ISZERO S0
0x209: V143 = 0x21f
0x20c: JUMPI 0x21f V142
---
Entry stack: [V11, 0x117, V68, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x117, V68, S0]

================================

Block 0x20d
[0x20d:0x21e]
---
Predecessors: [0x206]
Successors: [0x21f]
---
0x20d POP
0x20e PUSH1 0x0
0x210 PUSH1 0x1
0x212 SWAP1
0x213 SLOAD
0x214 SWAP1
0x215 PUSH2 0x100
0x218 EXP
0x219 SWAP1
0x21a DIV
0x21b PUSH1 0xff
0x21d AND
0x21e ISZERO
---
0x20e: V144 = 0x0
0x210: V145 = 0x1
0x213: V146 = S[0x0]
0x215: V147 = 0x100
0x218: V148 = EXP 0x100 0x1
0x21a: V149 = DIV V146 0x100
0x21b: V150 = 0xff
0x21d: V151 = AND 0xff V149
0x21e: V152 = ISZERO V151
---
Entry stack: [V11, 0x117, V68, S0]
Stack pops: 1
Stack additions: [V152]
Exit stack: [V11, 0x117, V68, V152]

================================

Block 0x21f
[0x21f:0x224]
---
Predecessors: [0x206, 0x20d]
Successors: [0x225, 0x284]
---
0x21f JUMPDEST
0x220 ISZERO
0x221 PUSH2 0x284
0x224 JUMPI
---
0x21f: JUMPDEST 
0x220: V153 = ISZERO S0
0x221: V154 = 0x284
0x224: JUMPI 0x284 V153
---
Entry stack: [V11, 0x117, V68, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x117, V68]

================================

Block 0x225
[0x225:0x276]
---
Predecessors: [0x21f]
Successors: [0x277, 0x27b]
---
0x225 CALLER
0x226 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x23b AND
0x23c PUSH2 0x8fc
0x23f ADDRESS
0x240 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x255 AND
0x256 BALANCE
0x257 SWAP1
0x258 DUP2
0x259 ISZERO
0x25a MUL
0x25b SWAP1
0x25c PUSH1 0x40
0x25e MLOAD
0x25f PUSH1 0x0
0x261 PUSH1 0x40
0x263 MLOAD
0x264 DUP1
0x265 DUP4
0x266 SUB
0x267 DUP2
0x268 DUP6
0x269 DUP9
0x26a DUP9
0x26b CALL
0x26c SWAP4
0x26d POP
0x26e POP
0x26f POP
0x270 POP
0x271 ISZERO
0x272 ISZERO
0x273 PUSH2 0x27b
0x276 JUMPI
---
0x225: V155 = CALLER
0x226: V156 = 0xffffffffffffffffffffffffffffffffffffffff
0x23b: V157 = AND 0xffffffffffffffffffffffffffffffffffffffff V155
0x23c: V158 = 0x8fc
0x23f: V159 = ADDRESS
0x240: V160 = 0xffffffffffffffffffffffffffffffffffffffff
0x255: V161 = AND 0xffffffffffffffffffffffffffffffffffffffff V159
0x256: V162 = BALANCE V161
0x259: V163 = ISZERO V162
0x25a: V164 = MUL V163 0x8fc
0x25c: V165 = 0x40
0x25e: V166 = M[0x40]
0x25f: V167 = 0x0
0x261: V168 = 0x40
0x263: V169 = M[0x40]
0x266: V170 = SUB V166 V169
0x26b: V171 = CALL V164 V157 V162 V169 V170 V169 0x0
0x271: V172 = ISZERO V171
0x272: V173 = ISZERO V172
0x273: V174 = 0x27b
0x276: JUMPI 0x27b V173
---
Entry stack: [V11, 0x117, V68]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x117, V68]

================================

Block 0x277
[0x277:0x27a]
---
Predecessors: [0x225]
Successors: []
---
0x277 PUSH1 0x0
0x279 DUP1
0x27a REVERT
---
0x277: V175 = 0x0
0x27a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x117, V68]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x117, V68]

================================

Block 0x27b
[0x27b:0x282]
---
Predecessors: [0x225]
Successors: [0x3e0]
---
0x27b JUMPDEST
0x27c PUSH2 0x283
0x27f PUSH2 0x3e0
0x282 JUMP
---
0x27b: JUMPDEST 
0x27c: V176 = 0x283
0x27f: V177 = 0x3e0
0x282: JUMP 0x3e0
---
Entry stack: [V11, 0x117, V68]
Stack pops: 0
Stack additions: [0x283]
Exit stack: [V11, 0x117, V68, 0x283]

================================

Block 0x283
[0x283:0x283]
---
Predecessors: [0x3e0]
Successors: [0x284]
---
0x283 JUMPDEST
---
0x283: JUMPDEST 
---
Entry stack: [V11, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S1, S0]

================================

Block 0x284
[0x284:0x286]
---
Predecessors: [0x21f, 0x283]
Successors: [0x117]
---
0x284 JUMPDEST
0x285 POP
0x286 JUMP
---
0x284: JUMPDEST 
0x286: JUMP S1
---
Entry stack: [V11, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x287
[0x287:0x299]
---
Predecessors: [0x124]
Successors: [0x12c]
---
0x287 JUMPDEST
0x288 PUSH1 0x0
0x28a PUSH1 0x1
0x28c SWAP1
0x28d SLOAD
0x28e SWAP1
0x28f PUSH2 0x100
0x292 EXP
0x293 SWAP1
0x294 DIV
0x295 PUSH1 0xff
0x297 AND
0x298 DUP2
0x299 JUMP
---
0x287: JUMPDEST 
0x288: V178 = 0x0
0x28a: V179 = 0x1
0x28d: V180 = S[0x0]
0x28f: V181 = 0x100
0x292: V182 = EXP 0x100 0x1
0x294: V183 = DIV V180 0x100
0x295: V184 = 0xff
0x297: V185 = AND 0xff V183
0x299: JUMP 0x12c
---
Entry stack: [V11, 0x12c]
Stack pops: 1
Stack additions: [S0, V185]
Exit stack: [V11, 0x12c, V185]

================================

Block 0x29a
[0x29a:0x2b4]
---
Predecessors: [0x146]
Successors: [0x2b5, 0x310]
---
0x29a JUMPDEST
0x29b PUSH1 0x0
0x29d DUP1
0x29e PUSH1 0x0
0x2a0 SWAP1
0x2a1 SLOAD
0x2a2 SWAP1
0x2a3 PUSH2 0x100
0x2a6 EXP
0x2a7 SWAP1
0x2a8 DIV
0x2a9 PUSH1 0xff
0x2ab AND
0x2ac PUSH1 0xff
0x2ae AND
0x2af EQ
0x2b0 ISZERO
0x2b1 PUSH2 0x310
0x2b4 JUMPI
---
0x29a: JUMPDEST 
0x29b: V186 = 0x0
0x29e: V187 = 0x0
0x2a1: V188 = S[0x0]
0x2a3: V189 = 0x100
0x2a6: V190 = EXP 0x100 0x0
0x2a8: V191 = DIV V188 0x1
0x2a9: V192 = 0xff
0x2ab: V193 = AND 0xff V191
0x2ac: V194 = 0xff
0x2ae: V195 = AND 0xff V193
0x2af: V196 = EQ V195 0x0
0x2b0: V197 = ISZERO V196
0x2b1: V198 = 0x310
0x2b4: JUMPI 0x310 V197
---
Entry stack: [V11, 0x15f, V93]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x15f, V93]

================================

Block 0x2b5
[0x2b5:0x30f]
---
Predecessors: [0x29a]
Successors: [0x310]
---
0x2b5 DUP1
0x2b6 PUSH1 0x0
0x2b8 DUP1
0x2b9 PUSH2 0x100
0x2bc EXP
0x2bd DUP2
0x2be SLOAD
0x2bf DUP2
0x2c0 PUSH1 0xff
0x2c2 MUL
0x2c3 NOT
0x2c4 AND
0x2c5 SWAP1
0x2c6 DUP4
0x2c7 PUSH1 0xff
0x2c9 AND
0x2ca MUL
0x2cb OR
0x2cc SWAP1
0x2cd SSTORE
0x2ce POP
0x2cf CALLER
0x2d0 PUSH1 0x0
0x2d2 PUSH1 0x2
0x2d4 PUSH2 0x100
0x2d7 EXP
0x2d8 DUP2
0x2d9 SLOAD
0x2da DUP2
0x2db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f0 MUL
0x2f1 NOT
0x2f2 AND
0x2f3 SWAP1
0x2f4 DUP4
0x2f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x30a AND
0x30b MUL
0x30c OR
0x30d SWAP1
0x30e SSTORE
0x30f POP
---
0x2b6: V199 = 0x0
0x2b9: V200 = 0x100
0x2bc: V201 = EXP 0x100 0x0
0x2be: V202 = S[0x0]
0x2c0: V203 = 0xff
0x2c2: V204 = MUL 0xff 0x1
0x2c3: V205 = NOT 0xff
0x2c4: V206 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V202
0x2c7: V207 = 0xff
0x2c9: V208 = AND 0xff V93
0x2ca: V209 = MUL V208 0x1
0x2cb: V210 = OR V209 V206
0x2cd: S[0x0] = V210
0x2cf: V211 = CALLER
0x2d0: V212 = 0x0
0x2d2: V213 = 0x2
0x2d4: V214 = 0x100
0x2d7: V215 = EXP 0x100 0x2
0x2d9: V216 = S[0x0]
0x2db: V217 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f0: V218 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x10000
0x2f1: V219 = NOT 0xffffffffffffffffffffffffffffffffffffffff0000
0x2f2: V220 = AND 0xffffffffffffffffffff0000000000000000000000000000000000000000ffff V216
0x2f5: V221 = 0xffffffffffffffffffffffffffffffffffffffff
0x30a: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff V211
0x30b: V223 = MUL V222 0x10000
0x30c: V224 = OR V223 V220
0x30e: S[0x0] = V224
---
Entry stack: [V11, 0x15f, V93]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x15f, V93]

================================

Block 0x310
[0x310:0x312]
---
Predecessors: [0x29a, 0x2b5]
Successors: [0x15f]
---
0x310 JUMPDEST
0x311 POP
0x312 JUMP
---
0x310: JUMPDEST 
0x312: JUMP 0x15f
---
Entry stack: [V11, 0x15f, V93]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x313
[0x313:0x36a]
---
Predecessors: [0x161]
Successors: [0x36b, 0x36f]
---
0x313 JUMPDEST
0x314 PUSH1 0x0
0x316 PUSH1 0x2
0x318 SWAP1
0x319 SLOAD
0x31a SWAP1
0x31b PUSH2 0x100
0x31e EXP
0x31f SWAP1
0x320 DIV
0x321 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x336 AND
0x337 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x34c AND
0x34d CALLER
0x34e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x363 AND
0x364 EQ
0x365 ISZERO
0x366 ISZERO
0x367 PUSH2 0x36f
0x36a JUMPI
---
0x313: JUMPDEST 
0x314: V225 = 0x0
0x316: V226 = 0x2
0x319: V227 = S[0x0]
0x31b: V228 = 0x100
0x31e: V229 = EXP 0x100 0x2
0x320: V230 = DIV V227 0x10000
0x321: V231 = 0xffffffffffffffffffffffffffffffffffffffff
0x336: V232 = AND 0xffffffffffffffffffffffffffffffffffffffff V230
0x337: V233 = 0xffffffffffffffffffffffffffffffffffffffff
0x34c: V234 = AND 0xffffffffffffffffffffffffffffffffffffffff V232
0x34d: V235 = CALLER
0x34e: V236 = 0xffffffffffffffffffffffffffffffffffffffff
0x363: V237 = AND 0xffffffffffffffffffffffffffffffffffffffff V235
0x364: V238 = EQ V237 V234
0x365: V239 = ISZERO V238
0x366: V240 = ISZERO V239
0x367: V241 = 0x36f
0x36a: JUMPI 0x36f V240
---
Entry stack: [V11, 0x169]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x169]

================================

Block 0x36b
[0x36b:0x36e]
---
Predecessors: [0x313]
Successors: []
---
0x36b PUSH1 0x0
0x36d DUP1
0x36e REVERT
---
0x36b: V242 = 0x0
0x36e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x169]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x169]

================================

Block 0x36f
[0x36f:0x376]
---
Predecessors: [0x313]
Successors: [0x3e0]
---
0x36f JUMPDEST
0x370 PUSH2 0x377
0x373 PUSH2 0x3e0
0x376 JUMP
---
0x36f: JUMPDEST 
0x370: V243 = 0x377
0x373: V244 = 0x3e0
0x376: JUMP 0x3e0
---
Entry stack: [V11, 0x169]
Stack pops: 0
Stack additions: [0x377]
Exit stack: [V11, 0x169, 0x377]

================================

Block 0x377
[0x377:0x386]
---
Predecessors: [0x3e0]
Successors: [0x387, 0x3de]
---
0x377 JUMPDEST
0x378 PUSH7 0x38d7ea4c68000
0x380 CALLVALUE
0x381 GT
0x382 ISZERO
0x383 PUSH2 0x3de
0x386 JUMPI
---
0x377: JUMPDEST 
0x378: V245 = 0x38d7ea4c68000
0x380: V246 = CALLVALUE
0x381: V247 = GT V246 0x38d7ea4c68000
0x382: V248 = ISZERO V247
0x383: V249 = 0x3de
0x386: JUMPI 0x3de V248
---
Entry stack: [V11, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S1, S0]

================================

Block 0x387
[0x387:0x3d8]
---
Predecessors: [0x377]
Successors: [0x3d9, 0x3dd]
---
0x387 CALLER
0x388 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x39d AND
0x39e PUSH2 0x8fc
0x3a1 ADDRESS
0x3a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b7 AND
0x3b8 BALANCE
0x3b9 SWAP1
0x3ba DUP2
0x3bb ISZERO
0x3bc MUL
0x3bd SWAP1
0x3be PUSH1 0x40
0x3c0 MLOAD
0x3c1 PUSH1 0x0
0x3c3 PUSH1 0x40
0x3c5 MLOAD
0x3c6 DUP1
0x3c7 DUP4
0x3c8 SUB
0x3c9 DUP2
0x3ca DUP6
0x3cb DUP9
0x3cc DUP9
0x3cd CALL
0x3ce SWAP4
0x3cf POP
0x3d0 POP
0x3d1 POP
0x3d2 POP
0x3d3 ISZERO
0x3d4 ISZERO
0x3d5 PUSH2 0x3dd
0x3d8 JUMPI
---
0x387: V250 = CALLER
0x388: V251 = 0xffffffffffffffffffffffffffffffffffffffff
0x39d: V252 = AND 0xffffffffffffffffffffffffffffffffffffffff V250
0x39e: V253 = 0x8fc
0x3a1: V254 = ADDRESS
0x3a2: V255 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b7: V256 = AND 0xffffffffffffffffffffffffffffffffffffffff V254
0x3b8: V257 = BALANCE V256
0x3bb: V258 = ISZERO V257
0x3bc: V259 = MUL V258 0x8fc
0x3be: V260 = 0x40
0x3c0: V261 = M[0x40]
0x3c1: V262 = 0x0
0x3c3: V263 = 0x40
0x3c5: V264 = M[0x40]
0x3c8: V265 = SUB V261 V264
0x3cd: V266 = CALL V259 V252 V257 V264 V265 V264 0x0
0x3d3: V267 = ISZERO V266
0x3d4: V268 = ISZERO V267
0x3d5: V269 = 0x3dd
0x3d8: JUMPI 0x3dd V268
---
Entry stack: [V11, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S1, S0]

================================

Block 0x3d9
[0x3d9:0x3dc]
---
Predecessors: [0x387]
Successors: []
---
0x3d9 PUSH1 0x0
0x3db DUP1
0x3dc REVERT
---
0x3d9: V270 = 0x0
0x3dc: REVERT 0x0 0x0
---
Entry stack: [V11, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S1, S0]

================================

Block 0x3dd
[0x3dd:0x3dd]
---
Predecessors: [0x387]
Successors: [0x3de]
---
0x3dd JUMPDEST
---
0x3dd: JUMPDEST 
---
Entry stack: [V11, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S1, S0]

================================

Block 0x3de
[0x3de:0x3df]
---
Predecessors: [0x377, 0x3dd]
Successors: [0x169]
---
0x3de JUMPDEST
0x3df JUMP
---
0x3de: JUMPDEST 
0x3df: JUMP S0
---
Entry stack: [V11, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0x3e0
[0x3e0:0x3fc]
---
Predecessors: [0x27b, 0x36f]
Successors: [0x283, 0x377]
---
0x3e0 JUMPDEST
0x3e1 PUSH1 0x1
0x3e3 PUSH1 0x0
0x3e5 PUSH1 0x1
0x3e7 PUSH2 0x100
0x3ea EXP
0x3eb DUP2
0x3ec SLOAD
0x3ed DUP2
0x3ee PUSH1 0xff
0x3f0 MUL
0x3f1 NOT
0x3f2 AND
0x3f3 SWAP1
0x3f4 DUP4
0x3f5 ISZERO
0x3f6 ISZERO
0x3f7 MUL
0x3f8 OR
0x3f9 SWAP1
0x3fa SSTORE
0x3fb POP
0x3fc JUMP
---
0x3e0: JUMPDEST 
0x3e1: V271 = 0x1
0x3e3: V272 = 0x0
0x3e5: V273 = 0x1
0x3e7: V274 = 0x100
0x3ea: V275 = EXP 0x100 0x1
0x3ec: V276 = S[0x0]
0x3ee: V277 = 0xff
0x3f0: V278 = MUL 0xff 0x100
0x3f1: V279 = NOT 0xff00
0x3f2: V280 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V276
0x3f5: V281 = ISZERO 0x1
0x3f6: V282 = ISZERO 0x0
0x3f7: V283 = MUL 0x1 0x100
0x3f8: V284 = OR 0x100 V280
0x3fa: S[0x0] = V284
0x3fc: JUMP {0x283, 0x377}
---
Entry stack: [V11, S2, S1, {0x283, 0x377}]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S2, S1]

================================

Block 0x3fd
[0x3fd:0x428]
---
Predecessors: []
Successors: []
---
0x3fd STOP
0x3fe LOG1
0x3ff PUSH6 0x627a7a723058
0x406 SHA3
0x407 MISSING 0x4e
0x408 MISSING 0xc4
0x409 SWAP10
0x40a MISSING 0xdf
0x40b PC
0x40c MISSING 0xcd
0x40d EXTCODEHASH
0x40e MISSING 0xd3
0x40f PUSH7 0x81faf94aa0a927
0x417 DUP15
0x418 LOG1
0x419 NOT
0x41a SIGNEXTEND
0x41b MSTORE8
0x41c MISSING 0xb7
0x41d MISSING 0xe3
0x41e PUSH2 0x4cde
0x421 LOG1
0x422 MISSING 0xcf
0x423 PC
0x424 SWAP13
0x425 MISSING 0xc
0x426 MISSING 0xd9
0x427 STOP
0x428 MISSING 0x29
---
0x3fd: STOP 
0x3fe: LOG S0 S1 S2
0x3ff: V285 = 0x627a7a723058
0x406: V286 = SHA3 0x627a7a723058 S3
0x407: MISSING 0x4e
0x408: MISSING 0xc4
0x40a: MISSING 0xdf
0x40b: V287 = PC
0x40c: MISSING 0xcd
0x40d: V288 = EXTCODEHASH S0
0x40e: MISSING 0xd3
0x40f: V289 = 0x81faf94aa0a927
0x418: LOG S13 0x81faf94aa0a927 S0
0x419: V290 = NOT S1
0x41a: V291 = SIGNEXTEND V290 S2
0x41b: M8[V291] = S3
0x41c: MISSING 0xb7
0x41d: MISSING 0xe3
0x41e: V292 = 0x4cde
0x421: LOG 0x4cde S0 S1
0x422: MISSING 0xcf
0x423: V293 = PC
0x425: MISSING 0xc
0x426: MISSING 0xd9
0x427: STOP 
0x428: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V286, S10, S1, S2, S3, S4, S5, S6, S7, S8, S9, S0, V287, V288, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S12, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, V293]
Exit stack: []

================================

Function 0:
Public function signature: 0x3999795
Entry block: 0x7a
Exit block: 0x8d
Body: 0x7a, 0x81, 0x85, 0x8d, 0x16b

Function 1:
Public function signature: 0x65372147
Entry block: 0xcf
Exit block: 0xe2
Body: 0xcf, 0xd6, 0xda, 0xe2, 0x191

Function 2:
Public function signature: 0xb2c3609b
Entry block: 0xfe
Exit block: 0x117
Body: 0xfe, 0x117, 0x1a3, 0x1d9, 0x1dd, 0x1fb, 0x206, 0x20d, 0x21f, 0x225, 0x277, 0x27b, 0x283, 0x284

Function 3:
Public function signature: 0xbef4876b
Entry block: 0x119
Exit block: 0x12c
Body: 0x119, 0x120, 0x124, 0x12c, 0x287

Function 4:
Public function signature: 0xf1b6315e
Entry block: 0x146
Exit block: 0x15f
Body: 0x146, 0x15f, 0x29a, 0x2b5, 0x310

Function 5:
Public function signature: 0xf50ab247
Entry block: 0x161
Exit block: 0x169
Body: 0x161, 0x169, 0x313, 0x36b, 0x36f, 0x377, 0x387, 0x3d9, 0x3dd, 0x3de

Function 6:
Public fallback function
Entry block: 0x78
Exit block: 0x78
Body: 0x78

