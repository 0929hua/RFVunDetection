Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x56]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x56
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x56
0xc: JUMPI 0x56 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x5b]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x396ed0ab
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x5b
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x396ed0ab
0x3b: V13 = EQ V11 0x396ed0ab
0x3c: V14 = 0x5b
0x3f: JUMPI 0x5b V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x65]
---
0x40 DUP1
0x41 PUSH4 0xd89135cd
0x46 EQ
0x47 PUSH2 0x65
0x4a JUMPI
---
0x41: V15 = 0xd89135cd
0x46: V16 = EQ 0xd89135cd V11
0x47: V17 = 0x65
0x4a: JUMPI 0x65 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x8d]
---
0x4b DUP1
0x4c PUSH4 0xf24e4a15
0x51 EQ
0x52 PUSH2 0x8d
0x55 JUMPI
---
0x4c: V18 = 0xf24e4a15
0x51: V19 = EQ 0xf24e4a15 V11
0x52: V20 = 0x8d
0x55: JUMPI 0x8d V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x5a]
---
Predecessors: [0x0, 0x4b]
Successors: []
---
0x56 JUMPDEST
0x57 PUSH1 0x0
0x59 DUP1
0x5a REVERT
---
0x56: JUMPDEST 
0x57: V21 = 0x0
0x5a: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5b
[0x5b:0x62]
---
Predecessors: [0xd]
Successors: [0xa2]
---
0x5b JUMPDEST
0x5c PUSH2 0x63
0x5f PUSH2 0xa2
0x62 JUMP
---
0x5b: JUMPDEST 
0x5c: V22 = 0x63
0x5f: V23 = 0xa2
0x62: JUMP 0xa2
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x63]
Exit stack: [V11, 0x63]

================================

Block 0x63
[0x63:0x64]
---
Predecessors: [0xa2, 0x11c]
Successors: []
---
0x63 JUMPDEST
0x64 STOP
---
0x63: JUMPDEST 
0x64: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x65
[0x65:0x6c]
---
Predecessors: [0x40]
Successors: [0x6d, 0x71]
---
0x65 JUMPDEST
0x66 CALLVALUE
0x67 DUP1
0x68 ISZERO
0x69 PUSH2 0x71
0x6c JUMPI
---
0x65: JUMPDEST 
0x66: V24 = CALLVALUE
0x68: V25 = ISZERO V24
0x69: V26 = 0x71
0x6c: JUMPI 0x71 V25
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V24]
Exit stack: [V11, V24]

================================

Block 0x6d
[0x6d:0x70]
---
Predecessors: [0x65]
Successors: []
---
0x6d PUSH1 0x0
0x6f DUP1
0x70 REVERT
---
0x6d: V27 = 0x0
0x70: REVERT 0x0 0x0
---
Entry stack: [V11, V24]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V24]

================================

Block 0x71
[0x71:0x79]
---
Predecessors: [0x65]
Successors: [0xac]
---
0x71 JUMPDEST
0x72 POP
0x73 PUSH2 0x7a
0x76 PUSH2 0xac
0x79 JUMP
---
0x71: JUMPDEST 
0x73: V28 = 0x7a
0x76: V29 = 0xac
0x79: JUMP 0xac
---
Entry stack: [V11, V24]
Stack pops: 1
Stack additions: [0x7a]
Exit stack: [V11, 0x7a]

================================

Block 0x7a
[0x7a:0x8c]
---
Predecessors: [0xac]
Successors: []
---
0x7a JUMPDEST
0x7b PUSH1 0x40
0x7d DUP1
0x7e MLOAD
0x7f SWAP2
0x80 DUP3
0x81 MSTORE
0x82 MLOAD
0x83 PUSH1 0x20
0x85 SWAP1
0x86 SWAP2
0x87 ADD
0x88 DUP2
0x89 SWAP1
0x8a SUB
0x8b SWAP1
0x8c RETURN
---
0x7a: JUMPDEST 
0x7b: V30 = 0x40
0x7e: V31 = M[0x40]
0x81: M[V31] = V47
0x82: V32 = M[0x40]
0x83: V33 = 0x20
0x87: V34 = ADD V31 0x20
0x8a: V35 = SUB V34 V32
0x8c: RETURN V32 V35
---
Entry stack: [V11, 0x7a, V47]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x7a]

================================

Block 0x8d
[0x8d:0x94]
---
Predecessors: [0x4b]
Successors: [0x95, 0x99]
---
0x8d JUMPDEST
0x8e CALLVALUE
0x8f DUP1
0x90 ISZERO
0x91 PUSH2 0x99
0x94 JUMPI
---
0x8d: JUMPDEST 
0x8e: V36 = CALLVALUE
0x90: V37 = ISZERO V36
0x91: V38 = 0x99
0x94: JUMPI 0x99 V37
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V36]
Exit stack: [V11, V36]

================================

Block 0x95
[0x95:0x98]
---
Predecessors: [0x8d]
Successors: []
---
0x95 PUSH1 0x0
0x97 DUP1
0x98 REVERT
---
0x95: V39 = 0x0
0x98: REVERT 0x0 0x0
---
Entry stack: [V11, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V36]

================================

Block 0x99
[0x99:0xa1]
---
Predecessors: [0x8d]
Successors: [0xb2]
---
0x99 JUMPDEST
0x9a POP
0x9b PUSH2 0x63
0x9e PUSH2 0xb2
0xa1 JUMP
---
0x99: JUMPDEST 
0x9b: V40 = 0x63
0x9e: V41 = 0xb2
0xa1: JUMP 0xb2
---
Entry stack: [V11, V36]
Stack pops: 1
Stack additions: [0x63]
Exit stack: [V11, 0x63]

================================

Block 0xa2
[0xa2:0xab]
---
Predecessors: [0x5b]
Successors: [0x63]
---
0xa2 JUMPDEST
0xa3 PUSH1 0x0
0xa5 DUP1
0xa6 SLOAD
0xa7 CALLVALUE
0xa8 ADD
0xa9 SWAP1
0xaa SSTORE
0xab JUMP
---
0xa2: JUMPDEST 
0xa3: V42 = 0x0
0xa6: V43 = S[0x0]
0xa7: V44 = CALLVALUE
0xa8: V45 = ADD V44 V43
0xaa: S[0x0] = V45
0xab: JUMP 0x63
---
Entry stack: [V11, 0x63]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xac
[0xac:0xb1]
---
Predecessors: [0x71]
Successors: [0x7a]
---
0xac JUMPDEST
0xad PUSH1 0x0
0xaf SLOAD
0xb0 DUP2
0xb1 JUMP
---
0xac: JUMPDEST 
0xad: V46 = 0x0
0xaf: V47 = S[0x0]
0xb1: JUMP 0x7a
---
Entry stack: [V11, 0x7a]
Stack pops: 1
Stack additions: [S0, V47]
Exit stack: [V11, 0x7a, V47]

================================

Block 0xb2
[0xb2:0xee]
---
Predecessors: [0x99]
Successors: [0xef, 0xf0]
---
0xb2 JUMPDEST
0xb3 CALLER
0xb4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc9 AND
0xca PUSH2 0x8fc
0xcd PUSH2 0x3e8
0xd0 ADDRESS
0xd1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe6 AND
0xe7 BALANCE
0xe8 DUP2
0xe9 ISZERO
0xea ISZERO
0xeb PUSH2 0xf0
0xee JUMPI
---
0xb2: JUMPDEST 
0xb3: V48 = CALLER
0xb4: V49 = 0xffffffffffffffffffffffffffffffffffffffff
0xc9: V50 = AND 0xffffffffffffffffffffffffffffffffffffffff V48
0xca: V51 = 0x8fc
0xcd: V52 = 0x3e8
0xd0: V53 = ADDRESS
0xd1: V54 = 0xffffffffffffffffffffffffffffffffffffffff
0xe6: V55 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0xe7: V56 = BALANCE V55
0xe9: V57 = ISZERO 0x3e8
0xea: V58 = ISZERO 0x0
0xeb: V59 = 0xf0
0xee: JUMPI 0xf0 0x1
---
Entry stack: [V11, 0x63]
Stack pops: 0
Stack additions: [V50, 0x8fc, 0x3e8, V56]
Exit stack: [V11, 0x63, V50, 0x8fc, 0x3e8, V56]

================================

Block 0xef
[0xef:0xef]
---
Predecessors: [0xb2]
Successors: []
---
0xef INVALID
---
0xef: INVALID 
---
Entry stack: [V11, 0x63, V50, 0x8fc, 0x3e8, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x63, V50, 0x8fc, 0x3e8, V56]

================================

Block 0xf0
[0xf0:0x112]
---
Predecessors: [0xb2]
Successors: [0x113, 0x11c]
---
0xf0 JUMPDEST
0xf1 DIV
0xf2 SWAP1
0xf3 DUP2
0xf4 ISZERO
0xf5 MUL
0xf6 SWAP1
0xf7 PUSH1 0x40
0xf9 MLOAD
0xfa PUSH1 0x0
0xfc PUSH1 0x40
0xfe MLOAD
0xff DUP1
0x100 DUP4
0x101 SUB
0x102 DUP2
0x103 DUP6
0x104 DUP9
0x105 DUP9
0x106 CALL
0x107 SWAP4
0x108 POP
0x109 POP
0x10a POP
0x10b POP
0x10c ISZERO
0x10d DUP1
0x10e ISZERO
0x10f PUSH2 0x11c
0x112 JUMPI
---
0xf0: JUMPDEST 
0xf1: V60 = DIV V56 0x3e8
0xf4: V61 = ISZERO V60
0xf5: V62 = MUL V61 0x8fc
0xf7: V63 = 0x40
0xf9: V64 = M[0x40]
0xfa: V65 = 0x0
0xfc: V66 = 0x40
0xfe: V67 = M[0x40]
0x101: V68 = SUB V64 V67
0x106: V69 = CALL V62 V50 V60 V67 V68 V67 0x0
0x10c: V70 = ISZERO V69
0x10e: V71 = ISZERO V70
0x10f: V72 = 0x11c
0x112: JUMPI 0x11c V71
---
Entry stack: [V11, 0x63, V50, 0x8fc, 0x3e8, V56]
Stack pops: 4
Stack additions: [V70]
Exit stack: [V11, 0x63, V70]

================================

Block 0x113
[0x113:0x11b]
---
Predecessors: [0xf0]
Successors: []
---
0x113 RETURNDATASIZE
0x114 PUSH1 0x0
0x116 DUP1
0x117 RETURNDATACOPY
0x118 RETURNDATASIZE
0x119 PUSH1 0x0
0x11b REVERT
---
0x113: V73 = RETURNDATASIZE
0x114: V74 = 0x0
0x117: RETURNDATACOPY 0x0 0x0 V73
0x118: V75 = RETURNDATASIZE
0x119: V76 = 0x0
0x11b: REVERT 0x0 V75
---
Entry stack: [V11, 0x63, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x63, V70]

================================

Block 0x11c
[0x11c:0x12c]
---
Predecessors: [0xf0]
Successors: [0x63]
---
0x11c JUMPDEST
0x11d POP
0x11e PUSH2 0x30ff
0x121 PUSH1 0x0
0x123 MSTORE
0x124 PUSH1 0x2
0x126 PUSH1 0x1e
0x128 ADDRESS
0x129 BALANCE
0x12a CREATE
0x12b POP
0x12c JUMP
---
0x11c: JUMPDEST 
0x11e: V77 = 0x30ff
0x121: V78 = 0x0
0x123: M[0x0] = 0x30ff
0x124: V79 = 0x2
0x126: V80 = 0x1e
0x128: V81 = ADDRESS
0x129: V82 = BALANCE V81
0x12a: V83 = CREATE V82 0x1e 0x2
0x12c: JUMP 0x63
---
Entry stack: [V11, 0x63, V70]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x12d
[0x12d:0x158]
---
Predecessors: []
Successors: []
---
0x12d STOP
0x12e LOG1
0x12f PUSH6 0x627a7a723058
0x136 SHA3
0x137 LT
0x138 MISSING 0x28
0x139 MISSING 0xd6
0x13a MISSING 0xda
0x13b EXTCODECOPY
0x13c MISSING 0xd4
0x13d ORIGIN
0x13e MISSING 0x4d
0x13f MISSING 0xab
0x140 CREATE2
0x141 DUP14
0x142 MISSING 0xdf
0x143 MISSING 0xdb
0x144 MISSING 0xc0
0x145 MISSING 0x4b
0x146 MISSING 0x2b
0x147 SHA3
0x148 PUSH4 0x90f8585a
0x14d MISSING 0x4e
0x14e DUP5
0x14f CODECOPY
0x150 OR
0x151 MISSING 0xdc
0x152 SWAP4
0x153 GAS
0x154 MISSING 0x2b
0x155 EQ
0x156 MISSING 0xb0
0x157 STOP
0x158 MISSING 0x29
---
0x12d: STOP 
0x12e: LOG S0 S1 S2
0x12f: V84 = 0x627a7a723058
0x136: V85 = SHA3 0x627a7a723058 S3
0x137: V86 = LT V85 S4
0x138: MISSING 0x28
0x139: MISSING 0xd6
0x13a: MISSING 0xda
0x13b: EXTCODECOPY S0 S1 S2 S3
0x13c: MISSING 0xd4
0x13d: V87 = ORIGIN
0x13e: MISSING 0x4d
0x13f: MISSING 0xab
0x140: V88 = CREATE2 S0 S1 S2 S3
0x142: MISSING 0xdf
0x143: MISSING 0xdb
0x144: MISSING 0xc0
0x145: MISSING 0x4b
0x146: MISSING 0x2b
0x147: V89 = SHA3 S0 S1
0x148: V90 = 0x90f8585a
0x14d: MISSING 0x4e
0x14f: CODECOPY S4 S0 S1
0x150: V91 = OR S2 S3
0x151: MISSING 0xdc
0x153: V92 = GAS
0x154: MISSING 0x2b
0x155: V93 = EQ S0 S1
0x156: MISSING 0xb0
0x157: STOP 
0x158: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V86, V87, S16, V88, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, 0x90f8585a, V89, V91, S4, V92, S4, S1, S2, S3, S0, V93]
Exit stack: []

================================

Function 0:
Public function signature: 0x396ed0ab
Entry block: 0x5b
Exit block: 0x63
Body: 0x5b, 0x63, 0xa2

Function 1:
Public function signature: 0xd89135cd
Entry block: 0x65
Exit block: 0x7a
Body: 0x65, 0x6d, 0x71, 0x7a, 0xac

Function 2:
Public function signature: 0xf24e4a15
Entry block: 0x8d
Exit block: 0x63
Body: 0x63, 0x8d, 0x95, 0x99, 0xb2, 0xef, 0xf0, 0x113, 0x11c

Function 3:
Public fallback function
Entry block: 0x56
Exit block: 0x56
Body: 0x56

