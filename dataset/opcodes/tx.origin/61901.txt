Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x40]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x40
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x40
0xc: JUMPI 0x40 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x45]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0xe7ffdebd
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x45
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0xe7ffdebd
0x3b: V13 = EQ V11 0xe7ffdebd
0x3c: V14 = 0x45
0x3f: JUMPI 0x45 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x44]
---
Predecessors: [0x0, 0xd]
Successors: []
---
0x40 JUMPDEST
0x41 PUSH1 0x0
0x43 DUP1
0x44 REVERT
---
0x40: JUMPDEST 
0x41: V15 = 0x0
0x44: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x45
[0x45:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x50]
---
0x45 JUMPDEST
0x46 CALLVALUE
0x47 ISZERO
0x48 PUSH2 0x50
0x4b JUMPI
---
0x45: JUMPDEST 
0x46: V16 = CALLVALUE
0x47: V17 = ISZERO V16
0x48: V18 = 0x50
0x4b: JUMPI 0x50 V17
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x4f]
---
Predecessors: [0x45]
Successors: []
---
0x4c PUSH1 0x0
0x4e DUP1
0x4f REVERT
---
0x4c: V19 = 0x0
0x4f: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x50
[0x50:0x76]
---
Predecessors: [0x45]
Successors: [0x79]
---
0x50 JUMPDEST
0x51 PUSH2 0x77
0x54 PUSH1 0xff
0x56 PUSH1 0x4
0x58 CALLDATALOAD
0x59 AND
0x5a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f PUSH1 0x24
0x71 CALLDATALOAD
0x72 AND
0x73 PUSH2 0x79
0x76 JUMP
---
0x50: JUMPDEST 
0x51: V20 = 0x77
0x54: V21 = 0xff
0x56: V22 = 0x4
0x58: V23 = CALLDATALOAD 0x4
0x59: V24 = AND V23 0xff
0x5a: V25 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f: V26 = 0x24
0x71: V27 = CALLDATALOAD 0x24
0x72: V28 = AND V27 0xffffffffffffffffffffffffffffffffffffffff
0x73: V29 = 0x79
0x76: JUMP 0x79
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77, V24, V28]
Exit stack: [V11, 0x77, V24, V28]

================================

Block 0x77
[0x77:0x78]
---
Predecessors: [0x125]
Successors: []
---
0x77 JUMPDEST
0x78 STOP
---
0x77: JUMPDEST 
0x78: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x79
[0x79:0x7b]
---
Predecessors: [0x50]
Successors: [0x7c]
---
0x79 JUMPDEST
0x7a PUSH1 0x0
---
0x79: JUMPDEST 
0x7a: V30 = 0x0
---
Entry stack: [V11, 0x77, V24, V28]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x77, V24, V28, 0x0]

================================

Block 0x7c
[0x7c:0x88]
---
Predecessors: [0x79, 0xc4]
Successors: [0x89, 0x125]
---
0x7c JUMPDEST
0x7d PUSH1 0x0
0x7f DUP4
0x80 PUSH1 0xff
0x82 AND
0x83 GT
0x84 ISZERO
0x85 PUSH2 0x125
0x88 JUMPI
---
0x7c: JUMPDEST 
0x7d: V31 = 0x0
0x80: V32 = 0xff
0x82: V33 = AND 0xff S2
0x83: V34 = GT V33 0x0
0x84: V35 = ISZERO V34
0x85: V36 = 0x125
0x88: JUMPI 0x125 V35
---
Entry stack: [V11, 0x77, S2, V28, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x77, S2, V28, S0]

================================

Block 0x89
[0x89:0x90]
---
Predecessors: [0x7c]
Successors: [0x12a]
---
0x89 DUP2
0x8a PUSH2 0x91
0x8d PUSH2 0x12a
0x90 JUMP
---
0x8a: V37 = 0x91
0x8d: V38 = 0x12a
0x90: JUMP 0x12a
---
Entry stack: [V11, 0x77, S2, V28, S0]
Stack pops: 2
Stack additions: [S1, S0, S1, 0x91]
Exit stack: [V11, 0x77, S2, V28, S0, V28, 0x91]

================================

Block 0x91
[0x91:0xbf]
---
Predecessors: [0x12a]
Successors: [0xc0, 0xc4]
---
0x91 JUMPDEST
0x92 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa7 SWAP1
0xa8 SWAP2
0xa9 AND
0xaa DUP2
0xab MSTORE
0xac PUSH1 0x20
0xae ADD
0xaf PUSH1 0x40
0xb1 MLOAD
0xb2 DUP1
0xb3 SWAP2
0xb4 SUB
0xb5 SWAP1
0xb6 PUSH1 0x0
0xb8 CREATE
0xb9 DUP1
0xba ISZERO
0xbb ISZERO
0xbc PUSH2 0xc4
0xbf JUMPI
---
0x91: JUMPDEST 
0x92: V39 = 0xffffffffffffffffffffffffffffffffffffffff
0xa9: V40 = AND V28 0xffffffffffffffffffffffffffffffffffffffff
0xab: M[V73] = V40
0xac: V41 = 0x20
0xae: V42 = ADD 0x20 V73
0xaf: V43 = 0x40
0xb1: V44 = M[0x40]
0xb4: V45 = SUB V42 V44
0xb6: V46 = 0x0
0xb8: V47 = CREATE 0x0 V44 V45
0xba: V48 = ISZERO V47
0xbb: V49 = ISZERO V48
0xbc: V50 = 0xc4
0xbf: JUMPI 0xc4 V49
---
Entry stack: [V11, 0x77, S4, V28, S2, V28, V73]
Stack pops: 2
Stack additions: [V47]
Exit stack: [V11, 0x77, S4, V28, S2, V47]

================================

Block 0xc0
[0xc0:0xc3]
---
Predecessors: [0x91]
Successors: []
---
0xc0 PUSH1 0x0
0xc2 DUP1
0xc3 REVERT
---
0xc0: V51 = 0x0
0xc3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, S3, V28, S1, V47]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, S3, V28, S1, V47]

================================

Block 0xc4
[0xc4:0x124]
---
Predecessors: [0x91]
Successors: [0x7c]
---
0xc4 JUMPDEST
0xc5 SWAP1
0xc6 POP
0xc7 PUSH32 0xa35ea2cc726861482a50a162c72aad60965cc64641d419cd4d675036238b5204
0xe8 CALLER
0xe9 DUP3
0xea PUSH1 0x40
0xec MLOAD
0xed PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x102 SWAP3
0x103 DUP4
0x104 AND
0x105 DUP2
0x106 MSTORE
0x107 SWAP2
0x108 AND
0x109 PUSH1 0x20
0x10b DUP3
0x10c ADD
0x10d MSTORE
0x10e PUSH1 0x40
0x110 SWAP1
0x111 DUP2
0x112 ADD
0x113 SWAP1
0x114 MLOAD
0x115 DUP1
0x116 SWAP2
0x117 SUB
0x118 SWAP1
0x119 LOG1
0x11a PUSH1 0x0
0x11c NOT
0x11d SWAP1
0x11e SWAP3
0x11f ADD
0x120 SWAP2
0x121 PUSH2 0x7c
0x124 JUMP
---
0xc4: JUMPDEST 
0xc7: V52 = 0xa35ea2cc726861482a50a162c72aad60965cc64641d419cd4d675036238b5204
0xe8: V53 = CALLER
0xea: V54 = 0x40
0xec: V55 = M[0x40]
0xed: V56 = 0xffffffffffffffffffffffffffffffffffffffff
0x104: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0x106: M[V55] = V57
0x108: V58 = AND 0xffffffffffffffffffffffffffffffffffffffff V47
0x109: V59 = 0x20
0x10c: V60 = ADD V55 0x20
0x10d: M[V60] = V58
0x10e: V61 = 0x40
0x112: V62 = ADD 0x40 V55
0x114: V63 = M[0x40]
0x117: V64 = SUB V62 V63
0x119: LOG V63 V64 0xa35ea2cc726861482a50a162c72aad60965cc64641d419cd4d675036238b5204
0x11a: V65 = 0x0
0x11c: V66 = NOT 0x0
0x11f: V67 = ADD S3 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x121: V68 = 0x7c
0x124: JUMP 0x7c
---
Entry stack: [V11, 0x77, S3, V28, S1, V47]
Stack pops: 4
Stack additions: [V67, S2, S0]
Exit stack: [V11, 0x77, V67, V28, V47]

================================

Block 0x125
[0x125:0x129]
---
Predecessors: [0x7c]
Successors: [0x77]
---
0x125 JUMPDEST
0x126 POP
0x127 POP
0x128 POP
0x129 JUMP
---
0x125: JUMPDEST 
0x129: JUMP 0x77
---
Entry stack: [V11, 0x77, S2, V28, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x12a
[0x12a:0x139]
---
Predecessors: [0x89]
Successors: [0x91]
---
0x12a JUMPDEST
0x12b PUSH1 0x40
0x12d MLOAD
0x12e PUSH2 0x506
0x131 DUP1
0x132 PUSH2 0x13b
0x135 DUP4
0x136 CODECOPY
0x137 ADD
0x138 SWAP1
0x139 JUMP
---
0x12a: JUMPDEST 
0x12b: V69 = 0x40
0x12d: V70 = M[0x40]
0x12e: V71 = 0x506
0x132: V72 = 0x13b
0x136: CODECOPY V70 0x13b 0x506
0x137: V73 = ADD 0x506 V70
0x139: JUMP 0x91
---
Entry stack: [V11, 0x77, S4, V28, S2, V28, 0x91]
Stack pops: 1
Stack additions: [V73]
Exit stack: [V11, 0x77, S4, V28, S2, V28, V73]

================================

Block 0x13a
[0x13a:0x145]
---
Predecessors: []
Successors: [0x146]
---
0x13a STOP
0x13b PUSH1 0x60
0x13d PUSH1 0x40
0x13f MSTORE
0x140 CALLVALUE
0x141 ISZERO
0x142 PUSH2 0xf
0x145 JUMPI
---
0x13a: STOP 
0x13b: V74 = 0x60
0x13d: V75 = 0x40
0x13f: M[0x40] = 0x60
0x140: V76 = CALLVALUE
0x141: V77 = ISZERO V76
0x142: V78 = 0xf
0x145: THROWI V77
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x146
[0x146:0x149]
---
Predecessors: [0x13a]
Successors: []
---
0x146 PUSH1 0x0
0x148 DUP1
0x149 REVERT
---
0x146: V79 = 0x0
0x149: REVERT 0x0 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x14a
[0x14a:0x19b]
---
Predecessors: [0x298]
Successors: [0x19c]
---
0x14a JUMPDEST
0x14b PUSH1 0x40
0x14d MLOAD
0x14e PUSH1 0x20
0x150 DUP1
0x151 PUSH2 0x506
0x154 DUP4
0x155 CODECOPY
0x156 DUP2
0x157 ADD
0x158 PUSH1 0x40
0x15a MSTORE
0x15b DUP1
0x15c DUP1
0x15d MLOAD
0x15e PUSH1 0x0
0x160 DUP1
0x161 SLOAD
0x162 PUSH1 0x1
0x164 PUSH1 0xa0
0x166 PUSH1 0x2
0x168 EXP
0x169 SUB
0x16a SWAP1
0x16b SWAP3
0x16c AND
0x16d PUSH1 0x1
0x16f PUSH1 0xa0
0x171 PUSH1 0x2
0x173 EXP
0x174 SUB
0x175 NOT
0x176 SWAP1
0x177 SWAP3
0x178 AND
0x179 SWAP2
0x17a SWAP1
0x17b SWAP2
0x17c OR
0x17d SWAP1
0x17e SSTORE
0x17f POP
0x180 POP
0x181 PUSH2 0x4b2
0x184 DUP1
0x185 PUSH2 0x54
0x188 PUSH1 0x0
0x18a CODECOPY
0x18b PUSH1 0x0
0x18d RETURN
0x18e STOP
0x18f PUSH1 0x60
0x191 PUSH1 0x40
0x193 MSTORE
0x194 PUSH1 0x4
0x196 CALLDATASIZE
0x197 LT
0x198 PUSH2 0x48
0x19b JUMPI
---
0x14a: JUMPDEST 
0x14b: V80 = 0x40
0x14d: V81 = M[0x40]
0x14e: V82 = 0x20
0x151: V83 = 0x506
0x155: CODECOPY V81 0x506 0x20
0x157: V84 = ADD V81 0x20
0x158: V85 = 0x40
0x15a: M[0x40] = V84
0x15d: V86 = M[V81]
0x15e: V87 = 0x0
0x161: V88 = S[0x0]
0x162: V89 = 0x1
0x164: V90 = 0xa0
0x166: V91 = 0x2
0x168: V92 = EXP 0x2 0xa0
0x169: V93 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16c: V94 = AND V86 0xffffffffffffffffffffffffffffffffffffffff
0x16d: V95 = 0x1
0x16f: V96 = 0xa0
0x171: V97 = 0x2
0x173: V98 = EXP 0x2 0xa0
0x174: V99 = SUB 0x10000000000000000000000000000000000000000 0x1
0x175: V100 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x178: V101 = AND V88 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x17c: V102 = OR V101 V94
0x17e: S[0x0] = V102
0x181: V103 = 0x4b2
0x185: V104 = 0x54
0x188: V105 = 0x0
0x18a: CODECOPY 0x0 0x54 0x4b2
0x18b: V106 = 0x0
0x18d: RETURN 0x0 0x4b2
0x18e: STOP 
0x18f: V107 = 0x60
0x191: V108 = 0x40
0x193: M[0x40] = 0x60
0x194: V109 = 0x4
0x196: V110 = CALLDATASIZE
0x197: V111 = LT V110 0x4
0x198: V112 = 0x48
0x19b: THROWI V111
---
Entry stack: [V225]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x19c
[0x19c:0x1b5]
---
Predecessors: [0x14a]
Successors: [0x1b6]
---
0x19c PUSH4 0xffffffff
0x1a1 PUSH1 0xe0
0x1a3 PUSH1 0x2
0x1a5 EXP
0x1a6 PUSH1 0x0
0x1a8 CALLDATALOAD
0x1a9 DIV
0x1aa AND
0x1ab PUSH4 0x3ef13367
0x1b0 DUP2
0x1b1 EQ
0x1b2 PUSH2 0x1ca
0x1b5 JUMPI
---
0x19c: V113 = 0xffffffff
0x1a1: V114 = 0xe0
0x1a3: V115 = 0x2
0x1a5: V116 = EXP 0x2 0xe0
0x1a6: V117 = 0x0
0x1a8: V118 = CALLDATALOAD 0x0
0x1a9: V119 = DIV V118 0x100000000000000000000000000000000000000000000000000000000
0x1aa: V120 = AND V119 0xffffffff
0x1ab: V121 = 0x3ef13367
0x1b1: V122 = EQ V120 0x3ef13367
0x1b2: V123 = 0x1ca
0x1b5: THROWI V122
---
Entry stack: []
Stack pops: 0
Stack additions: [V120]
Exit stack: [V120]

================================

Block 0x1b6
[0x1b6:0x1c0]
---
Predecessors: [0x19c]
Successors: [0x1c1]
---
0x1b6 DUP1
0x1b7 PUSH4 0x6b9f96ea
0x1bc EQ
0x1bd PUSH2 0x1eb
0x1c0 JUMPI
---
0x1b7: V124 = 0x6b9f96ea
0x1bc: V125 = EQ 0x6b9f96ea V120
0x1bd: V126 = 0x1eb
0x1c0: THROWI V125
---
Entry stack: [V120]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V120]

================================

Block 0x1c1
[0x1c1:0x1cb]
---
Predecessors: [0x1b6]
Successors: [0x1cc]
---
0x1c1 DUP1
0x1c2 PUSH4 0xa31f831f
0x1c7 EQ
0x1c8 PUSH2 0x1fe
0x1cb JUMPI
---
0x1c2: V127 = 0xa31f831f
0x1c7: V128 = EQ 0xa31f831f V120
0x1c8: V129 = 0x1fe
0x1cb: THROWI V128
---
Entry stack: [V120]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V120]

================================

Block 0x1cc
[0x1cc:0x1d6]
---
Predecessors: [0x1c1]
Successors: [0x1d7]
---
0x1cc DUP1
0x1cd PUSH4 0xf77c4791
0x1d2 EQ
0x1d3 PUSH2 0x231
0x1d6 JUMPI
---
0x1cd: V130 = 0xf77c4791
0x1d2: V131 = EQ 0xf77c4791 V120
0x1d3: V132 = 0x231
0x1d6: THROWI V131
---
Entry stack: [V120]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V120]

================================

Block 0x1d7
[0x1d7:0x229]
---
Predecessors: [0x1cc]
Successors: [0x22a]
---
0x1d7 JUMPDEST
0x1d8 PUSH1 0x0
0x1da DUP1
0x1db SLOAD
0x1dc PUSH1 0x1
0x1de PUSH1 0xa0
0x1e0 PUSH1 0x2
0x1e2 EXP
0x1e3 SUB
0x1e4 AND
0x1e5 PUSH4 0x3c2474ca
0x1ea ADDRESS
0x1eb CALLVALUE
0x1ec PUSH1 0x40
0x1ee MLOAD
0x1ef PUSH1 0xe0
0x1f1 PUSH1 0x2
0x1f3 EXP
0x1f4 PUSH4 0xffffffff
0x1f9 DUP6
0x1fa AND
0x1fb MUL
0x1fc DUP2
0x1fd MSTORE
0x1fe PUSH1 0x1
0x200 PUSH1 0xa0
0x202 PUSH1 0x2
0x204 EXP
0x205 SUB
0x206 SWAP1
0x207 SWAP3
0x208 AND
0x209 PUSH1 0x4
0x20b DUP4
0x20c ADD
0x20d MSTORE
0x20e PUSH1 0x24
0x210 DUP3
0x211 ADD
0x212 MSTORE
0x213 PUSH1 0x44
0x215 ADD
0x216 PUSH1 0x0
0x218 PUSH1 0x40
0x21a MLOAD
0x21b DUP1
0x21c DUP4
0x21d SUB
0x21e DUP2
0x21f PUSH1 0x0
0x221 DUP8
0x222 DUP1
0x223 EXTCODESIZE
0x224 ISZERO
0x225 ISZERO
0x226 PUSH2 0x9f
0x229 JUMPI
---
0x1d7: JUMPDEST 
0x1d8: V133 = 0x0
0x1db: V134 = S[0x0]
0x1dc: V135 = 0x1
0x1de: V136 = 0xa0
0x1e0: V137 = 0x2
0x1e2: V138 = EXP 0x2 0xa0
0x1e3: V139 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e4: V140 = AND 0xffffffffffffffffffffffffffffffffffffffff V134
0x1e5: V141 = 0x3c2474ca
0x1ea: V142 = ADDRESS
0x1eb: V143 = CALLVALUE
0x1ec: V144 = 0x40
0x1ee: V145 = M[0x40]
0x1ef: V146 = 0xe0
0x1f1: V147 = 0x2
0x1f3: V148 = EXP 0x2 0xe0
0x1f4: V149 = 0xffffffff
0x1fa: V150 = AND 0x3c2474ca 0xffffffff
0x1fb: V151 = MUL 0x3c2474ca 0x100000000000000000000000000000000000000000000000000000000
0x1fd: M[V145] = 0x3c2474ca00000000000000000000000000000000000000000000000000000000
0x1fe: V152 = 0x1
0x200: V153 = 0xa0
0x202: V154 = 0x2
0x204: V155 = EXP 0x2 0xa0
0x205: V156 = SUB 0x10000000000000000000000000000000000000000 0x1
0x208: V157 = AND V142 0xffffffffffffffffffffffffffffffffffffffff
0x209: V158 = 0x4
0x20c: V159 = ADD V145 0x4
0x20d: M[V159] = V157
0x20e: V160 = 0x24
0x211: V161 = ADD V145 0x24
0x212: M[V161] = V143
0x213: V162 = 0x44
0x215: V163 = ADD 0x44 V145
0x216: V164 = 0x0
0x218: V165 = 0x40
0x21a: V166 = M[0x40]
0x21d: V167 = SUB V163 V166
0x21f: V168 = 0x0
0x223: V169 = EXTCODESIZE V140
0x224: V170 = ISZERO V169
0x225: V171 = ISZERO V170
0x226: V172 = 0x9f
0x229: THROWI V171
---
Entry stack: [V120]
Stack pops: 0
Stack additions: [0x0, V140, 0x3c2474ca, V163, 0x0, V166, V167, V166, 0x0, V140]
Exit stack: [V120, 0x0, V140, 0x3c2474ca, V163, 0x0, V166, V167, V166, 0x0, V140]

================================

Block 0x22a
[0x22a:0x23a]
---
Predecessors: [0x1d7]
Successors: [0x23b]
---
0x22a PUSH1 0x0
0x22c DUP1
0x22d REVERT
0x22e JUMPDEST
0x22f PUSH2 0x2c6
0x232 GAS
0x233 SUB
0x234 CALL
0x235 ISZERO
0x236 ISZERO
0x237 PUSH2 0xb0
0x23a JUMPI
---
0x22a: V173 = 0x0
0x22d: REVERT 0x0 0x0
0x22e: JUMPDEST 
0x22f: V174 = 0x2c6
0x232: V175 = GAS
0x233: V176 = SUB V175 0x2c6
0x234: V177 = CALL V176 S0 S1 S2 S3 S4 S5
0x235: V178 = ISZERO V177
0x236: V179 = ISZERO V178
0x237: V180 = 0xb0
0x23a: THROWI V179
---
Entry stack: [V120, 0x0, V140, 0x3c2474ca, V163, 0x0, V166, V167, V166, 0x0, V140]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x23b
[0x23b:0x286]
---
Predecessors: [0x22a]
Successors: [0x287]
---
0x23b PUSH1 0x0
0x23d DUP1
0x23e REVERT
0x23f JUMPDEST
0x240 POP
0x241 POP
0x242 PUSH1 0x0
0x244 DUP1
0x245 SLOAD
0x246 PUSH1 0x1
0x248 PUSH1 0xa0
0x24a PUSH1 0x2
0x24c EXP
0x24d SUB
0x24e AND
0x24f SWAP2
0x250 POP
0x251 PUSH4 0xb269681d
0x256 SWAP1
0x257 PUSH1 0x40
0x259 MLOAD
0x25a PUSH1 0x20
0x25c ADD
0x25d MSTORE
0x25e PUSH1 0x40
0x260 MLOAD
0x261 DUP2
0x262 PUSH4 0xffffffff
0x267 AND
0x268 PUSH1 0xe0
0x26a PUSH1 0x2
0x26c EXP
0x26d MUL
0x26e DUP2
0x26f MSTORE
0x270 PUSH1 0x4
0x272 ADD
0x273 PUSH1 0x20
0x275 PUSH1 0x40
0x277 MLOAD
0x278 DUP1
0x279 DUP4
0x27a SUB
0x27b DUP2
0x27c PUSH1 0x0
0x27e DUP8
0x27f DUP1
0x280 EXTCODESIZE
0x281 ISZERO
0x282 ISZERO
0x283 PUSH2 0xfc
0x286 JUMPI
---
0x23b: V181 = 0x0
0x23e: REVERT 0x0 0x0
0x23f: JUMPDEST 
0x242: V182 = 0x0
0x245: V183 = S[0x0]
0x246: V184 = 0x1
0x248: V185 = 0xa0
0x24a: V186 = 0x2
0x24c: V187 = EXP 0x2 0xa0
0x24d: V188 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24e: V189 = AND 0xffffffffffffffffffffffffffffffffffffffff V183
0x251: V190 = 0xb269681d
0x257: V191 = 0x40
0x259: V192 = M[0x40]
0x25a: V193 = 0x20
0x25c: V194 = ADD 0x20 V192
0x25d: M[V194] = 0x0
0x25e: V195 = 0x40
0x260: V196 = M[0x40]
0x262: V197 = 0xffffffff
0x267: V198 = AND 0xffffffff 0xb269681d
0x268: V199 = 0xe0
0x26a: V200 = 0x2
0x26c: V201 = EXP 0x2 0xe0
0x26d: V202 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xb269681d
0x26f: M[V196] = 0xb269681d00000000000000000000000000000000000000000000000000000000
0x270: V203 = 0x4
0x272: V204 = ADD 0x4 V196
0x273: V205 = 0x20
0x275: V206 = 0x40
0x277: V207 = M[0x40]
0x27a: V208 = SUB V204 V207
0x27c: V209 = 0x0
0x280: V210 = EXTCODESIZE V189
0x281: V211 = ISZERO V210
0x282: V212 = ISZERO V211
0x283: V213 = 0xfc
0x286: THROWI V212
---
Entry stack: []
Stack pops: 0
Stack additions: [V189, 0x0, V207, V208, V207, 0x20, V204, 0xb269681d, V189]
Exit stack: []

================================

Block 0x287
[0x287:0x297]
---
Predecessors: [0x23b]
Successors: [0x298]
---
0x287 PUSH1 0x0
0x289 DUP1
0x28a REVERT
0x28b JUMPDEST
0x28c PUSH2 0x2c6
0x28f GAS
0x290 SUB
0x291 CALL
0x292 ISZERO
0x293 ISZERO
0x294 PUSH2 0x10d
0x297 JUMPI
---
0x287: V214 = 0x0
0x28a: REVERT 0x0 0x0
0x28b: JUMPDEST 
0x28c: V215 = 0x2c6
0x28f: V216 = GAS
0x290: V217 = SUB V216 0x2c6
0x291: V218 = CALL V217 S0 S1 S2 S3 S4 S5
0x292: V219 = ISZERO V218
0x293: V220 = ISZERO V219
0x294: V221 = 0x10d
0x297: THROWI V220
---
Entry stack: [V189, 0xb269681d, V204, 0x20, V207, V208, V207, 0x0, V189]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x298
[0x298:0x2d4]
---
Predecessors: [0x287]
Successors: [0x14a, 0x2d5]
---
0x298 PUSH1 0x0
0x29a DUP1
0x29b REVERT
0x29c JUMPDEST
0x29d POP
0x29e POP
0x29f POP
0x2a0 PUSH1 0x40
0x2a2 MLOAD
0x2a3 DUP1
0x2a4 MLOAD
0x2a5 SWAP2
0x2a6 POP
0x2a7 POP
0x2a8 PUSH1 0x1
0x2aa PUSH1 0xa0
0x2ac PUSH1 0x2
0x2ae EXP
0x2af SUB
0x2b0 DUP2
0x2b1 AND
0x2b2 CALLVALUE
0x2b3 DUP1
0x2b4 ISZERO
0x2b5 PUSH2 0x8fc
0x2b8 MUL
0x2b9 SWAP1
0x2ba PUSH1 0x40
0x2bc MLOAD
0x2bd PUSH1 0x0
0x2bf PUSH1 0x40
0x2c1 MLOAD
0x2c2 DUP1
0x2c3 DUP4
0x2c4 SUB
0x2c5 DUP2
0x2c6 DUP6
0x2c7 DUP9
0x2c8 DUP9
0x2c9 CALL
0x2ca SWAP4
0x2cb POP
0x2cc POP
0x2cd POP
0x2ce POP
0x2cf ISZERO
0x2d0 ISZERO
0x2d1 PUSH2 0x14a
0x2d4 JUMPI
---
0x298: V222 = 0x0
0x29b: REVERT 0x0 0x0
0x29c: JUMPDEST 
0x2a0: V223 = 0x40
0x2a2: V224 = M[0x40]
0x2a4: V225 = M[V224]
0x2a8: V226 = 0x1
0x2aa: V227 = 0xa0
0x2ac: V228 = 0x2
0x2ae: V229 = EXP 0x2 0xa0
0x2af: V230 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b1: V231 = AND V225 0xffffffffffffffffffffffffffffffffffffffff
0x2b2: V232 = CALLVALUE
0x2b4: V233 = ISZERO V232
0x2b5: V234 = 0x8fc
0x2b8: V235 = MUL 0x8fc V233
0x2ba: V236 = 0x40
0x2bc: V237 = M[0x40]
0x2bd: V238 = 0x0
0x2bf: V239 = 0x40
0x2c1: V240 = M[0x40]
0x2c4: V241 = SUB V237 V240
0x2c9: V242 = CALL V235 V231 V232 V240 V241 V240 0x0
0x2cf: V243 = ISZERO V242
0x2d0: V244 = ISZERO V243
0x2d1: V245 = 0x14a
0x2d4: JUMPI 0x14a V244
---
Entry stack: []
Stack pops: 0
Stack additions: [V225]
Exit stack: []

================================

Block 0x2d5
[0x2d5:0x35f]
---
Predecessors: [0x298]
Successors: [0x360]
---
0x2d5 PUSH1 0x0
0x2d7 DUP1
0x2d8 REVERT
0x2d9 JUMPDEST
0x2da PUSH32 0x761f15e08c511c364c0115c6e27234de82a105edab4c9193e2beca8f10a26e37
0x2fb CALLER
0x2fc ADDRESS
0x2fd DUP4
0x2fe CALLVALUE
0x2ff PUSH1 0x0
0x301 CALLDATASIZE
0x302 PUSH1 0x40
0x304 MLOAD
0x305 PUSH1 0x1
0x307 PUSH1 0xa0
0x309 PUSH1 0x2
0x30b EXP
0x30c SUB
0x30d DUP1
0x30e DUP9
0x30f AND
0x310 DUP3
0x311 MSTORE
0x312 DUP7
0x313 DUP2
0x314 AND
0x315 PUSH1 0x20
0x317 DUP4
0x318 ADD
0x319 MSTORE
0x31a DUP6
0x31b AND
0x31c PUSH1 0x40
0x31e DUP3
0x31f ADD
0x320 MSTORE
0x321 PUSH1 0x60
0x323 DUP2
0x324 ADD
0x325 DUP5
0x326 SWAP1
0x327 MSTORE
0x328 PUSH1 0xa0
0x32a PUSH1 0x80
0x32c DUP3
0x32d ADD
0x32e DUP2
0x32f DUP2
0x330 MSTORE
0x331 SWAP1
0x332 DUP3
0x333 ADD
0x334 DUP4
0x335 SWAP1
0x336 MSTORE
0x337 PUSH1 0xc0
0x339 DUP3
0x33a ADD
0x33b DUP5
0x33c DUP5
0x33d DUP1
0x33e DUP3
0x33f DUP5
0x340 CALLDATACOPY
0x341 DUP3
0x342 ADD
0x343 SWAP2
0x344 POP
0x345 POP
0x346 SWAP8
0x347 POP
0x348 POP
0x349 POP
0x34a POP
0x34b POP
0x34c POP
0x34d POP
0x34e POP
0x34f PUSH1 0x40
0x351 MLOAD
0x352 DUP1
0x353 SWAP2
0x354 SUB
0x355 SWAP1
0x356 LOG1
0x357 POP
0x358 STOP
0x359 JUMPDEST
0x35a CALLVALUE
0x35b ISZERO
0x35c PUSH2 0x1d5
0x35f JUMPI
---
0x2d5: V246 = 0x0
0x2d8: REVERT 0x0 0x0
0x2d9: JUMPDEST 
0x2da: V247 = 0x761f15e08c511c364c0115c6e27234de82a105edab4c9193e2beca8f10a26e37
0x2fb: V248 = CALLER
0x2fc: V249 = ADDRESS
0x2fe: V250 = CALLVALUE
0x2ff: V251 = 0x0
0x301: V252 = CALLDATASIZE
0x302: V253 = 0x40
0x304: V254 = M[0x40]
0x305: V255 = 0x1
0x307: V256 = 0xa0
0x309: V257 = 0x2
0x30b: V258 = EXP 0x2 0xa0
0x30c: V259 = SUB 0x10000000000000000000000000000000000000000 0x1
0x30f: V260 = AND V248 0xffffffffffffffffffffffffffffffffffffffff
0x311: M[V254] = V260
0x314: V261 = AND 0xffffffffffffffffffffffffffffffffffffffff V249
0x315: V262 = 0x20
0x318: V263 = ADD V254 0x20
0x319: M[V263] = V261
0x31b: V264 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x31c: V265 = 0x40
0x31f: V266 = ADD V254 0x40
0x320: M[V266] = V264
0x321: V267 = 0x60
0x324: V268 = ADD V254 0x60
0x327: M[V268] = V250
0x328: V269 = 0xa0
0x32a: V270 = 0x80
0x32d: V271 = ADD V254 0x80
0x330: M[V271] = 0xa0
0x333: V272 = ADD V254 0xa0
0x336: M[V272] = V252
0x337: V273 = 0xc0
0x33a: V274 = ADD V254 0xc0
0x340: CALLDATACOPY V274 0x0 V252
0x342: V275 = ADD V274 V252
0x34f: V276 = 0x40
0x351: V277 = M[0x40]
0x354: V278 = SUB V275 V277
0x356: LOG V277 V278 0x761f15e08c511c364c0115c6e27234de82a105edab4c9193e2beca8f10a26e37
0x358: STOP 
0x359: JUMPDEST 
0x35a: V279 = CALLVALUE
0x35b: V280 = ISZERO V279
0x35c: V281 = 0x1d5
0x35f: THROWI V280
---
Entry stack: [V225]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x360
[0x360:0x380]
---
Predecessors: [0x2d5]
Successors: [0x381]
---
0x360 PUSH1 0x0
0x362 DUP1
0x363 REVERT
0x364 JUMPDEST
0x365 PUSH2 0x1e9
0x368 PUSH1 0x1
0x36a PUSH1 0xa0
0x36c PUSH1 0x2
0x36e EXP
0x36f SUB
0x370 PUSH1 0x4
0x372 CALLDATALOAD
0x373 AND
0x374 PUSH2 0x260
0x377 JUMP
0x378 JUMPDEST
0x379 STOP
0x37a JUMPDEST
0x37b CALLVALUE
0x37c ISZERO
0x37d PUSH2 0x1f6
0x380 JUMPI
---
0x360: V282 = 0x0
0x363: REVERT 0x0 0x0
0x364: JUMPDEST 
0x365: V283 = 0x1e9
0x368: V284 = 0x1
0x36a: V285 = 0xa0
0x36c: V286 = 0x2
0x36e: V287 = EXP 0x2 0xa0
0x36f: V288 = SUB 0x10000000000000000000000000000000000000000 0x1
0x370: V289 = 0x4
0x372: V290 = CALLDATALOAD 0x4
0x373: V291 = AND V290 0xffffffffffffffffffffffffffffffffffffffff
0x374: V292 = 0x260
0x377: THROW 
0x378: JUMPDEST 
0x379: STOP 
0x37a: JUMPDEST 
0x37b: V293 = CALLVALUE
0x37c: V294 = ISZERO V293
0x37d: V295 = 0x1f6
0x380: THROWI V294
---
Entry stack: []
Stack pops: 0
Stack additions: [V291, 0x1e9]
Exit stack: []

================================

Block 0x381
[0x381:0x393]
---
Predecessors: [0x360]
Successors: [0x394]
---
0x381 PUSH1 0x0
0x383 DUP1
0x384 REVERT
0x385 JUMPDEST
0x386 PUSH2 0x1e9
0x389 PUSH2 0x3c6
0x38c JUMP
0x38d JUMPDEST
0x38e CALLVALUE
0x38f ISZERO
0x390 PUSH2 0x209
0x393 JUMPI
---
0x381: V296 = 0x0
0x384: REVERT 0x0 0x0
0x385: JUMPDEST 
0x386: V297 = 0x1e9
0x389: V298 = 0x3c6
0x38c: THROW 
0x38d: JUMPDEST 
0x38e: V299 = CALLVALUE
0x38f: V300 = ISZERO V299
0x390: V301 = 0x209
0x393: THROWI V300
---
Entry stack: []
Stack pops: 0
Stack additions: [0x1e9]
Exit stack: []

================================

Block 0x394
[0x394:0x3bf]
---
Predecessors: [0x381]
Successors: []
---
0x394 PUSH1 0x0
0x396 DUP1
0x397 REVERT
0x398 JUMPDEST
0x399 PUSH2 0x21d
0x39c PUSH1 0x1
0x39e PUSH1 0xa0
0x3a0 PUSH1 0x2
0x3a2 EXP
0x3a3 SUB
0x3a4 PUSH1 0x4
0x3a6 CALLDATALOAD
0x3a7 AND
0x3a8 PUSH2 0x463
0x3ab JUMP
0x3ac JUMPDEST
0x3ad PUSH1 0x40
0x3af MLOAD
0x3b0 SWAP1
0x3b1 ISZERO
0x3b2 ISZERO
0x3b3 DUP2
0x3b4 MSTORE
0x3b5 PUSH1 0x20
0x3b7 ADD
0x3b8 PUSH1 0x40
0x3ba MLOAD
0x3bb DUP1
0x3bc SWAP2
0x3bd SUB
0x3be SWAP1
0x3bf RETURN
---
0x394: V302 = 0x0
0x397: REVERT 0x0 0x0
0x398: JUMPDEST 
0x399: V303 = 0x21d
0x39c: V304 = 0x1
0x39e: V305 = 0xa0
0x3a0: V306 = 0x2
0x3a2: V307 = EXP 0x2 0xa0
0x3a3: V308 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a4: V309 = 0x4
0x3a6: V310 = CALLDATALOAD 0x4
0x3a7: V311 = AND V310 0xffffffffffffffffffffffffffffffffffffffff
0x3a8: V312 = 0x463
0x3ab: THROW 
0x3ac: JUMPDEST 
0x3ad: V313 = 0x40
0x3af: V314 = M[0x40]
0x3b1: V315 = ISZERO S0
0x3b2: V316 = ISZERO V315
0x3b4: M[V314] = V316
0x3b5: V317 = 0x20
0x3b7: V318 = ADD 0x20 V314
0x3b8: V319 = 0x40
0x3ba: V320 = M[0x40]
0x3bd: V321 = SUB V318 V320
0x3bf: RETURN V320 V321
---
Entry stack: []
Stack pops: 0
Stack additions: [V311, 0x21d]
Exit stack: []

================================

Block 0x3c0
[0x3c0:0x3c6]
---
Predecessors: [0x4be]
Successors: [0x3c7]
---
0x3c0 JUMPDEST
0x3c1 CALLVALUE
0x3c2 ISZERO
0x3c3 PUSH2 0x23c
0x3c6 JUMPI
---
0x3c0: JUMPDEST 
0x3c1: V322 = CALLVALUE
0x3c2: V323 = ISZERO V322
0x3c3: V324 = 0x23c
0x3c6: THROWI V323
---
Entry stack: [S1, V436]
Stack pops: 0
Stack additions: []
Exit stack: [S1, V436]

================================

Block 0x3c7
[0x3c7:0x444]
---
Predecessors: [0x3c0]
Successors: [0x445]
---
0x3c7 PUSH1 0x0
0x3c9 DUP1
0x3ca REVERT
0x3cb JUMPDEST
0x3cc PUSH2 0x244
0x3cf PUSH2 0x477
0x3d2 JUMP
0x3d3 JUMPDEST
0x3d4 PUSH1 0x40
0x3d6 MLOAD
0x3d7 PUSH1 0x1
0x3d9 PUSH1 0xa0
0x3db PUSH1 0x2
0x3dd EXP
0x3de SUB
0x3df SWAP1
0x3e0 SWAP2
0x3e1 AND
0x3e2 DUP2
0x3e3 MSTORE
0x3e4 PUSH1 0x20
0x3e6 ADD
0x3e7 PUSH1 0x40
0x3e9 MLOAD
0x3ea DUP1
0x3eb SWAP2
0x3ec SUB
0x3ed SWAP1
0x3ee RETURN
0x3ef JUMPDEST
0x3f0 DUP1
0x3f1 PUSH1 0x0
0x3f3 DUP1
0x3f4 PUSH1 0x1
0x3f6 PUSH1 0xa0
0x3f8 PUSH1 0x2
0x3fa EXP
0x3fb SUB
0x3fc DUP4
0x3fd AND
0x3fe PUSH4 0x70a08231
0x403 ADDRESS
0x404 DUP4
0x405 PUSH1 0x40
0x407 MLOAD
0x408 PUSH1 0x20
0x40a ADD
0x40b MSTORE
0x40c PUSH1 0x40
0x40e MLOAD
0x40f PUSH1 0xe0
0x411 PUSH1 0x2
0x413 EXP
0x414 PUSH4 0xffffffff
0x419 DUP5
0x41a AND
0x41b MUL
0x41c DUP2
0x41d MSTORE
0x41e PUSH1 0x1
0x420 PUSH1 0xa0
0x422 PUSH1 0x2
0x424 EXP
0x425 SUB
0x426 SWAP1
0x427 SWAP2
0x428 AND
0x429 PUSH1 0x4
0x42b DUP3
0x42c ADD
0x42d MSTORE
0x42e PUSH1 0x24
0x430 ADD
0x431 PUSH1 0x20
0x433 PUSH1 0x40
0x435 MLOAD
0x436 DUP1
0x437 DUP4
0x438 SUB
0x439 DUP2
0x43a PUSH1 0x0
0x43c DUP8
0x43d DUP1
0x43e EXTCODESIZE
0x43f ISZERO
0x440 ISZERO
0x441 PUSH2 0x2ba
0x444 JUMPI
---
0x3c7: V325 = 0x0
0x3ca: REVERT 0x0 0x0
0x3cb: JUMPDEST 
0x3cc: V326 = 0x244
0x3cf: V327 = 0x477
0x3d2: THROW 
0x3d3: JUMPDEST 
0x3d4: V328 = 0x40
0x3d6: V329 = M[0x40]
0x3d7: V330 = 0x1
0x3d9: V331 = 0xa0
0x3db: V332 = 0x2
0x3dd: V333 = EXP 0x2 0xa0
0x3de: V334 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3e1: V335 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x3e3: M[V329] = V335
0x3e4: V336 = 0x20
0x3e6: V337 = ADD 0x20 V329
0x3e7: V338 = 0x40
0x3e9: V339 = M[0x40]
0x3ec: V340 = SUB V337 V339
0x3ee: RETURN V339 V340
0x3ef: JUMPDEST 
0x3f1: V341 = 0x0
0x3f4: V342 = 0x1
0x3f6: V343 = 0xa0
0x3f8: V344 = 0x2
0x3fa: V345 = EXP 0x2 0xa0
0x3fb: V346 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3fd: V347 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x3fe: V348 = 0x70a08231
0x403: V349 = ADDRESS
0x405: V350 = 0x40
0x407: V351 = M[0x40]
0x408: V352 = 0x20
0x40a: V353 = ADD 0x20 V351
0x40b: M[V353] = 0x0
0x40c: V354 = 0x40
0x40e: V355 = M[0x40]
0x40f: V356 = 0xe0
0x411: V357 = 0x2
0x413: V358 = EXP 0x2 0xe0
0x414: V359 = 0xffffffff
0x41a: V360 = AND 0x70a08231 0xffffffff
0x41b: V361 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x41d: M[V355] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x41e: V362 = 0x1
0x420: V363 = 0xa0
0x422: V364 = 0x2
0x424: V365 = EXP 0x2 0xa0
0x425: V366 = SUB 0x10000000000000000000000000000000000000000 0x1
0x428: V367 = AND V349 0xffffffffffffffffffffffffffffffffffffffff
0x429: V368 = 0x4
0x42c: V369 = ADD V355 0x4
0x42d: M[V369] = V367
0x42e: V370 = 0x24
0x430: V371 = ADD 0x24 V355
0x431: V372 = 0x20
0x433: V373 = 0x40
0x435: V374 = M[0x40]
0x438: V375 = SUB V371 V374
0x43a: V376 = 0x0
0x43e: V377 = EXTCODESIZE V347
0x43f: V378 = ISZERO V377
0x440: V379 = ISZERO V378
0x441: V380 = 0x2ba
0x444: THROWI V379
---
Entry stack: [S1, V436]
Stack pops: 0
Stack additions: [0x244, V347, 0x0, V374, V375, V374, 0x20, V371, 0x70a08231, V347, 0x0, 0x0, S0, S0]
Exit stack: []

================================

Block 0x445
[0x445:0x455]
---
Predecessors: [0x3c7]
Successors: [0x456]
---
0x445 PUSH1 0x0
0x447 DUP1
0x448 REVERT
0x449 JUMPDEST
0x44a PUSH2 0x2c6
0x44d GAS
0x44e SUB
0x44f CALL
0x450 ISZERO
0x451 ISZERO
0x452 PUSH2 0x2cb
0x455 JUMPI
---
0x445: V381 = 0x0
0x448: REVERT 0x0 0x0
0x449: JUMPDEST 
0x44a: V382 = 0x2c6
0x44d: V383 = GAS
0x44e: V384 = SUB V383 0x2c6
0x44f: V385 = CALL V384 S0 S1 S2 S3 S4 S5
0x450: V386 = ISZERO V385
0x451: V387 = ISZERO V386
0x452: V388 = 0x2cb
0x455: THROWI V387
---
Entry stack: [S12, S11, 0x0, 0x0, V347, 0x70a08231, V371, 0x20, V374, V375, V374, 0x0, V347]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x456
[0x456:0x4ac]
---
Predecessors: [0x445]
Successors: [0x4ad]
---
0x456 PUSH1 0x0
0x458 DUP1
0x459 REVERT
0x45a JUMPDEST
0x45b POP
0x45c POP
0x45d POP
0x45e PUSH1 0x40
0x460 MLOAD
0x461 DUP1
0x462 MLOAD
0x463 PUSH1 0x0
0x465 DUP1
0x466 SLOAD
0x467 SWAP2
0x468 SWAP5
0x469 POP
0x46a PUSH1 0x1
0x46c PUSH1 0xa0
0x46e PUSH1 0x2
0x470 EXP
0x471 SUB
0x472 SWAP1
0x473 SWAP2
0x474 AND
0x475 SWAP2
0x476 POP
0x477 PUSH4 0xb269681d
0x47c SWAP1
0x47d PUSH1 0x40
0x47f MLOAD
0x480 PUSH1 0x20
0x482 ADD
0x483 MSTORE
0x484 PUSH1 0x40
0x486 MLOAD
0x487 DUP2
0x488 PUSH4 0xffffffff
0x48d AND
0x48e PUSH1 0xe0
0x490 PUSH1 0x2
0x492 EXP
0x493 MUL
0x494 DUP2
0x495 MSTORE
0x496 PUSH1 0x4
0x498 ADD
0x499 PUSH1 0x20
0x49b PUSH1 0x40
0x49d MLOAD
0x49e DUP1
0x49f DUP4
0x4a0 SUB
0x4a1 DUP2
0x4a2 PUSH1 0x0
0x4a4 DUP8
0x4a5 DUP1
0x4a6 EXTCODESIZE
0x4a7 ISZERO
0x4a8 ISZERO
0x4a9 PUSH2 0x322
0x4ac JUMPI
---
0x456: V389 = 0x0
0x459: REVERT 0x0 0x0
0x45a: JUMPDEST 
0x45e: V390 = 0x40
0x460: V391 = M[0x40]
0x462: V392 = M[V391]
0x463: V393 = 0x0
0x466: V394 = S[0x0]
0x46a: V395 = 0x1
0x46c: V396 = 0xa0
0x46e: V397 = 0x2
0x470: V398 = EXP 0x2 0xa0
0x471: V399 = SUB 0x10000000000000000000000000000000000000000 0x1
0x474: V400 = AND V394 0xffffffffffffffffffffffffffffffffffffffff
0x477: V401 = 0xb269681d
0x47d: V402 = 0x40
0x47f: V403 = M[0x40]
0x480: V404 = 0x20
0x482: V405 = ADD 0x20 V403
0x483: M[V405] = 0x0
0x484: V406 = 0x40
0x486: V407 = M[0x40]
0x488: V408 = 0xffffffff
0x48d: V409 = AND 0xffffffff 0xb269681d
0x48e: V410 = 0xe0
0x490: V411 = 0x2
0x492: V412 = EXP 0x2 0xe0
0x493: V413 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xb269681d
0x495: M[V407] = 0xb269681d00000000000000000000000000000000000000000000000000000000
0x496: V414 = 0x4
0x498: V415 = ADD 0x4 V407
0x499: V416 = 0x20
0x49b: V417 = 0x40
0x49d: V418 = M[0x40]
0x4a0: V419 = SUB V415 V418
0x4a2: V420 = 0x0
0x4a6: V421 = EXTCODESIZE V400
0x4a7: V422 = ISZERO V421
0x4a8: V423 = ISZERO V422
0x4a9: V424 = 0x322
0x4ac: THROWI V423
---
Entry stack: []
Stack pops: 0
Stack additions: [V400, 0x0, V418, V419, V418, 0x20, V415, 0xb269681d, V400, S3, V392]
Exit stack: []

================================

Block 0x4ad
[0x4ad:0x4bd]
---
Predecessors: [0x456]
Successors: [0x4be]
---
0x4ad PUSH1 0x0
0x4af DUP1
0x4b0 REVERT
0x4b1 JUMPDEST
0x4b2 PUSH2 0x2c6
0x4b5 GAS
0x4b6 SUB
0x4b7 CALL
0x4b8 ISZERO
0x4b9 ISZERO
0x4ba PUSH2 0x333
0x4bd JUMPI
---
0x4ad: V425 = 0x0
0x4b0: REVERT 0x0 0x0
0x4b1: JUMPDEST 
0x4b2: V426 = 0x2c6
0x4b5: V427 = GAS
0x4b6: V428 = SUB V427 0x2c6
0x4b7: V429 = CALL V428 S0 S1 S2 S3 S4 S5
0x4b8: V430 = ISZERO V429
0x4b9: V431 = ISZERO V430
0x4ba: V432 = 0x333
0x4bd: THROWI V431
---
Entry stack: [V392, S9, V400, 0xb269681d, V415, 0x20, V418, V419, V418, 0x0, V400]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x4be
[0x4be:0x4d6]
---
Predecessors: [0x4ad]
Successors: [0x3c0, 0x4d7]
---
0x4be PUSH1 0x0
0x4c0 DUP1
0x4c1 REVERT
0x4c2 JUMPDEST
0x4c3 POP
0x4c4 POP
0x4c5 POP
0x4c6 PUSH1 0x40
0x4c8 MLOAD
0x4c9 DUP1
0x4ca MLOAD
0x4cb SWAP2
0x4cc POP
0x4cd POP
0x4ce PUSH1 0x0
0x4d0 DUP3
0x4d1 GT
0x4d2 ISZERO
0x4d3 PUSH2 0x3c0
0x4d6 JUMPI
---
0x4be: V433 = 0x0
0x4c1: REVERT 0x0 0x0
0x4c2: JUMPDEST 
0x4c6: V434 = 0x40
0x4c8: V435 = M[0x40]
0x4ca: V436 = M[V435]
0x4ce: V437 = 0x0
0x4d1: V438 = GT S4 0x0
0x4d2: V439 = ISZERO V438
0x4d3: V440 = 0x3c0
0x4d6: JUMPI 0x3c0 V439
---
Entry stack: []
Stack pops: 0
Stack additions: [V436, S4]
Exit stack: []

================================

Block 0x4d7
[0x4d7:0x52e]
---
Predecessors: [0x4be]
Successors: [0x52f]
---
0x4d7 DUP3
0x4d8 PUSH1 0x1
0x4da PUSH1 0xa0
0x4dc PUSH1 0x2
0x4de EXP
0x4df SUB
0x4e0 AND
0x4e1 PUSH4 0xa9059cbb
0x4e6 DUP3
0x4e7 DUP5
0x4e8 PUSH1 0x0
0x4ea PUSH1 0x40
0x4ec MLOAD
0x4ed PUSH1 0x20
0x4ef ADD
0x4f0 MSTORE
0x4f1 PUSH1 0x40
0x4f3 MLOAD
0x4f4 PUSH1 0xe0
0x4f6 PUSH1 0x2
0x4f8 EXP
0x4f9 PUSH4 0xffffffff
0x4fe DUP6
0x4ff AND
0x500 MUL
0x501 DUP2
0x502 MSTORE
0x503 PUSH1 0x1
0x505 PUSH1 0xa0
0x507 PUSH1 0x2
0x509 EXP
0x50a SUB
0x50b SWAP1
0x50c SWAP3
0x50d AND
0x50e PUSH1 0x4
0x510 DUP4
0x511 ADD
0x512 MSTORE
0x513 PUSH1 0x24
0x515 DUP3
0x516 ADD
0x517 MSTORE
0x518 PUSH1 0x44
0x51a ADD
0x51b PUSH1 0x20
0x51d PUSH1 0x40
0x51f MLOAD
0x520 DUP1
0x521 DUP4
0x522 SUB
0x523 DUP2
0x524 PUSH1 0x0
0x526 DUP8
0x527 DUP1
0x528 EXTCODESIZE
0x529 ISZERO
0x52a ISZERO
0x52b PUSH2 0x3a4
0x52e JUMPI
---
0x4d8: V441 = 0x1
0x4da: V442 = 0xa0
0x4dc: V443 = 0x2
0x4de: V444 = EXP 0x2 0xa0
0x4df: V445 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e0: V446 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x4e1: V447 = 0xa9059cbb
0x4e8: V448 = 0x0
0x4ea: V449 = 0x40
0x4ec: V450 = M[0x40]
0x4ed: V451 = 0x20
0x4ef: V452 = ADD 0x20 V450
0x4f0: M[V452] = 0x0
0x4f1: V453 = 0x40
0x4f3: V454 = M[0x40]
0x4f4: V455 = 0xe0
0x4f6: V456 = 0x2
0x4f8: V457 = EXP 0x2 0xe0
0x4f9: V458 = 0xffffffff
0x4ff: V459 = AND 0xa9059cbb 0xffffffff
0x500: V460 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x502: M[V454] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x503: V461 = 0x1
0x505: V462 = 0xa0
0x507: V463 = 0x2
0x509: V464 = EXP 0x2 0xa0
0x50a: V465 = SUB 0x10000000000000000000000000000000000000000 0x1
0x50d: V466 = AND V436 0xffffffffffffffffffffffffffffffffffffffff
0x50e: V467 = 0x4
0x511: V468 = ADD V454 0x4
0x512: M[V468] = V466
0x513: V469 = 0x24
0x516: V470 = ADD V454 0x24
0x517: M[V470] = S1
0x518: V471 = 0x44
0x51a: V472 = ADD 0x44 V454
0x51b: V473 = 0x20
0x51d: V474 = 0x40
0x51f: V475 = M[0x40]
0x522: V476 = SUB V472 V475
0x524: V477 = 0x0
0x528: V478 = EXTCODESIZE V446
0x529: V479 = ISZERO V478
0x52a: V480 = ISZERO V479
0x52b: V481 = 0x3a4
0x52e: THROWI V480
---
Entry stack: [S1, V436]
Stack pops: 3
Stack additions: [S2, S1, S0, V446, 0xa9059cbb, V472, 0x20, V475, V476, V475, 0x0, V446]
Exit stack: [S0, S1, V436, V446, 0xa9059cbb, V472, 0x20, V475, V476, V475, 0x0, V446]

================================

Block 0x52f
[0x52f:0x53f]
---
Predecessors: [0x4d7]
Successors: [0x540]
---
0x52f PUSH1 0x0
0x531 DUP1
0x532 REVERT
0x533 JUMPDEST
0x534 PUSH2 0x2c6
0x537 GAS
0x538 SUB
0x539 CALL
0x53a ISZERO
0x53b ISZERO
0x53c PUSH2 0x3b5
0x53f JUMPI
---
0x52f: V482 = 0x0
0x532: REVERT 0x0 0x0
0x533: JUMPDEST 
0x534: V483 = 0x2c6
0x537: V484 = GAS
0x538: V485 = SUB V484 0x2c6
0x539: V486 = CALL V485 S0 S1 S2 S3 S4 S5
0x53a: V487 = ISZERO V486
0x53b: V488 = ISZERO V487
0x53c: V489 = 0x3b5
0x53f: THROWI V488
---
Entry stack: [S11, S10, V436, V446, 0xa9059cbb, V472, 0x20, V475, V476, V475, 0x0, V446]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x540
[0x540:0x54e]
---
Predecessors: [0x52f]
Successors: [0x54f]
---
0x540 PUSH1 0x0
0x542 DUP1
0x543 REVERT
0x544 JUMPDEST
0x545 POP
0x546 POP
0x547 POP
0x548 PUSH1 0x40
0x54a MLOAD
0x54b DUP1
0x54c MLOAD
0x54d POP
0x54e POP
---
0x540: V490 = 0x0
0x543: REVERT 0x0 0x0
0x544: JUMPDEST 
0x548: V491 = 0x40
0x54a: V492 = M[0x40]
0x54c: V493 = M[V492]
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x54f
[0x54f:0x598]
---
Predecessors: [0x540]
Successors: [0x599]
---
0x54f JUMPDEST
0x550 POP
0x551 POP
0x552 POP
0x553 POP
0x554 JUMP
0x555 JUMPDEST
0x556 PUSH1 0x0
0x558 DUP1
0x559 SLOAD
0x55a PUSH1 0x1
0x55c PUSH1 0xa0
0x55e PUSH1 0x2
0x560 EXP
0x561 SUB
0x562 AND
0x563 PUSH4 0xb269681d
0x568 DUP3
0x569 PUSH1 0x40
0x56b MLOAD
0x56c PUSH1 0x20
0x56e ADD
0x56f MSTORE
0x570 PUSH1 0x40
0x572 MLOAD
0x573 DUP2
0x574 PUSH4 0xffffffff
0x579 AND
0x57a PUSH1 0xe0
0x57c PUSH1 0x2
0x57e EXP
0x57f MUL
0x580 DUP2
0x581 MSTORE
0x582 PUSH1 0x4
0x584 ADD
0x585 PUSH1 0x20
0x587 PUSH1 0x40
0x589 MLOAD
0x58a DUP1
0x58b DUP4
0x58c SUB
0x58d DUP2
0x58e PUSH1 0x0
0x590 DUP8
0x591 DUP1
0x592 EXTCODESIZE
0x593 ISZERO
0x594 ISZERO
0x595 PUSH2 0x40e
0x598 JUMPI
---
0x54f: JUMPDEST 
0x554: JUMP S4
0x555: JUMPDEST 
0x556: V494 = 0x0
0x559: V495 = S[0x0]
0x55a: V496 = 0x1
0x55c: V497 = 0xa0
0x55e: V498 = 0x2
0x560: V499 = EXP 0x2 0xa0
0x561: V500 = SUB 0x10000000000000000000000000000000000000000 0x1
0x562: V501 = AND 0xffffffffffffffffffffffffffffffffffffffff V495
0x563: V502 = 0xb269681d
0x569: V503 = 0x40
0x56b: V504 = M[0x40]
0x56c: V505 = 0x20
0x56e: V506 = ADD 0x20 V504
0x56f: M[V506] = 0x0
0x570: V507 = 0x40
0x572: V508 = M[0x40]
0x574: V509 = 0xffffffff
0x579: V510 = AND 0xffffffff 0xb269681d
0x57a: V511 = 0xe0
0x57c: V512 = 0x2
0x57e: V513 = EXP 0x2 0xe0
0x57f: V514 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xb269681d
0x581: M[V508] = 0xb269681d00000000000000000000000000000000000000000000000000000000
0x582: V515 = 0x4
0x584: V516 = ADD 0x4 V508
0x585: V517 = 0x20
0x587: V518 = 0x40
0x589: V519 = M[0x40]
0x58c: V520 = SUB V516 V519
0x58e: V521 = 0x0
0x592: V522 = EXTCODESIZE V501
0x593: V523 = ISZERO V522
0x594: V524 = ISZERO V523
0x595: V525 = 0x40e
0x598: THROWI V524
---
Entry stack: []
Stack pops: 10
Stack additions: [V501, 0x0, V519, V520, V519, 0x20, V516, 0xb269681d, V501, 0x0]
Exit stack: []

================================

Block 0x599
[0x599:0x5a9]
---
Predecessors: [0x54f]
Successors: [0x5aa]
---
0x599 PUSH1 0x0
0x59b DUP1
0x59c REVERT
0x59d JUMPDEST
0x59e PUSH2 0x2c6
0x5a1 GAS
0x5a2 SUB
0x5a3 CALL
0x5a4 ISZERO
0x5a5 ISZERO
0x5a6 PUSH2 0x41f
0x5a9 JUMPI
---
0x599: V526 = 0x0
0x59c: REVERT 0x0 0x0
0x59d: JUMPDEST 
0x59e: V527 = 0x2c6
0x5a1: V528 = GAS
0x5a2: V529 = SUB V528 0x2c6
0x5a3: V530 = CALL V529 S0 S1 S2 S3 S4 S5
0x5a4: V531 = ISZERO V530
0x5a5: V532 = ISZERO V531
0x5a6: V533 = 0x41f
0x5a9: THROWI V532
---
Entry stack: [0x0, V501, 0xb269681d, V516, 0x20, V519, V520, V519, 0x0, V501]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x5aa
[0x5aa:0x5ea]
---
Predecessors: [0x599]
Successors: [0x5eb]
---
0x5aa PUSH1 0x0
0x5ac DUP1
0x5ad REVERT
0x5ae JUMPDEST
0x5af POP
0x5b0 POP
0x5b1 POP
0x5b2 PUSH1 0x40
0x5b4 MLOAD
0x5b5 DUP1
0x5b6 MLOAD
0x5b7 SWAP2
0x5b8 POP
0x5b9 POP
0x5ba PUSH1 0x1
0x5bc PUSH1 0xa0
0x5be PUSH1 0x2
0x5c0 EXP
0x5c1 SUB
0x5c2 DUP1
0x5c3 DUP3
0x5c4 AND
0x5c5 SWAP1
0x5c6 ADDRESS
0x5c7 AND
0x5c8 BALANCE
0x5c9 DUP1
0x5ca ISZERO
0x5cb PUSH2 0x8fc
0x5ce MUL
0x5cf SWAP1
0x5d0 PUSH1 0x40
0x5d2 MLOAD
0x5d3 PUSH1 0x0
0x5d5 PUSH1 0x40
0x5d7 MLOAD
0x5d8 DUP1
0x5d9 DUP4
0x5da SUB
0x5db DUP2
0x5dc DUP6
0x5dd DUP9
0x5de DUP9
0x5df CALL
0x5e0 SWAP4
0x5e1 POP
0x5e2 POP
0x5e3 POP
0x5e4 POP
0x5e5 ISZERO
0x5e6 ISZERO
0x5e7 PUSH2 0x460
0x5ea JUMPI
---
0x5aa: V534 = 0x0
0x5ad: REVERT 0x0 0x0
0x5ae: JUMPDEST 
0x5b2: V535 = 0x40
0x5b4: V536 = M[0x40]
0x5b6: V537 = M[V536]
0x5ba: V538 = 0x1
0x5bc: V539 = 0xa0
0x5be: V540 = 0x2
0x5c0: V541 = EXP 0x2 0xa0
0x5c1: V542 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5c4: V543 = AND V537 0xffffffffffffffffffffffffffffffffffffffff
0x5c6: V544 = ADDRESS
0x5c7: V545 = AND V544 0xffffffffffffffffffffffffffffffffffffffff
0x5c8: V546 = BALANCE V545
0x5ca: V547 = ISZERO V546
0x5cb: V548 = 0x8fc
0x5ce: V549 = MUL 0x8fc V547
0x5d0: V550 = 0x40
0x5d2: V551 = M[0x40]
0x5d3: V552 = 0x0
0x5d5: V553 = 0x40
0x5d7: V554 = M[0x40]
0x5da: V555 = SUB V551 V554
0x5df: V556 = CALL V549 V543 V546 V554 V555 V554 0x0
0x5e5: V557 = ISZERO V556
0x5e6: V558 = ISZERO V557
0x5e7: V559 = 0x460
0x5ea: THROWI V558
---
Entry stack: []
Stack pops: 0
Stack additions: [V537]
Exit stack: []

================================

Block 0x5eb
[0x5eb:0x680]
---
Predecessors: [0x5aa]
Successors: []
---
0x5eb PUSH1 0x0
0x5ed DUP1
0x5ee REVERT
0x5ef JUMPDEST
0x5f0 POP
0x5f1 JUMP
0x5f2 JUMPDEST
0x5f3 PUSH1 0x0
0x5f5 SLOAD
0x5f6 PUSH1 0x1
0x5f8 PUSH1 0xa0
0x5fa PUSH1 0x2
0x5fc EXP
0x5fd SUB
0x5fe SWAP2
0x5ff DUP3
0x600 AND
0x601 SWAP2
0x602 AND
0x603 EQ
0x604 SWAP1
0x605 JUMP
0x606 JUMPDEST
0x607 PUSH1 0x0
0x609 SLOAD
0x60a PUSH1 0x1
0x60c PUSH1 0xa0
0x60e PUSH1 0x2
0x610 EXP
0x611 SUB
0x612 AND
0x613 DUP2
0x614 JUMP
0x615 STOP
0x616 LOG1
0x617 PUSH6 0x627a7a723058
0x61e SHA3
0x61f XOR
0x620 MISSING 0xa7
0x621 SHA3
0x622 MISSING 0xa6
0x623 MOD
0x624 MISSING 0xf6
0x625 MISSING 0xe4
0x626 MISSING 0xe7
0x627 MISSING 0xba
0x628 MISSING 0xb0
0x629 MISSING 0xfc
0x62a BLOCKHASH
0x62b DUP13
0x62c MISSING 0xec
0x62d JUMP
0x62e ORIGIN
0x62f MISSING 0xc5
0x630 MISSING 0x4a
0x631 SGT
0x632 MISSING 0xd7
0x633 MISSING 0xaf
0x634 PUSH27 0x55ca37bfcf725bcb6fc00029a165627a7a723058208e39d935d3f8
0x650 SWAP13
0x651 MISSING 0x47
0x652 PUSH16 0xb40c1fb9c39717417fc27cf2efdf37c5
0x663 PUSH29 0xdff3ec47e8ef0029
---
0x5eb: V560 = 0x0
0x5ee: REVERT 0x0 0x0
0x5ef: JUMPDEST 
0x5f1: JUMP S1
0x5f2: JUMPDEST 
0x5f3: V561 = 0x0
0x5f5: V562 = S[0x0]
0x5f6: V563 = 0x1
0x5f8: V564 = 0xa0
0x5fa: V565 = 0x2
0x5fc: V566 = EXP 0x2 0xa0
0x5fd: V567 = SUB 0x10000000000000000000000000000000000000000 0x1
0x600: V568 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x602: V569 = AND 0xffffffffffffffffffffffffffffffffffffffff V562
0x603: V570 = EQ V569 V568
0x605: JUMP S1
0x606: JUMPDEST 
0x607: V571 = 0x0
0x609: V572 = S[0x0]
0x60a: V573 = 0x1
0x60c: V574 = 0xa0
0x60e: V575 = 0x2
0x610: V576 = EXP 0x2 0xa0
0x611: V577 = SUB 0x10000000000000000000000000000000000000000 0x1
0x612: V578 = AND 0xffffffffffffffffffffffffffffffffffffffff V572
0x614: JUMP S0
0x615: STOP 
0x616: LOG S0 S1 S2
0x617: V579 = 0x627a7a723058
0x61e: V580 = SHA3 0x627a7a723058 S3
0x61f: V581 = XOR V580 S4
0x620: MISSING 0xa7
0x621: V582 = SHA3 S0 S1
0x622: MISSING 0xa6
0x623: V583 = MOD S0 S1
0x624: MISSING 0xf6
0x625: MISSING 0xe4
0x626: MISSING 0xe7
0x627: MISSING 0xba
0x628: MISSING 0xb0
0x629: MISSING 0xfc
0x62a: V584 = BLOCKHASH S0
0x62c: MISSING 0xec
0x62d: JUMP S0
0x62e: V585 = ORIGIN
0x62f: MISSING 0xc5
0x630: MISSING 0x4a
0x631: V586 = SGT S0 S1
0x632: MISSING 0xd7
0x633: MISSING 0xaf
0x634: V587 = 0x55ca37bfcf725bcb6fc00029a165627a7a723058208e39d935d3f8
0x651: MISSING 0x47
0x652: V588 = 0xb40c1fb9c39717417fc27cf2efdf37c5
0x663: V589 = 0xdff3ec47e8ef0029
---
Entry stack: [V537]
Stack pops: 0
Stack additions: [V570, V578, S0, V581, V582, V583, S12, V584, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, V585, V586, S12, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, 0x55ca37bfcf725bcb6fc00029a165627a7a723058208e39d935d3f8, 0xdff3ec47e8ef0029, 0xb40c1fb9c39717417fc27cf2efdf37c5]
Exit stack: []

================================

Function 0:
Public function signature: 0xe7ffdebd
Entry block: 0x45
Exit block: 0xc0
Body: 0x45, 0x4c, 0x50, 0x77, 0x79, 0x7c, 0x89, 0x91, 0xc0, 0xc4, 0x125, 0x12a

Function 1:
Public fallback function
Entry block: 0x40
Exit block: 0x40
Body: 0x40

