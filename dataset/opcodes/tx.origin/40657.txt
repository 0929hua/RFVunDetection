Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x77]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x77
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x77
0xc: JUMPI 0x77 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x79]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x3853682c
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x79
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x3853682c
0x3b: V13 = EQ V11 0x3853682c
0x3c: V14 = 0x79
0x3f: JUMPI 0x79 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x8c]
---
0x40 DUP1
0x41 PUSH4 0x3afdbd83
0x46 EQ
0x47 PUSH2 0x8c
0x4a JUMPI
---
0x41: V15 = 0x3afdbd83
0x46: V16 = EQ 0x3afdbd83 V11
0x47: V17 = 0x8c
0x4a: JUMPI 0x8c V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x11b]
---
0x4b DUP1
0x4c PUSH4 0x3e3ee859
0x51 EQ
0x52 PUSH2 0x11b
0x55 JUMPI
---
0x4c: V18 = 0x3e3ee859
0x51: V19 = EQ 0x3e3ee859 V11
0x52: V20 = 0x11b
0x55: JUMPI 0x11b V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x169]
---
0x56 DUP1
0x57 PUSH4 0x3fad9ae0
0x5c EQ
0x5d PUSH2 0x169
0x60 JUMPI
---
0x57: V21 = 0x3fad9ae0
0x5c: V22 = EQ 0x3fad9ae0 V11
0x5d: V23 = 0x169
0x60: JUMPI 0x169 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x1f3]
---
0x61 DUP1
0x62 PUSH4 0x59988dce
0x67 EQ
0x68 PUSH2 0x1f3
0x6b JUMPI
---
0x62: V24 = 0x59988dce
0x67: V25 = EQ 0x59988dce V11
0x68: V26 = 0x1f3
0x6b: JUMPI 0x1f3 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x221]
---
0x6c DUP1
0x6d PUSH4 0xf50ab247
0x72 EQ
0x73 PUSH2 0x221
0x76 JUMPI
---
0x6d: V27 = 0xf50ab247
0x72: V28 = EQ 0xf50ab247 V11
0x73: V29 = 0x221
0x76: JUMPI 0x221 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x78]
---
Predecessors: [0x0, 0x6c, 0x29e, 0x32b, 0x388, 0x473, 0x541, 0x55f]
Successors: []
---
0x77 JUMPDEST
0x78 STOP
---
0x77: JUMPDEST 
0x78: STOP 
---
Entry stack: [V11, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x79
[0x79:0x8b]
---
Predecessors: [0xd]
Successors: [0x229]
---
0x79 JUMPDEST
0x7a PUSH2 0x77
0x7d PUSH1 0x4
0x7f DUP1
0x80 CALLDATALOAD
0x81 PUSH1 0x24
0x83 DUP2
0x84 ADD
0x85 SWAP2
0x86 ADD
0x87 CALLDATALOAD
0x88 PUSH2 0x229
0x8b JUMP
---
0x79: JUMPDEST 
0x7a: V30 = 0x77
0x7d: V31 = 0x4
0x80: V32 = CALLDATALOAD 0x4
0x81: V33 = 0x24
0x84: V34 = ADD V32 0x24
0x86: V35 = ADD 0x4 V32
0x87: V36 = CALLDATALOAD V35
0x88: V37 = 0x229
0x8b: JUMP 0x229
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77, V34, V36]
Exit stack: [V11, 0x77, V34, V36]

================================

Block 0x8c
[0x8c:0x11a]
---
Predecessors: [0x40]
Successors: [0x2a2]
---
0x8c JUMPDEST
0x8d PUSH1 0x40
0x8f DUP1
0x90 MLOAD
0x91 PUSH1 0x20
0x93 PUSH1 0x4
0x95 PUSH1 0x24
0x97 DUP1
0x98 CALLDATALOAD
0x99 DUP3
0x9a DUP2
0x9b ADD
0x9c CALLDATALOAD
0x9d PUSH1 0x1f
0x9f DUP2
0xa0 ADD
0xa1 DUP6
0xa2 SWAP1
0xa3 DIV
0xa4 DUP6
0xa5 MUL
0xa6 DUP7
0xa7 ADD
0xa8 DUP6
0xa9 ADD
0xaa SWAP1
0xab SWAP7
0xac MSTORE
0xad DUP6
0xae DUP6
0xaf MSTORE
0xb0 PUSH2 0x77
0xb3 SWAP6
0xb4 DUP4
0xb5 CALLDATALOAD
0xb6 SWAP6
0xb7 CALLDATASIZE
0xb8 SWAP6
0xb9 PUSH1 0x44
0xbb SWAP5
0xbc SWAP2
0xbd SWAP4
0xbe SWAP1
0xbf SWAP2
0xc0 ADD
0xc1 SWAP2
0xc2 SWAP1
0xc3 DUP2
0xc4 SWAP1
0xc5 DUP5
0xc6 ADD
0xc7 DUP4
0xc8 DUP3
0xc9 DUP1
0xca DUP3
0xcb DUP5
0xcc CALLDATACOPY
0xcd POP
0xce POP
0xcf PUSH1 0x40
0xd1 DUP1
0xd2 MLOAD
0xd3 PUSH1 0x20
0xd5 PUSH1 0x1f
0xd7 DUP10
0xd8 CALLDATALOAD
0xd9 DUP12
0xda ADD
0xdb DUP1
0xdc CALLDATALOAD
0xdd SWAP2
0xde DUP3
0xdf ADD
0xe0 DUP4
0xe1 SWAP1
0xe2 DIV
0xe3 DUP4
0xe4 MUL
0xe5 DUP5
0xe6 ADD
0xe7 DUP4
0xe8 ADD
0xe9 SWAP1
0xea SWAP5
0xeb MSTORE
0xec DUP1
0xed DUP4
0xee MSTORE
0xef SWAP8
0xf0 SWAP11
0xf1 SWAP10
0xf2 SWAP9
0xf3 DUP2
0xf4 ADD
0xf5 SWAP8
0xf6 SWAP2
0xf7 SWAP7
0xf8 POP
0xf9 SWAP2
0xfa DUP3
0xfb ADD
0xfc SWAP5
0xfd POP
0xfe SWAP3
0xff POP
0x100 DUP3
0x101 SWAP2
0x102 POP
0x103 DUP5
0x104 ADD
0x105 DUP4
0x106 DUP3
0x107 DUP1
0x108 DUP3
0x109 DUP5
0x10a CALLDATACOPY
0x10b POP
0x10c SWAP5
0x10d SWAP8
0x10e POP
0x10f PUSH2 0x2a2
0x112 SWAP7
0x113 POP
0x114 POP
0x115 POP
0x116 POP
0x117 POP
0x118 POP
0x119 POP
0x11a JUMP
---
0x8c: JUMPDEST 
0x8d: V38 = 0x40
0x90: V39 = M[0x40]
0x91: V40 = 0x20
0x93: V41 = 0x4
0x95: V42 = 0x24
0x98: V43 = CALLDATALOAD 0x24
0x9b: V44 = ADD V43 0x4
0x9c: V45 = CALLDATALOAD V44
0x9d: V46 = 0x1f
0xa0: V47 = ADD V45 0x1f
0xa3: V48 = DIV V47 0x20
0xa5: V49 = MUL 0x20 V48
0xa7: V50 = ADD V39 V49
0xa9: V51 = ADD 0x20 V50
0xac: M[0x40] = V51
0xaf: M[V39] = V45
0xb0: V52 = 0x77
0xb5: V53 = CALLDATALOAD 0x4
0xb7: V54 = CALLDATASIZE
0xb9: V55 = 0x44
0xc0: V56 = ADD 0x24 V43
0xc6: V57 = ADD V39 0x20
0xcc: CALLDATACOPY V57 V56 V45
0xcf: V58 = 0x40
0xd2: V59 = M[0x40]
0xd3: V60 = 0x20
0xd5: V61 = 0x1f
0xd8: V62 = CALLDATALOAD 0x44
0xda: V63 = ADD 0x4 V62
0xdc: V64 = CALLDATALOAD V63
0xdf: V65 = ADD V64 0x1f
0xe2: V66 = DIV V65 0x20
0xe4: V67 = MUL 0x20 V66
0xe6: V68 = ADD V59 V67
0xe8: V69 = ADD 0x20 V68
0xeb: M[0x40] = V69
0xee: M[V59] = V64
0xf4: V70 = ADD 0x20 0x44
0xfb: V71 = ADD 0x20 V63
0x104: V72 = ADD V59 0x20
0x10a: CALLDATACOPY V72 V71 V64
0x10f: V73 = 0x2a2
0x11a: JUMP 0x2a2
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77, V53, V39, V59]
Exit stack: [V11, 0x77, V53, V39, V59]

================================

Block 0x11b
[0x11b:0x168]
---
Predecessors: [0x4b]
Successors: [0x355]
---
0x11b JUMPDEST
0x11c PUSH1 0x40
0x11e DUP1
0x11f MLOAD
0x120 PUSH1 0x20
0x122 PUSH1 0x4
0x124 DUP1
0x125 CALLDATALOAD
0x126 DUP1
0x127 DUP3
0x128 ADD
0x129 CALLDATALOAD
0x12a PUSH1 0x1f
0x12c DUP2
0x12d ADD
0x12e DUP5
0x12f SWAP1
0x130 DIV
0x131 DUP5
0x132 MUL
0x133 DUP6
0x134 ADD
0x135 DUP5
0x136 ADD
0x137 SWAP1
0x138 SWAP6
0x139 MSTORE
0x13a DUP5
0x13b DUP5
0x13c MSTORE
0x13d PUSH2 0x77
0x140 SWAP5
0x141 CALLDATASIZE
0x142 SWAP5
0x143 SWAP3
0x144 SWAP4
0x145 PUSH1 0x24
0x147 SWAP4
0x148 SWAP3
0x149 DUP5
0x14a ADD
0x14b SWAP2
0x14c SWAP1
0x14d DUP2
0x14e SWAP1
0x14f DUP5
0x150 ADD
0x151 DUP4
0x152 DUP3
0x153 DUP1
0x154 DUP3
0x155 DUP5
0x156 CALLDATACOPY
0x157 POP
0x158 SWAP5
0x159 SWAP8
0x15a POP
0x15b POP
0x15c SWAP4
0x15d CALLDATALOAD
0x15e SWAP5
0x15f POP
0x160 PUSH2 0x355
0x163 SWAP4
0x164 POP
0x165 POP
0x166 POP
0x167 POP
0x168 JUMP
---
0x11b: JUMPDEST 
0x11c: V74 = 0x40
0x11f: V75 = M[0x40]
0x120: V76 = 0x20
0x122: V77 = 0x4
0x125: V78 = CALLDATALOAD 0x4
0x128: V79 = ADD 0x4 V78
0x129: V80 = CALLDATALOAD V79
0x12a: V81 = 0x1f
0x12d: V82 = ADD V80 0x1f
0x130: V83 = DIV V82 0x20
0x132: V84 = MUL 0x20 V83
0x134: V85 = ADD V75 V84
0x136: V86 = ADD 0x20 V85
0x139: M[0x40] = V86
0x13c: M[V75] = V80
0x13d: V87 = 0x77
0x141: V88 = CALLDATASIZE
0x145: V89 = 0x24
0x14a: V90 = ADD 0x24 V78
0x150: V91 = ADD V75 0x20
0x156: CALLDATACOPY V91 V90 V80
0x15d: V92 = CALLDATALOAD 0x24
0x160: V93 = 0x355
0x168: JUMP 0x355
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77, V75, V92]
Exit stack: [V11, 0x77, V75, V92]

================================

Block 0x169
[0x169:0x170]
---
Predecessors: [0x56]
Successors: [0x171, 0x175]
---
0x169 JUMPDEST
0x16a CALLVALUE
0x16b DUP1
0x16c ISZERO
0x16d PUSH2 0x175
0x170 JUMPI
---
0x169: JUMPDEST 
0x16a: V94 = CALLVALUE
0x16c: V95 = ISZERO V94
0x16d: V96 = 0x175
0x170: JUMPI 0x175 V95
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V94]
Exit stack: [V11, V94]

================================

Block 0x171
[0x171:0x174]
---
Predecessors: [0x169]
Successors: []
---
0x171 PUSH1 0x0
0x173 DUP1
0x174 REVERT
---
0x171: V97 = 0x0
0x174: REVERT 0x0 0x0
---
Entry stack: [V11, V94]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V94]

================================

Block 0x175
[0x175:0x17d]
---
Predecessors: [0x169]
Successors: [0x38f]
---
0x175 JUMPDEST
0x176 POP
0x177 PUSH2 0x17e
0x17a PUSH2 0x38f
0x17d JUMP
---
0x175: JUMPDEST 
0x177: V98 = 0x17e
0x17a: V99 = 0x38f
0x17d: JUMP 0x38f
---
Entry stack: [V11, V94]
Stack pops: 1
Stack additions: [0x17e]
Exit stack: [V11, 0x17e]

================================

Block 0x17e
[0x17e:0x19f]
---
Predecessors: [0x415]
Successors: [0x1a0]
---
0x17e JUMPDEST
0x17f PUSH1 0x40
0x181 DUP1
0x182 MLOAD
0x183 PUSH1 0x20
0x185 DUP1
0x186 DUP3
0x187 MSTORE
0x188 DUP4
0x189 MLOAD
0x18a DUP2
0x18b DUP4
0x18c ADD
0x18d MSTORE
0x18e DUP4
0x18f MLOAD
0x190 SWAP2
0x191 SWAP3
0x192 DUP4
0x193 SWAP3
0x194 SWAP1
0x195 DUP4
0x196 ADD
0x197 SWAP2
0x198 DUP6
0x199 ADD
0x19a SWAP1
0x19b DUP1
0x19c DUP4
0x19d DUP4
0x19e PUSH1 0x0
---
0x17e: JUMPDEST 
0x17f: V100 = 0x40
0x182: V101 = M[0x40]
0x183: V102 = 0x20
0x187: M[V101] = 0x20
0x189: V103 = M[V268]
0x18c: V104 = ADD V101 0x20
0x18d: M[V104] = V103
0x18f: V105 = M[V268]
0x196: V106 = ADD V101 0x40
0x199: V107 = ADD V268 0x20
0x19e: V108 = 0x0
---
Entry stack: [V11, 0x17e, V268]
Stack pops: 1
Stack additions: [S0, V101, V101, V106, V107, V105, V105, V106, V107, 0x0]
Exit stack: [V11, 0x17e, V268, V101, V101, V106, V107, V105, V105, V106, V107, 0x0]

================================

Block 0x1a0
[0x1a0:0x1a8]
---
Predecessors: [0x17e, 0x1a9]
Successors: [0x1a9, 0x1b8]
---
0x1a0 JUMPDEST
0x1a1 DUP4
0x1a2 DUP2
0x1a3 LT
0x1a4 ISZERO
0x1a5 PUSH2 0x1b8
0x1a8 JUMPI
---
0x1a0: JUMPDEST 
0x1a3: V109 = LT S0 V105
0x1a4: V110 = ISZERO V109
0x1a5: V111 = 0x1b8
0x1a8: JUMPI 0x1b8 V110
---
Entry stack: [V11, 0x17e, V268, V101, V101, V106, V107, V105, V105, V106, V107, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x17e, V268, V101, V101, V106, V107, V105, V105, V106, V107, S0]

================================

Block 0x1a9
[0x1a9:0x1b7]
---
Predecessors: [0x1a0]
Successors: [0x1a0]
---
0x1a9 DUP2
0x1aa DUP2
0x1ab ADD
0x1ac MLOAD
0x1ad DUP4
0x1ae DUP3
0x1af ADD
0x1b0 MSTORE
0x1b1 PUSH1 0x20
0x1b3 ADD
0x1b4 PUSH2 0x1a0
0x1b7 JUMP
---
0x1ab: V112 = ADD S0 V107
0x1ac: V113 = M[V112]
0x1af: V114 = ADD S0 V106
0x1b0: M[V114] = V113
0x1b1: V115 = 0x20
0x1b3: V116 = ADD 0x20 S0
0x1b4: V117 = 0x1a0
0x1b7: JUMP 0x1a0
---
Entry stack: [V11, 0x17e, V268, V101, V101, V106, V107, V105, V105, V106, V107, S0]
Stack pops: 3
Stack additions: [S2, S1, V116]
Exit stack: [V11, 0x17e, V268, V101, V101, V106, V107, V105, V105, V106, V107, V116]

================================

Block 0x1b8
[0x1b8:0x1cb]
---
Predecessors: [0x1a0]
Successors: [0x1cc, 0x1e5]
---
0x1b8 JUMPDEST
0x1b9 POP
0x1ba POP
0x1bb POP
0x1bc POP
0x1bd SWAP1
0x1be POP
0x1bf SWAP1
0x1c0 DUP2
0x1c1 ADD
0x1c2 SWAP1
0x1c3 PUSH1 0x1f
0x1c5 AND
0x1c6 DUP1
0x1c7 ISZERO
0x1c8 PUSH2 0x1e5
0x1cb JUMPI
---
0x1b8: JUMPDEST 
0x1c1: V118 = ADD V105 V106
0x1c3: V119 = 0x1f
0x1c5: V120 = AND 0x1f V105
0x1c7: V121 = ISZERO V120
0x1c8: V122 = 0x1e5
0x1cb: JUMPI 0x1e5 V121
---
Entry stack: [V11, 0x17e, V268, V101, V101, V106, V107, V105, V105, V106, V107, S0]
Stack pops: 7
Stack additions: [V118, V120]
Exit stack: [V11, 0x17e, V268, V101, V101, V118, V120]

================================

Block 0x1cc
[0x1cc:0x1e4]
---
Predecessors: [0x1b8]
Successors: [0x1e5]
---
0x1cc DUP1
0x1cd DUP3
0x1ce SUB
0x1cf DUP1
0x1d0 MLOAD
0x1d1 PUSH1 0x1
0x1d3 DUP4
0x1d4 PUSH1 0x20
0x1d6 SUB
0x1d7 PUSH2 0x100
0x1da EXP
0x1db SUB
0x1dc NOT
0x1dd AND
0x1de DUP2
0x1df MSTORE
0x1e0 PUSH1 0x20
0x1e2 ADD
0x1e3 SWAP2
0x1e4 POP
---
0x1ce: V123 = SUB V118 V120
0x1d0: V124 = M[V123]
0x1d1: V125 = 0x1
0x1d4: V126 = 0x20
0x1d6: V127 = SUB 0x20 V120
0x1d7: V128 = 0x100
0x1da: V129 = EXP 0x100 V127
0x1db: V130 = SUB V129 0x1
0x1dc: V131 = NOT V130
0x1dd: V132 = AND V131 V124
0x1df: M[V123] = V132
0x1e0: V133 = 0x20
0x1e2: V134 = ADD 0x20 V123
---
Entry stack: [V11, 0x17e, V268, V101, V101, V118, V120]
Stack pops: 2
Stack additions: [V134, S0]
Exit stack: [V11, 0x17e, V268, V101, V101, V134, V120]

================================

Block 0x1e5
[0x1e5:0x1f2]
---
Predecessors: [0x1b8, 0x1cc]
Successors: []
---
0x1e5 JUMPDEST
0x1e6 POP
0x1e7 SWAP3
0x1e8 POP
0x1e9 POP
0x1ea POP
0x1eb PUSH1 0x40
0x1ed MLOAD
0x1ee DUP1
0x1ef SWAP2
0x1f0 SUB
0x1f1 SWAP1
0x1f2 RETURN
---
0x1e5: JUMPDEST 
0x1eb: V135 = 0x40
0x1ed: V136 = M[0x40]
0x1f0: V137 = SUB S1 V136
0x1f2: RETURN V136 V137
---
Entry stack: [V11, 0x17e, V268, V101, V101, S1, V120]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x17e]

================================

Block 0x1f3
[0x1f3:0x1fa]
---
Predecessors: [0x61]
Successors: [0x1fb, 0x1ff]
---
0x1f3 JUMPDEST
0x1f4 CALLVALUE
0x1f5 DUP1
0x1f6 ISZERO
0x1f7 PUSH2 0x1ff
0x1fa JUMPI
---
0x1f3: JUMPDEST 
0x1f4: V138 = CALLVALUE
0x1f6: V139 = ISZERO V138
0x1f7: V140 = 0x1ff
0x1fa: JUMPI 0x1ff V139
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V138]
Exit stack: [V11, V138]

================================

Block 0x1fb
[0x1fb:0x1fe]
---
Predecessors: [0x1f3]
Successors: []
---
0x1fb PUSH1 0x0
0x1fd DUP1
0x1fe REVERT
---
0x1fb: V141 = 0x0
0x1fe: REVERT 0x0 0x0
---
Entry stack: [V11, V138]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V138]

================================

Block 0x1ff
[0x1ff:0x220]
---
Predecessors: [0x1f3]
Successors: [0x41d]
---
0x1ff JUMPDEST
0x200 POP
0x201 PUSH2 0x77
0x204 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x219 PUSH1 0x4
0x21b CALLDATALOAD
0x21c AND
0x21d PUSH2 0x41d
0x220 JUMP
---
0x1ff: JUMPDEST 
0x201: V142 = 0x77
0x204: V143 = 0xffffffffffffffffffffffffffffffffffffffff
0x219: V144 = 0x4
0x21b: V145 = CALLDATALOAD 0x4
0x21c: V146 = AND V145 0xffffffffffffffffffffffffffffffffffffffff
0x21d: V147 = 0x41d
0x220: JUMP 0x41d
---
Entry stack: [V11, V138]
Stack pops: 1
Stack additions: [0x77, V146]
Exit stack: [V11, 0x77, V146]

================================

Block 0x221
[0x221:0x228]
---
Predecessors: [0x6c]
Successors: [0x476]
---
0x221 JUMPDEST
0x222 PUSH2 0x77
0x225 PUSH2 0x476
0x228 JUMP
---
0x221: JUMPDEST 
0x222: V148 = 0x77
0x225: V149 = 0x476
0x228: JUMP 0x476
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77]
Exit stack: [V11, 0x77]

================================

Block 0x229
[0x229:0x230]
---
Predecessors: [0x79]
Successors: [0x231, 0x235]
---
0x229 JUMPDEST
0x22a CALLER
0x22b ORIGIN
0x22c EQ
0x22d PUSH2 0x235
0x230 JUMPI
---
0x229: JUMPDEST 
0x22a: V150 = CALLER
0x22b: V151 = ORIGIN
0x22c: V152 = EQ V151 V150
0x22d: V153 = 0x235
0x230: JUMPI 0x235 V152
---
Entry stack: [V11, 0x77, V34, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V34, V36]

================================

Block 0x231
[0x231:0x234]
---
Predecessors: [0x229]
Successors: []
---
0x231 PUSH1 0x0
0x233 DUP1
0x234 REVERT
---
0x231: V154 = 0x0
0x234: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, V34, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V34, V36]

================================

Block 0x235
[0x235:0x25d]
---
Predecessors: [0x229]
Successors: [0x25e, 0x26a]
---
0x235 JUMPDEST
0x236 DUP2
0x237 DUP2
0x238 PUSH1 0x40
0x23a MLOAD
0x23b DUP1
0x23c DUP4
0x23d DUP4
0x23e DUP1
0x23f DUP3
0x240 DUP5
0x241 CALLDATACOPY
0x242 PUSH1 0x40
0x244 MLOAD
0x245 SWAP3
0x246 ADD
0x247 DUP3
0x248 SWAP1
0x249 SUB
0x24a SWAP1
0x24b SWAP2
0x24c SHA3
0x24d PUSH1 0x2
0x24f SLOAD
0x250 EQ
0x251 SWAP4
0x252 POP
0x253 POP
0x254 DUP3
0x255 ISZERO
0x256 SWAP2
0x257 POP
0x258 PUSH2 0x26a
0x25b SWAP1
0x25c POP
0x25d JUMPI
---
0x235: JUMPDEST 
0x238: V155 = 0x40
0x23a: V156 = M[0x40]
0x241: CALLDATACOPY V156 V34 V36
0x242: V157 = 0x40
0x244: V158 = M[0x40]
0x246: V159 = ADD V156 V36
0x249: V160 = SUB V159 V158
0x24c: V161 = SHA3 V158 V160
0x24d: V162 = 0x2
0x24f: V163 = S[0x2]
0x250: V164 = EQ V163 V161
0x255: V165 = ISZERO V164
0x258: V166 = 0x26a
0x25d: JUMPI 0x26a V165
---
Entry stack: [V11, 0x77, V34, V36]
Stack pops: 2
Stack additions: [S1, S0, V164]
Exit stack: [V11, 0x77, V34, V36, V164]

================================

Block 0x25e
[0x25e:0x269]
---
Predecessors: [0x235]
Successors: [0x26a]
---
0x25e POP
0x25f PUSH8 0x1bc16d674ec80000
0x268 CALLVALUE
0x269 GT
---
0x25f: V167 = 0x1bc16d674ec80000
0x268: V168 = CALLVALUE
0x269: V169 = GT V168 0x1bc16d674ec80000
---
Entry stack: [V11, 0x77, V34, V36, V164]
Stack pops: 1
Stack additions: [V169]
Exit stack: [V11, 0x77, V34, V36, V169]

================================

Block 0x26a
[0x26a:0x26f]
---
Predecessors: [0x235, 0x25e]
Successors: [0x270, 0x29e]
---
0x26a JUMPDEST
0x26b ISZERO
0x26c PUSH2 0x29e
0x26f JUMPI
---
0x26a: JUMPDEST 
0x26b: V170 = ISZERO S0
0x26c: V171 = 0x29e
0x26f: JUMPI 0x29e V170
---
Entry stack: [V11, 0x77, V34, V36, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x77, V34, V36]

================================

Block 0x270
[0x270:0x292]
---
Predecessors: [0x26a]
Successors: [0x293, 0x29c]
---
0x270 PUSH1 0x40
0x272 MLOAD
0x273 CALLER
0x274 SWAP1
0x275 ADDRESS
0x276 BALANCE
0x277 DUP1
0x278 ISZERO
0x279 PUSH2 0x8fc
0x27c MUL
0x27d SWAP2
0x27e PUSH1 0x0
0x280 DUP2
0x281 DUP2
0x282 DUP2
0x283 DUP6
0x284 DUP9
0x285 DUP9
0x286 CALL
0x287 SWAP4
0x288 POP
0x289 POP
0x28a POP
0x28b POP
0x28c ISZERO
0x28d DUP1
0x28e ISZERO
0x28f PUSH2 0x29c
0x292 JUMPI
---
0x270: V172 = 0x40
0x272: V173 = M[0x40]
0x273: V174 = CALLER
0x275: V175 = ADDRESS
0x276: V176 = BALANCE V175
0x278: V177 = ISZERO V176
0x279: V178 = 0x8fc
0x27c: V179 = MUL 0x8fc V177
0x27e: V180 = 0x0
0x286: V181 = CALL V179 V174 V176 V173 0x0 V173 0x0
0x28c: V182 = ISZERO V181
0x28e: V183 = ISZERO V182
0x28f: V184 = 0x29c
0x292: JUMPI 0x29c V183
---
Entry stack: [V11, 0x77, V34, V36]
Stack pops: 0
Stack additions: [V182]
Exit stack: [V11, 0x77, V34, V36, V182]

================================

Block 0x293
[0x293:0x29b]
---
Predecessors: [0x270]
Successors: []
---
0x293 RETURNDATASIZE
0x294 PUSH1 0x0
0x296 DUP1
0x297 RETURNDATACOPY
0x298 RETURNDATASIZE
0x299 PUSH1 0x0
0x29b REVERT
---
0x293: V185 = RETURNDATASIZE
0x294: V186 = 0x0
0x297: RETURNDATACOPY 0x0 0x0 V185
0x298: V187 = RETURNDATASIZE
0x299: V188 = 0x0
0x29b: REVERT 0x0 V187
---
Entry stack: [V11, 0x77, V34, V36, V182]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V34, V36, V182]

================================

Block 0x29c
[0x29c:0x29d]
---
Predecessors: [0x270, 0x2a2]
Successors: [0x29e]
---
0x29c JUMPDEST
0x29d POP
---
0x29c: JUMPDEST 
---
Entry stack: [V11, 0x77, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x77, S2, S1]

================================

Block 0x29e
[0x29e:0x2a1]
---
Predecessors: [0x26a, 0x29c, 0x355]
Successors: [0x77]
---
0x29e JUMPDEST
0x29f POP
0x2a0 POP
0x2a1 JUMP
---
0x29e: JUMPDEST 
0x2a1: JUMP 0x77
---
Entry stack: [V11, 0x77, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x2a2
[0x2a2:0x2bd]
---
Predecessors: [0x8c]
Successors: [0x29c, 0x2be]
---
0x2a2 JUMPDEST
0x2a3 PUSH1 0x3
0x2a5 SLOAD
0x2a6 PUSH1 0x40
0x2a8 DUP1
0x2a9 MLOAD
0x2aa DUP6
0x2ab DUP2
0x2ac MSTORE
0x2ad SWAP1
0x2ae MLOAD
0x2af SWAP1
0x2b0 DUP2
0x2b1 SWAP1
0x2b2 SUB
0x2b3 PUSH1 0x20
0x2b5 ADD
0x2b6 SWAP1
0x2b7 SHA3
0x2b8 EQ
0x2b9 ISZERO
0x2ba PUSH2 0x29c
0x2bd JUMPI
---
0x2a2: JUMPDEST 
0x2a3: V189 = 0x3
0x2a5: V190 = S[0x3]
0x2a6: V191 = 0x40
0x2a9: V192 = M[0x40]
0x2ac: M[V192] = V53
0x2ae: V193 = M[0x40]
0x2b2: V194 = SUB V192 V193
0x2b3: V195 = 0x20
0x2b5: V196 = ADD 0x20 V194
0x2b7: V197 = SHA3 V193 V196
0x2b8: V198 = EQ V197 V190
0x2b9: V199 = ISZERO V198
0x2ba: V200 = 0x29c
0x2bd: JUMPI 0x29c V199
---
Entry stack: [V11, 0x77, V53, V39, V59]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x77, V53, V39, V59]

================================

Block 0x2be
[0x2be:0x2cd]
---
Predecessors: [0x2a2]
Successors: [0x2ce]
---
0x2be DUP1
0x2bf PUSH1 0x40
0x2c1 MLOAD
0x2c2 DUP1
0x2c3 DUP3
0x2c4 DUP1
0x2c5 MLOAD
0x2c6 SWAP1
0x2c7 PUSH1 0x20
0x2c9 ADD
0x2ca SWAP1
0x2cb DUP1
0x2cc DUP4
0x2cd DUP4
---
0x2bf: V201 = 0x40
0x2c1: V202 = M[0x40]
0x2c5: V203 = M[V59]
0x2c7: V204 = 0x20
0x2c9: V205 = ADD 0x20 V59
---
Entry stack: [V11, 0x77, V53, V39, V59]
Stack pops: 1
Stack additions: [S0, S0, V202, V202, V205, V203, V203, V202, V205]
Exit stack: [V11, 0x77, V53, V39, V59, V59, V202, V202, V205, V203, V203, V202, V205]

================================

Block 0x2ce
[0x2ce:0x2d6]
---
Predecessors: [0x2be, 0x2d7]
Successors: [0x2d7, 0x2ed]
---
0x2ce JUMPDEST
0x2cf PUSH1 0x20
0x2d1 DUP4
0x2d2 LT
0x2d3 PUSH2 0x2ed
0x2d6 JUMPI
---
0x2ce: JUMPDEST 
0x2cf: V206 = 0x20
0x2d2: V207 = LT S2 0x20
0x2d3: V208 = 0x2ed
0x2d6: JUMPI 0x2ed V207
---
Entry stack: [V11, 0x77, V53, V39, V59, V59, V202, V202, V205, V203, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x77, V53, V39, V59, V59, V202, V202, V205, V203, S2, S1, S0]

================================

Block 0x2d7
[0x2d7:0x2ec]
---
Predecessors: [0x2ce]
Successors: [0x2ce]
---
0x2d7 DUP1
0x2d8 MLOAD
0x2d9 DUP3
0x2da MSTORE
0x2db PUSH1 0x1f
0x2dd NOT
0x2de SWAP1
0x2df SWAP3
0x2e0 ADD
0x2e1 SWAP2
0x2e2 PUSH1 0x20
0x2e4 SWAP2
0x2e5 DUP3
0x2e6 ADD
0x2e7 SWAP2
0x2e8 ADD
0x2e9 PUSH2 0x2ce
0x2ec JUMP
---
0x2d8: V209 = M[S0]
0x2da: M[S1] = V209
0x2db: V210 = 0x1f
0x2dd: V211 = NOT 0x1f
0x2e0: V212 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x2e2: V213 = 0x20
0x2e6: V214 = ADD 0x20 S1
0x2e8: V215 = ADD 0x20 S0
0x2e9: V216 = 0x2ce
0x2ec: JUMP 0x2ce
---
Entry stack: [V11, 0x77, V53, V39, V59, V59, V202, V202, V205, V203, S2, S1, S0]
Stack pops: 3
Stack additions: [V212, V214, V215]
Exit stack: [V11, 0x77, V53, V39, V59, V59, V202, V202, V205, V203, V212, V214, V215]

================================

Block 0x2ed
[0x2ed:0x32a]
---
Predecessors: [0x2ce]
Successors: [0x4c7]
---
0x2ed JUMPDEST
0x2ee MLOAD
0x2ef DUP2
0x2f0 MLOAD
0x2f1 PUSH1 0x20
0x2f3 SWAP4
0x2f4 DUP5
0x2f5 SUB
0x2f6 PUSH2 0x100
0x2f9 EXP
0x2fa PUSH1 0x0
0x2fc NOT
0x2fd ADD
0x2fe DUP1
0x2ff NOT
0x300 SWAP1
0x301 SWAP3
0x302 AND
0x303 SWAP2
0x304 AND
0x305 OR
0x306 SWAP1
0x307 MSTORE
0x308 PUSH1 0x40
0x30a MLOAD
0x30b SWAP2
0x30c SWAP1
0x30d SWAP4
0x30e ADD
0x30f DUP2
0x310 SWAP1
0x311 SUB
0x312 SWAP1
0x313 SHA3
0x314 PUSH1 0x2
0x316 SSTORE
0x317 POP
0x318 DUP5
0x319 MLOAD
0x31a PUSH2 0x32b
0x31d SWAP4
0x31e POP
0x31f PUSH1 0x0
0x321 SWAP3
0x322 POP
0x323 SWAP1
0x324 DUP6
0x325 ADD
0x326 SWAP1
0x327 PUSH2 0x4c7
0x32a JUMP
---
0x2ed: JUMPDEST 
0x2ee: V217 = M[S0]
0x2f0: V218 = M[S1]
0x2f1: V219 = 0x20
0x2f5: V220 = SUB 0x20 S2
0x2f6: V221 = 0x100
0x2f9: V222 = EXP 0x100 V220
0x2fa: V223 = 0x0
0x2fc: V224 = NOT 0x0
0x2fd: V225 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V222
0x2ff: V226 = NOT V225
0x302: V227 = AND V217 V226
0x304: V228 = AND V225 V218
0x305: V229 = OR V228 V227
0x307: M[S1] = V229
0x308: V230 = 0x40
0x30a: V231 = M[0x40]
0x30e: V232 = ADD V202 V203
0x311: V233 = SUB V232 V231
0x313: V234 = SHA3 V231 V233
0x314: V235 = 0x2
0x316: S[0x2] = V234
0x319: V236 = M[V39]
0x31a: V237 = 0x32b
0x31f: V238 = 0x0
0x325: V239 = ADD V39 0x20
0x327: V240 = 0x4c7
0x32a: JUMP 0x4c7
---
Entry stack: [V11, 0x77, V53, V39, V59, V59, V202, V202, V205, V203, S2, S1, S0]
Stack pops: 10
Stack additions: [S9, S8, 0x32b, 0x0, V239, V236]
Exit stack: [V11, 0x77, V53, V39, V59, 0x32b, 0x0, V239, V236]

================================

Block 0x32b
[0x32b:0x354]
---
Predecessors: [0x388, 0x541]
Successors: [0x77]
---
0x32b JUMPDEST
0x32c POP
0x32d PUSH1 0x1
0x32f DUP1
0x330 SLOAD
0x331 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x346 NOT
0x347 AND
0x348 CALLER
0x349 OR
0x34a SWAP1
0x34b SSTORE
0x34c PUSH1 0x0
0x34e PUSH1 0x3
0x350 SSTORE
0x351 POP
0x352 POP
0x353 POP
0x354 JUMP
---
0x32b: JUMPDEST 
0x32d: V241 = 0x1
0x330: V242 = S[0x1]
0x331: V243 = 0xffffffffffffffffffffffffffffffffffffffff
0x346: V244 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x347: V245 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V242
0x348: V246 = CALLER
0x349: V247 = OR V246 V245
0x34b: S[0x1] = V247
0x34c: V248 = 0x0
0x34e: V249 = 0x3
0x350: S[0x3] = 0x0
0x354: JUMP S4
---
Entry stack: [V11, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V11, S7, S6, S5]

================================

Block 0x355
[0x355:0x375]
---
Predecessors: [0x11b]
Successors: [0x29e, 0x376]
---
0x355 JUMPDEST
0x356 PUSH1 0x1
0x358 SLOAD
0x359 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x36e AND
0x36f CALLER
0x370 EQ
0x371 ISZERO
0x372 PUSH2 0x29e
0x375 JUMPI
---
0x355: JUMPDEST 
0x356: V250 = 0x1
0x358: V251 = S[0x1]
0x359: V252 = 0xffffffffffffffffffffffffffffffffffffffff
0x36e: V253 = AND 0xffffffffffffffffffffffffffffffffffffffff V251
0x36f: V254 = CALLER
0x370: V255 = EQ V254 V253
0x371: V256 = ISZERO V255
0x372: V257 = 0x29e
0x375: JUMPI 0x29e V256
---
Entry stack: [V11, 0x77, V75, V92]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V75, V92]

================================

Block 0x376
[0x376:0x387]
---
Predecessors: [0x355]
Successors: [0x4c7]
---
0x376 DUP2
0x377 MLOAD
0x378 PUSH2 0x388
0x37b SWAP1
0x37c PUSH1 0x0
0x37e SWAP1
0x37f PUSH1 0x20
0x381 DUP6
0x382 ADD
0x383 SWAP1
0x384 PUSH2 0x4c7
0x387 JUMP
---
0x377: V258 = M[V75]
0x378: V259 = 0x388
0x37c: V260 = 0x0
0x37f: V261 = 0x20
0x382: V262 = ADD V75 0x20
0x384: V263 = 0x4c7
0x387: JUMP 0x4c7
---
Entry stack: [V11, 0x77, V75, V92]
Stack pops: 2
Stack additions: [S1, S0, 0x388, 0x0, V262, V258]
Exit stack: [V11, 0x77, V75, V92, 0x388, 0x0, V262, V258]

================================

Block 0x388
[0x388:0x38e]
---
Predecessors: [0x388, 0x541]
Successors: [0x77, 0x32b, 0x388]
---
0x388 JUMPDEST
0x389 POP
0x38a PUSH1 0x2
0x38c SSTORE
0x38d POP
0x38e JUMP
---
0x388: JUMPDEST 
0x38a: V264 = 0x2
0x38c: S[0x2] = S1
0x38e: JUMP S3
---
Entry stack: [V11, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, S7, S6, S5, S4]

================================

Block 0x38f
[0x38f:0x3ce]
---
Predecessors: [0x175]
Successors: [0x3cf, 0x415]
---
0x38f JUMPDEST
0x390 PUSH1 0x0
0x392 DUP1
0x393 SLOAD
0x394 PUSH1 0x40
0x396 DUP1
0x397 MLOAD
0x398 PUSH1 0x20
0x39a PUSH1 0x2
0x39c PUSH1 0x1
0x39e DUP6
0x39f AND
0x3a0 ISZERO
0x3a1 PUSH2 0x100
0x3a4 MUL
0x3a5 PUSH1 0x0
0x3a7 NOT
0x3a8 ADD
0x3a9 SWAP1
0x3aa SWAP5
0x3ab AND
0x3ac SWAP4
0x3ad SWAP1
0x3ae SWAP4
0x3af DIV
0x3b0 PUSH1 0x1f
0x3b2 DUP2
0x3b3 ADD
0x3b4 DUP5
0x3b5 SWAP1
0x3b6 DIV
0x3b7 DUP5
0x3b8 MUL
0x3b9 DUP3
0x3ba ADD
0x3bb DUP5
0x3bc ADD
0x3bd SWAP1
0x3be SWAP3
0x3bf MSTORE
0x3c0 DUP2
0x3c1 DUP2
0x3c2 MSTORE
0x3c3 SWAP3
0x3c4 SWAP2
0x3c5 DUP4
0x3c6 ADD
0x3c7 DUP3
0x3c8 DUP3
0x3c9 DUP1
0x3ca ISZERO
0x3cb PUSH2 0x415
0x3ce JUMPI
---
0x38f: JUMPDEST 
0x390: V265 = 0x0
0x393: V266 = S[0x0]
0x394: V267 = 0x40
0x397: V268 = M[0x40]
0x398: V269 = 0x20
0x39a: V270 = 0x2
0x39c: V271 = 0x1
0x39f: V272 = AND V266 0x1
0x3a0: V273 = ISZERO V272
0x3a1: V274 = 0x100
0x3a4: V275 = MUL 0x100 V273
0x3a5: V276 = 0x0
0x3a7: V277 = NOT 0x0
0x3a8: V278 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V275
0x3ab: V279 = AND V266 V278
0x3af: V280 = DIV V279 0x2
0x3b0: V281 = 0x1f
0x3b3: V282 = ADD V280 0x1f
0x3b6: V283 = DIV V282 0x20
0x3b8: V284 = MUL 0x20 V283
0x3ba: V285 = ADD V268 V284
0x3bc: V286 = ADD 0x20 V285
0x3bf: M[0x40] = V286
0x3c2: M[V268] = V280
0x3c6: V287 = ADD V268 0x20
0x3ca: V288 = ISZERO V280
0x3cb: V289 = 0x415
0x3ce: JUMPI 0x415 V288
---
Entry stack: [V11, 0x17e]
Stack pops: 0
Stack additions: [V268, 0x0, V280, V287, 0x0, V280]
Exit stack: [V11, 0x17e, V268, 0x0, V280, V287, 0x0, V280]

================================

Block 0x3cf
[0x3cf:0x3d6]
---
Predecessors: [0x38f]
Successors: [0x3d7, 0x3ea]
---
0x3cf DUP1
0x3d0 PUSH1 0x1f
0x3d2 LT
0x3d3 PUSH2 0x3ea
0x3d6 JUMPI
---
0x3d0: V290 = 0x1f
0x3d2: V291 = LT 0x1f V280
0x3d3: V292 = 0x3ea
0x3d6: JUMPI 0x3ea V291
---
Entry stack: [V11, 0x17e, V268, 0x0, V280, V287, 0x0, V280]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x17e, V268, 0x0, V280, V287, 0x0, V280]

================================

Block 0x3d7
[0x3d7:0x3e9]
---
Predecessors: [0x3cf]
Successors: [0x415]
---
0x3d7 PUSH2 0x100
0x3da DUP1
0x3db DUP4
0x3dc SLOAD
0x3dd DIV
0x3de MUL
0x3df DUP4
0x3e0 MSTORE
0x3e1 SWAP2
0x3e2 PUSH1 0x20
0x3e4 ADD
0x3e5 SWAP2
0x3e6 PUSH2 0x415
0x3e9 JUMP
---
0x3d7: V293 = 0x100
0x3dc: V294 = S[0x0]
0x3dd: V295 = DIV V294 0x100
0x3de: V296 = MUL V295 0x100
0x3e0: M[V287] = V296
0x3e2: V297 = 0x20
0x3e4: V298 = ADD 0x20 V287
0x3e6: V299 = 0x415
0x3e9: JUMP 0x415
---
Entry stack: [V11, 0x17e, V268, 0x0, V280, V287, 0x0, V280]
Stack pops: 3
Stack additions: [V298, S1, S0]
Exit stack: [V11, 0x17e, V268, 0x0, V280, V298, 0x0, V280]

================================

Block 0x3ea
[0x3ea:0x3f7]
---
Predecessors: [0x3cf]
Successors: [0x3f8]
---
0x3ea JUMPDEST
0x3eb DUP3
0x3ec ADD
0x3ed SWAP2
0x3ee SWAP1
0x3ef PUSH1 0x0
0x3f1 MSTORE
0x3f2 PUSH1 0x20
0x3f4 PUSH1 0x0
0x3f6 SHA3
0x3f7 SWAP1
---
0x3ea: JUMPDEST 
0x3ec: V300 = ADD V287 V280
0x3ef: V301 = 0x0
0x3f1: M[0x0] = 0x0
0x3f2: V302 = 0x20
0x3f4: V303 = 0x0
0x3f6: V304 = SHA3 0x0 0x20
---
Entry stack: [V11, 0x17e, V268, 0x0, V280, V287, 0x0, V280]
Stack pops: 3
Stack additions: [V300, V304, S2]
Exit stack: [V11, 0x17e, V268, 0x0, V280, V300, V304, V287]

================================

Block 0x3f8
[0x3f8:0x40b]
---
Predecessors: [0x3ea, 0x3f8]
Successors: [0x3f8, 0x40c]
---
0x3f8 JUMPDEST
0x3f9 DUP2
0x3fa SLOAD
0x3fb DUP2
0x3fc MSTORE
0x3fd SWAP1
0x3fe PUSH1 0x1
0x400 ADD
0x401 SWAP1
0x402 PUSH1 0x20
0x404 ADD
0x405 DUP1
0x406 DUP4
0x407 GT
0x408 PUSH2 0x3f8
0x40b JUMPI
---
0x3f8: JUMPDEST 
0x3fa: V305 = S[S1]
0x3fc: M[S0] = V305
0x3fe: V306 = 0x1
0x400: V307 = ADD 0x1 S1
0x402: V308 = 0x20
0x404: V309 = ADD 0x20 S0
0x407: V310 = GT V300 V309
0x408: V311 = 0x3f8
0x40b: JUMPI 0x3f8 V310
---
Entry stack: [V11, 0x17e, V268, 0x0, V280, V300, S1, S0]
Stack pops: 3
Stack additions: [S2, V307, V309]
Exit stack: [V11, 0x17e, V268, 0x0, V280, V300, V307, V309]

================================

Block 0x40c
[0x40c:0x414]
---
Predecessors: [0x3f8]
Successors: [0x415]
---
0x40c DUP3
0x40d SWAP1
0x40e SUB
0x40f PUSH1 0x1f
0x411 AND
0x412 DUP3
0x413 ADD
0x414 SWAP2
---
0x40e: V312 = SUB V309 V300
0x40f: V313 = 0x1f
0x411: V314 = AND 0x1f V312
0x413: V315 = ADD V300 V314
---
Entry stack: [V11, 0x17e, V268, 0x0, V280, V300, V307, V309]
Stack pops: 3
Stack additions: [V315, S1, S2]
Exit stack: [V11, 0x17e, V268, 0x0, V280, V315, V307, V300]

================================

Block 0x415
[0x415:0x41c]
---
Predecessors: [0x38f, 0x3d7, 0x40c]
Successors: [0x17e]
---
0x415 JUMPDEST
0x416 POP
0x417 POP
0x418 POP
0x419 POP
0x41a POP
0x41b DUP2
0x41c JUMP
---
0x415: JUMPDEST 
0x41c: JUMP 0x17e
---
Entry stack: [V11, 0x17e, V268, 0x0, V280, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0x17e, V268]

================================

Block 0x41d
[0x41d:0x43d]
---
Predecessors: [0x1ff]
Successors: [0x43e, 0x473]
---
0x41d JUMPDEST
0x41e PUSH1 0x1
0x420 SLOAD
0x421 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x436 AND
0x437 CALLER
0x438 EQ
0x439 ISZERO
0x43a PUSH2 0x473
0x43d JUMPI
---
0x41d: JUMPDEST 
0x41e: V316 = 0x1
0x420: V317 = S[0x1]
0x421: V318 = 0xffffffffffffffffffffffffffffffffffffffff
0x436: V319 = AND 0xffffffffffffffffffffffffffffffffffffffff V317
0x437: V320 = CALLER
0x438: V321 = EQ V320 V319
0x439: V322 = ISZERO V321
0x43a: V323 = 0x473
0x43d: JUMPI 0x473 V322
---
Entry stack: [V11, 0x77, V146]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V146]

================================

Block 0x43e
[0x43e:0x472]
---
Predecessors: [0x41d]
Successors: [0x473]
---
0x43e PUSH1 0x1
0x440 DUP1
0x441 SLOAD
0x442 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x457 NOT
0x458 AND
0x459 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x46e DUP4
0x46f AND
0x470 OR
0x471 SWAP1
0x472 SSTORE
---
0x43e: V324 = 0x1
0x441: V325 = S[0x1]
0x442: V326 = 0xffffffffffffffffffffffffffffffffffffffff
0x457: V327 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x458: V328 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V325
0x459: V329 = 0xffffffffffffffffffffffffffffffffffffffff
0x46f: V330 = AND V146 0xffffffffffffffffffffffffffffffffffffffff
0x470: V331 = OR V330 V328
0x472: S[0x1] = V331
---
Entry stack: [V11, 0x77, V146]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x77, V146]

================================

Block 0x473
[0x473:0x475]
---
Predecessors: [0x41d, 0x43e, 0x49a]
Successors: [0x77]
---
0x473 JUMPDEST
0x474 POP
0x475 JUMP
---
0x473: JUMPDEST 
0x475: JUMP 0x77
---
Entry stack: [V11, 0x77, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x476
[0x476:0x495]
---
Predecessors: [0x221]
Successors: [0x496, 0x49a]
---
0x476 JUMPDEST
0x477 PUSH1 0x1
0x479 SLOAD
0x47a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x48f AND
0x490 CALLER
0x491 EQ
0x492 PUSH2 0x49a
0x495 JUMPI
---
0x476: JUMPDEST 
0x477: V332 = 0x1
0x479: V333 = S[0x1]
0x47a: V334 = 0xffffffffffffffffffffffffffffffffffffffff
0x48f: V335 = AND 0xffffffffffffffffffffffffffffffffffffffff V333
0x490: V336 = CALLER
0x491: V337 = EQ V336 V335
0x492: V338 = 0x49a
0x495: JUMPI 0x49a V337
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x496
[0x496:0x499]
---
Predecessors: [0x476]
Successors: []
---
0x496 PUSH1 0x0
0x498 DUP1
0x499 REVERT
---
0x496: V339 = 0x0
0x499: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x49a
[0x49a:0x4bd]
---
Predecessors: [0x476]
Successors: [0x473, 0x4be]
---
0x49a JUMPDEST
0x49b PUSH1 0x40
0x49d MLOAD
0x49e CALLER
0x49f SWAP1
0x4a0 ADDRESS
0x4a1 BALANCE
0x4a2 DUP1
0x4a3 ISZERO
0x4a4 PUSH2 0x8fc
0x4a7 MUL
0x4a8 SWAP2
0x4a9 PUSH1 0x0
0x4ab DUP2
0x4ac DUP2
0x4ad DUP2
0x4ae DUP6
0x4af DUP9
0x4b0 DUP9
0x4b1 CALL
0x4b2 SWAP4
0x4b3 POP
0x4b4 POP
0x4b5 POP
0x4b6 POP
0x4b7 ISZERO
0x4b8 DUP1
0x4b9 ISZERO
0x4ba PUSH2 0x473
0x4bd JUMPI
---
0x49a: JUMPDEST 
0x49b: V340 = 0x40
0x49d: V341 = M[0x40]
0x49e: V342 = CALLER
0x4a0: V343 = ADDRESS
0x4a1: V344 = BALANCE V343
0x4a3: V345 = ISZERO V344
0x4a4: V346 = 0x8fc
0x4a7: V347 = MUL 0x8fc V345
0x4a9: V348 = 0x0
0x4b1: V349 = CALL V347 V342 V344 V341 0x0 V341 0x0
0x4b7: V350 = ISZERO V349
0x4b9: V351 = ISZERO V350
0x4ba: V352 = 0x473
0x4bd: JUMPI 0x473 V351
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: [V350]
Exit stack: [V11, 0x77, V350]

================================

Block 0x4be
[0x4be:0x4c6]
---
Predecessors: [0x49a]
Successors: []
---
0x4be RETURNDATASIZE
0x4bf PUSH1 0x0
0x4c1 DUP1
0x4c2 RETURNDATACOPY
0x4c3 RETURNDATASIZE
0x4c4 PUSH1 0x0
0x4c6 REVERT
---
0x4be: V353 = RETURNDATASIZE
0x4bf: V354 = 0x0
0x4c2: RETURNDATACOPY 0x0 0x0 V353
0x4c3: V355 = RETURNDATASIZE
0x4c4: V356 = 0x0
0x4c6: REVERT 0x0 V355
---
Entry stack: [V11, 0x77, V350]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V350]

================================

Block 0x4c7
[0x4c7:0x4f7]
---
Predecessors: [0x2ed, 0x376]
Successors: [0x4f8, 0x508]
---
0x4c7 JUMPDEST
0x4c8 DUP3
0x4c9 DUP1
0x4ca SLOAD
0x4cb PUSH1 0x1
0x4cd DUP2
0x4ce PUSH1 0x1
0x4d0 AND
0x4d1 ISZERO
0x4d2 PUSH2 0x100
0x4d5 MUL
0x4d6 SUB
0x4d7 AND
0x4d8 PUSH1 0x2
0x4da SWAP1
0x4db DIV
0x4dc SWAP1
0x4dd PUSH1 0x0
0x4df MSTORE
0x4e0 PUSH1 0x20
0x4e2 PUSH1 0x0
0x4e4 SHA3
0x4e5 SWAP1
0x4e6 PUSH1 0x1f
0x4e8 ADD
0x4e9 PUSH1 0x20
0x4eb SWAP1
0x4ec DIV
0x4ed DUP2
0x4ee ADD
0x4ef SWAP3
0x4f0 DUP3
0x4f1 PUSH1 0x1f
0x4f3 LT
0x4f4 PUSH2 0x508
0x4f7 JUMPI
---
0x4c7: JUMPDEST 
0x4ca: V357 = S[0x0]
0x4cb: V358 = 0x1
0x4ce: V359 = 0x1
0x4d0: V360 = AND 0x1 V357
0x4d1: V361 = ISZERO V360
0x4d2: V362 = 0x100
0x4d5: V363 = MUL 0x100 V361
0x4d6: V364 = SUB V363 0x1
0x4d7: V365 = AND V364 V357
0x4d8: V366 = 0x2
0x4db: V367 = DIV V365 0x2
0x4dd: V368 = 0x0
0x4df: M[0x0] = 0x0
0x4e0: V369 = 0x20
0x4e2: V370 = 0x0
0x4e4: V371 = SHA3 0x0 0x20
0x4e6: V372 = 0x1f
0x4e8: V373 = ADD 0x1f V367
0x4e9: V374 = 0x20
0x4ec: V375 = DIV V373 0x20
0x4ee: V376 = ADD V371 V375
0x4f1: V377 = 0x1f
0x4f3: V378 = LT 0x1f S0
0x4f4: V379 = 0x508
0x4f7: JUMPI 0x508 V378
---
Entry stack: [V11, S7, S6, S5, S4, {0x32b, 0x388}, 0x0, S1, S0]
Stack pops: 3
Stack additions: [S2, V376, S0, V371, S1]
Exit stack: [V11, S7, S6, S5, S4, {0x32b, 0x388}, 0x0, V376, S0, V371, S1]

================================

Block 0x4f8
[0x4f8:0x507]
---
Predecessors: [0x4c7]
Successors: [0x535]
---
0x4f8 DUP1
0x4f9 MLOAD
0x4fa PUSH1 0xff
0x4fc NOT
0x4fd AND
0x4fe DUP4
0x4ff DUP1
0x500 ADD
0x501 OR
0x502 DUP6
0x503 SSTORE
0x504 PUSH2 0x535
0x507 JUMP
---
0x4f9: V380 = M[S0]
0x4fa: V381 = 0xff
0x4fc: V382 = NOT 0xff
0x4fd: V383 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V380
0x500: V384 = ADD S2 S2
0x501: V385 = OR V384 V383
0x503: S[0x0] = V385
0x504: V386 = 0x535
0x507: JUMP 0x535
---
Entry stack: [V11, S9, S8, S7, S6, {0x32b, 0x388}, 0x0, V376, S2, V371, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, S9, S8, S7, S6, {0x32b, 0x388}, 0x0, V376, S2, V371, S0]

================================

Block 0x508
[0x508:0x516]
---
Predecessors: [0x4c7]
Successors: [0x517, 0x535]
---
0x508 JUMPDEST
0x509 DUP3
0x50a DUP1
0x50b ADD
0x50c PUSH1 0x1
0x50e ADD
0x50f DUP6
0x510 SSTORE
0x511 DUP3
0x512 ISZERO
0x513 PUSH2 0x535
0x516 JUMPI
---
0x508: JUMPDEST 
0x50b: V387 = ADD S2 S2
0x50c: V388 = 0x1
0x50e: V389 = ADD 0x1 V387
0x510: S[0x0] = V389
0x512: V390 = ISZERO S2
0x513: V391 = 0x535
0x516: JUMPI 0x535 V390
---
Entry stack: [V11, S9, S8, S7, S6, {0x32b, 0x388}, 0x0, V376, S2, V371, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, S9, S8, S7, S6, {0x32b, 0x388}, 0x0, V376, S2, V371, S0]

================================

Block 0x517
[0x517:0x519]
---
Predecessors: [0x508]
Successors: [0x51a]
---
0x517 SWAP2
0x518 DUP3
0x519 ADD
---
0x519: V392 = ADD S0 S2
---
Entry stack: [V11, S9, S8, S7, S6, {0x32b, 0x388}, 0x0, V376, S2, V371, S0]
Stack pops: 3
Stack additions: [S0, S1, V392]
Exit stack: [V11, S9, S8, S7, S6, {0x32b, 0x388}, 0x0, V376, S0, V371, V392]

================================

Block 0x51a
[0x51a:0x522]
---
Predecessors: [0x517, 0x523]
Successors: [0x523, 0x535]
---
0x51a JUMPDEST
0x51b DUP3
0x51c DUP2
0x51d GT
0x51e ISZERO
0x51f PUSH2 0x535
0x522 JUMPI
---
0x51a: JUMPDEST 
0x51d: V393 = GT V392 S2
0x51e: V394 = ISZERO V393
0x51f: V395 = 0x535
0x522: JUMPI 0x535 V394
---
Entry stack: [V11, S9, S8, S7, S6, {0x32b, 0x388}, 0x0, V376, S2, S1, V392]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, S9, S8, S7, S6, {0x32b, 0x388}, 0x0, V376, S2, S1, V392]

================================

Block 0x523
[0x523:0x534]
---
Predecessors: [0x51a]
Successors: [0x51a]
---
0x523 DUP3
0x524 MLOAD
0x525 DUP3
0x526 SSTORE
0x527 SWAP2
0x528 PUSH1 0x20
0x52a ADD
0x52b SWAP2
0x52c SWAP1
0x52d PUSH1 0x1
0x52f ADD
0x530 SWAP1
0x531 PUSH2 0x51a
0x534 JUMP
---
0x524: V396 = M[S2]
0x526: S[S1] = V396
0x528: V397 = 0x20
0x52a: V398 = ADD 0x20 S2
0x52d: V399 = 0x1
0x52f: V400 = ADD 0x1 S1
0x531: V401 = 0x51a
0x534: JUMP 0x51a
---
Entry stack: [V11, S9, S8, S7, S6, {0x32b, 0x388}, 0x0, V376, S2, S1, V392]
Stack pops: 3
Stack additions: [V398, V400, S0]
Exit stack: [V11, S9, S8, S7, S6, {0x32b, 0x388}, 0x0, V376, V398, V400, V392]

================================

Block 0x535
[0x535:0x540]
---
Predecessors: [0x4f8, 0x508, 0x51a]
Successors: [0x545]
---
0x535 JUMPDEST
0x536 POP
0x537 PUSH2 0x541
0x53a SWAP3
0x53b SWAP2
0x53c POP
0x53d PUSH2 0x545
0x540 JUMP
---
0x535: JUMPDEST 
0x537: V402 = 0x541
0x53d: V403 = 0x545
0x540: JUMP 0x545
---
Entry stack: [V11, S9, S8, S7, S6, {0x32b, 0x388}, 0x0, V376, S2, S1, S0]
Stack pops: 4
Stack additions: [0x541, S3, S1]
Exit stack: [V11, S9, S8, S7, S6, {0x32b, 0x388}, 0x0, 0x541, V376, S1]

================================

Block 0x541
[0x541:0x544]
---
Predecessors: [0x54b, 0x55f]
Successors: [0x77, 0x32b, 0x388, 0x55f]
---
0x541 JUMPDEST
0x542 POP
0x543 SWAP1
0x544 JUMP
---
0x541: JUMPDEST 
0x544: JUMP S2
---
Entry stack: [V11, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, S9, S8, S7, S6, S5, S4, S3, S1]

================================

Block 0x545
[0x545:0x54a]
---
Predecessors: [0x535]
Successors: [0x54b]
---
0x545 JUMPDEST
0x546 PUSH2 0x55f
0x549 SWAP2
0x54a SWAP1
---
0x545: JUMPDEST 
0x546: V404 = 0x55f
---
Entry stack: [V11, S8, S7, S6, S5, {0x32b, 0x388}, 0x0, 0x541, V376, S0]
Stack pops: 2
Stack additions: [0x55f, S1, S0]
Exit stack: [V11, S8, S7, S6, S5, {0x32b, 0x388}, 0x0, 0x541, 0x55f, V376, S0]

================================

Block 0x54b
[0x54b:0x553]
---
Predecessors: [0x545, 0x554]
Successors: [0x541, 0x554]
---
0x54b JUMPDEST
0x54c DUP1
0x54d DUP3
0x54e GT
0x54f ISZERO
0x550 PUSH2 0x541
0x553 JUMPI
---
0x54b: JUMPDEST 
0x54e: V405 = GT V376 S0
0x54f: V406 = ISZERO V405
0x550: V407 = 0x541
0x553: JUMPI 0x541 V406
---
Entry stack: [V11, S9, S8, S7, S6, {0x32b, 0x388}, 0x0, 0x541, 0x55f, V376, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, S9, S8, S7, S6, {0x32b, 0x388}, 0x0, 0x541, 0x55f, V376, S0]

================================

Block 0x554
[0x554:0x55e]
---
Predecessors: [0x54b]
Successors: [0x54b]
---
0x554 PUSH1 0x0
0x556 DUP2
0x557 SSTORE
0x558 PUSH1 0x1
0x55a ADD
0x55b PUSH2 0x54b
0x55e JUMP
---
0x554: V408 = 0x0
0x557: S[S0] = 0x0
0x558: V409 = 0x1
0x55a: V410 = ADD 0x1 S0
0x55b: V411 = 0x54b
0x55e: JUMP 0x54b
---
Entry stack: [V11, S9, S8, S7, S6, {0x32b, 0x388}, 0x0, 0x541, 0x55f, V376, S0]
Stack pops: 1
Stack additions: [V410]
Exit stack: [V11, S9, S8, S7, S6, {0x32b, 0x388}, 0x0, 0x541, 0x55f, V376, V410]

================================

Block 0x55f
[0x55f:0x561]
---
Predecessors: [0x541]
Successors: [0x77, 0x541]
---
0x55f JUMPDEST
0x560 SWAP1
0x561 JUMP
---
0x55f: JUMPDEST 
0x561: JUMP S1
---
Entry stack: [V11, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, S7, S6, S5, S4, S3, S2, S0]

================================

Block 0x562
[0x562:0x58e]
---
Predecessors: []
Successors: []
---
0x562 STOP
0x563 LOG1
0x564 PUSH6 0x627a7a723058
0x56b SHA3
0x56c MISSING 0x2e
0x56d MISSING 0xe6
0x56e MISSING 0xef
0x56f EXTCODECOPY
0x570 MISSING 0xe0
0x571 SGT
0x572 MISSING 0xee
0x573 PUSH27 0x7a033faca347b84df1de2cc4847a445a40d2061db8812f600029
---
0x562: STOP 
0x563: LOG S0 S1 S2
0x564: V412 = 0x627a7a723058
0x56b: V413 = SHA3 0x627a7a723058 S3
0x56c: MISSING 0x2e
0x56d: MISSING 0xe6
0x56e: MISSING 0xef
0x56f: EXTCODECOPY S0 S1 S2 S3
0x570: MISSING 0xe0
0x571: V414 = SGT S0 S1
0x572: MISSING 0xee
0x573: V415 = 0x7a033faca347b84df1de2cc4847a445a40d2061db8812f600029
---
Entry stack: []
Stack pops: 0
Stack additions: [V413, V414, 0x7a033faca347b84df1de2cc4847a445a40d2061db8812f600029]
Exit stack: []

================================

Function 0:
Public function signature: 0x3853682c
Entry block: 0x79
Exit block: 0x77
Body: 0x77, 0x79, 0x229, 0x231, 0x235, 0x25e, 0x26a, 0x270, 0x293, 0x29c, 0x29e

Function 1:
Public function signature: 0x3afdbd83
Entry block: 0x8c
Exit block: 0x77
Body: 0x77, 0x8c, 0x29c, 0x29e, 0x2a2, 0x2be, 0x2ce, 0x2d7, 0x2ed, 0x32b

Function 2:
Public function signature: 0x3e3ee859
Entry block: 0x11b
Exit block: 0x77
Body: 0x77, 0x11b, 0x29e, 0x32b, 0x355, 0x376, 0x388

Function 3:
Public function signature: 0x3fad9ae0
Entry block: 0x169
Exit block: 0x1e5
Body: 0x169, 0x171, 0x175, 0x17e, 0x1a0, 0x1a9, 0x1b8, 0x1cc, 0x1e5, 0x38f, 0x3cf, 0x3d7, 0x3ea, 0x3f8, 0x40c, 0x415

Function 4:
Public function signature: 0x59988dce
Entry block: 0x1f3
Exit block: 0x77
Body: 0x77, 0x1f3, 0x1fb, 0x1ff, 0x41d, 0x43e, 0x473

Function 5:
Public function signature: 0xf50ab247
Entry block: 0x221
Exit block: 0x77
Body: 0x77, 0x221, 0x473, 0x476, 0x496, 0x49a, 0x4be

Function 6:
Public fallback function
Entry block: 0x77
Exit block: 0x77
Body: 0x77

Function 7:
Private function
Entry block: 0x4c7
Exit block: 0x541
Body: 0x4c7, 0x4f8, 0x508, 0x517, 0x51a, 0x523, 0x535, 0x541, 0x545, 0x54b, 0x554, 0x55f

