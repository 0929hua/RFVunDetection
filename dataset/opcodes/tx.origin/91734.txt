Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6c
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6c
0xc: JUMPI 0x6c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x6e]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x379dadfe
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x6e
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x379dadfe
0x3b: V13 = EQ V11 0x379dadfe
0x3c: V14 = 0x6e
0x3f: JUMPI 0x6e V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xf6]
---
0x40 DUP1
0x41 PUSH4 0x3853682c
0x46 EQ
0x47 PUSH2 0xf6
0x4a JUMPI
---
0x41: V15 = 0x3853682c
0x46: V16 = EQ 0x3853682c V11
0x47: V17 = 0xf6
0x4a: JUMPI 0xf6 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x109]
---
0x4b DUP1
0x4c PUSH4 0x3e3ee859
0x51 EQ
0x52 PUSH2 0x109
0x55 JUMPI
---
0x4c: V18 = 0x3e3ee859
0x51: V19 = EQ 0x3e3ee859 V11
0x52: V20 = 0x109
0x55: JUMPI 0x109 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x151]
---
0x56 DUP1
0x57 PUSH4 0x3fad9ae0
0x5c EQ
0x5d PUSH2 0x151
0x60 JUMPI
---
0x57: V21 = 0x3fad9ae0
0x5c: V22 = EQ 0x3fad9ae0 V11
0x5d: V23 = 0x151
0x60: JUMPI 0x151 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x1db]
---
0x61 DUP1
0x62 PUSH4 0x59988dce
0x67 EQ
0x68 PUSH2 0x1db
0x6b JUMPI
---
0x62: V24 = 0x59988dce
0x67: V25 = EQ 0x59988dce V11
0x68: V26 = 0x1db
0x6b: JUMPI 0x1db V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x6d]
---
Predecessors: [0x0, 0x61, 0x2a0, 0x369, 0x429, 0x4d2]
Successors: []
---
0x6c JUMPDEST
0x6d STOP
---
0x6c: JUMPDEST 
0x6d: STOP 
---
Entry stack: [V11, 0x6c, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, S5, S4, S3, S2, S1, S0]

================================

Block 0x6e
[0x6e:0xf5]
---
Predecessors: [0xd]
Successors: [0x1fa]
---
0x6e JUMPDEST
0x6f PUSH2 0x6c
0x72 PUSH1 0x4
0x74 PUSH1 0x24
0x76 DUP2
0x77 CALLDATALOAD
0x78 DUP2
0x79 DUP2
0x7a ADD
0x7b SWAP1
0x7c DUP4
0x7d ADD
0x7e CALLDATALOAD
0x7f DUP1
0x80 PUSH1 0x20
0x82 PUSH1 0x1f
0x84 DUP3
0x85 ADD
0x86 DUP2
0x87 SWAP1
0x88 DIV
0x89 DUP2
0x8a MUL
0x8b ADD
0x8c PUSH1 0x40
0x8e MLOAD
0x8f SWAP1
0x90 DUP2
0x91 ADD
0x92 PUSH1 0x40
0x94 MSTORE
0x95 DUP2
0x96 DUP2
0x97 MSTORE
0x98 SWAP3
0x99 SWAP2
0x9a SWAP1
0x9b PUSH1 0x20
0x9d DUP5
0x9e ADD
0x9f DUP4
0xa0 DUP4
0xa1 DUP1
0xa2 DUP3
0xa3 DUP5
0xa4 CALLDATACOPY
0xa5 DUP3
0xa6 ADD
0xa7 SWAP2
0xa8 POP
0xa9 POP
0xaa POP
0xab POP
0xac POP
0xad POP
0xae SWAP2
0xaf SWAP1
0xb0 DUP1
0xb1 CALLDATALOAD
0xb2 SWAP1
0xb3 PUSH1 0x20
0xb5 ADD
0xb6 SWAP1
0xb7 DUP3
0xb8 ADD
0xb9 DUP1
0xba CALLDATALOAD
0xbb SWAP1
0xbc PUSH1 0x20
0xbe ADD
0xbf SWAP1
0xc0 DUP1
0xc1 DUP1
0xc2 PUSH1 0x1f
0xc4 ADD
0xc5 PUSH1 0x20
0xc7 DUP1
0xc8 SWAP2
0xc9 DIV
0xca MUL
0xcb PUSH1 0x20
0xcd ADD
0xce PUSH1 0x40
0xd0 MLOAD
0xd1 SWAP1
0xd2 DUP2
0xd3 ADD
0xd4 PUSH1 0x40
0xd6 MSTORE
0xd7 DUP2
0xd8 DUP2
0xd9 MSTORE
0xda SWAP3
0xdb SWAP2
0xdc SWAP1
0xdd PUSH1 0x20
0xdf DUP5
0xe0 ADD
0xe1 DUP4
0xe2 DUP4
0xe3 DUP1
0xe4 DUP3
0xe5 DUP5
0xe6 CALLDATACOPY
0xe7 POP
0xe8 SWAP5
0xe9 SWAP7
0xea POP
0xeb PUSH2 0x1fa
0xee SWAP6
0xef POP
0xf0 POP
0xf1 POP
0xf2 POP
0xf3 POP
0xf4 POP
0xf5 JUMP
---
0x6e: JUMPDEST 
0x6f: V27 = 0x6c
0x72: V28 = 0x4
0x74: V29 = 0x24
0x77: V30 = CALLDATALOAD 0x4
0x7a: V31 = ADD V30 0x24
0x7d: V32 = ADD 0x4 V30
0x7e: V33 = CALLDATALOAD V32
0x80: V34 = 0x20
0x82: V35 = 0x1f
0x85: V36 = ADD V33 0x1f
0x88: V37 = DIV V36 0x20
0x8a: V38 = MUL 0x20 V37
0x8b: V39 = ADD V38 0x20
0x8c: V40 = 0x40
0x8e: V41 = M[0x40]
0x91: V42 = ADD V41 V39
0x92: V43 = 0x40
0x94: M[0x40] = V42
0x97: M[V41] = V33
0x9b: V44 = 0x20
0x9e: V45 = ADD V41 0x20
0xa4: CALLDATACOPY V45 V31 V33
0xa6: V46 = ADD V45 V33
0xb1: V47 = CALLDATALOAD 0x24
0xb3: V48 = 0x20
0xb5: V49 = ADD 0x20 0x24
0xb8: V50 = ADD 0x4 V47
0xba: V51 = CALLDATALOAD V50
0xbc: V52 = 0x20
0xbe: V53 = ADD 0x20 V50
0xc2: V54 = 0x1f
0xc4: V55 = ADD 0x1f V51
0xc5: V56 = 0x20
0xc9: V57 = DIV V55 0x20
0xca: V58 = MUL V57 0x20
0xcb: V59 = 0x20
0xcd: V60 = ADD 0x20 V58
0xce: V61 = 0x40
0xd0: V62 = M[0x40]
0xd3: V63 = ADD V62 V60
0xd4: V64 = 0x40
0xd6: M[0x40] = V63
0xd9: M[V62] = V51
0xdd: V65 = 0x20
0xe0: V66 = ADD V62 0x20
0xe6: CALLDATACOPY V66 V53 V51
0xeb: V67 = 0x1fa
0xf5: JUMP 0x1fa
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6c, V41, V62]
Exit stack: [V11, 0x6c, V41, V62]

================================

Block 0xf6
[0xf6:0x108]
---
Predecessors: [0x40]
Successors: [0x2a4]
---
0xf6 JUMPDEST
0xf7 PUSH2 0x6c
0xfa PUSH1 0x4
0xfc DUP1
0xfd CALLDATALOAD
0xfe PUSH1 0x24
0x100 DUP2
0x101 ADD
0x102 SWAP2
0x103 ADD
0x104 CALLDATALOAD
0x105 PUSH2 0x2a4
0x108 JUMP
---
0xf6: JUMPDEST 
0xf7: V68 = 0x6c
0xfa: V69 = 0x4
0xfd: V70 = CALLDATALOAD 0x4
0xfe: V71 = 0x24
0x101: V72 = ADD V70 0x24
0x103: V73 = ADD 0x4 V70
0x104: V74 = CALLDATALOAD V73
0x105: V75 = 0x2a4
0x108: JUMP 0x2a4
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6c, V72, V74]
Exit stack: [V11, 0x6c, V72, V74]

================================

Block 0x109
[0x109:0x150]
---
Predecessors: [0x4b]
Successors: [0x33b]
---
0x109 JUMPDEST
0x10a PUSH2 0x6c
0x10d PUSH1 0x4
0x10f PUSH1 0x24
0x111 DUP2
0x112 CALLDATALOAD
0x113 DUP2
0x114 DUP2
0x115 ADD
0x116 SWAP1
0x117 DUP4
0x118 ADD
0x119 CALLDATALOAD
0x11a DUP1
0x11b PUSH1 0x20
0x11d PUSH1 0x1f
0x11f DUP3
0x120 ADD
0x121 DUP2
0x122 SWAP1
0x123 DIV
0x124 DUP2
0x125 MUL
0x126 ADD
0x127 PUSH1 0x40
0x129 MLOAD
0x12a SWAP1
0x12b DUP2
0x12c ADD
0x12d PUSH1 0x40
0x12f MSTORE
0x130 DUP2
0x131 DUP2
0x132 MSTORE
0x133 SWAP3
0x134 SWAP2
0x135 SWAP1
0x136 PUSH1 0x20
0x138 DUP5
0x139 ADD
0x13a DUP4
0x13b DUP4
0x13c DUP1
0x13d DUP3
0x13e DUP5
0x13f CALLDATACOPY
0x140 POP
0x141 SWAP5
0x142 SWAP7
0x143 POP
0x144 POP
0x145 SWAP4
0x146 CALLDATALOAD
0x147 SWAP4
0x148 POP
0x149 PUSH2 0x33b
0x14c SWAP3
0x14d POP
0x14e POP
0x14f POP
0x150 JUMP
---
0x109: JUMPDEST 
0x10a: V76 = 0x6c
0x10d: V77 = 0x4
0x10f: V78 = 0x24
0x112: V79 = CALLDATALOAD 0x4
0x115: V80 = ADD V79 0x24
0x118: V81 = ADD 0x4 V79
0x119: V82 = CALLDATALOAD V81
0x11b: V83 = 0x20
0x11d: V84 = 0x1f
0x120: V85 = ADD V82 0x1f
0x123: V86 = DIV V85 0x20
0x125: V87 = MUL 0x20 V86
0x126: V88 = ADD V87 0x20
0x127: V89 = 0x40
0x129: V90 = M[0x40]
0x12c: V91 = ADD V90 V88
0x12d: V92 = 0x40
0x12f: M[0x40] = V91
0x132: M[V90] = V82
0x136: V93 = 0x20
0x139: V94 = ADD V90 0x20
0x13f: CALLDATACOPY V94 V80 V82
0x146: V95 = CALLDATALOAD 0x24
0x149: V96 = 0x33b
0x150: JUMP 0x33b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6c, V90, V95]
Exit stack: [V11, 0x6c, V90, V95]

================================

Block 0x151
[0x151:0x157]
---
Predecessors: [0x56]
Successors: [0x158, 0x15c]
---
0x151 JUMPDEST
0x152 CALLVALUE
0x153 ISZERO
0x154 PUSH2 0x15c
0x157 JUMPI
---
0x151: JUMPDEST 
0x152: V97 = CALLVALUE
0x153: V98 = ISZERO V97
0x154: V99 = 0x15c
0x157: JUMPI 0x15c V98
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x158
[0x158:0x15b]
---
Predecessors: [0x151]
Successors: []
---
0x158 PUSH1 0x0
0x15a DUP1
0x15b REVERT
---
0x158: V100 = 0x0
0x15b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x15c
[0x15c:0x163]
---
Predecessors: [0x151]
Successors: [0x370]
---
0x15c JUMPDEST
0x15d PUSH2 0x164
0x160 PUSH2 0x370
0x163 JUMP
---
0x15c: JUMPDEST 
0x15d: V101 = 0x164
0x160: V102 = 0x370
0x163: JUMP 0x370
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x164]
Exit stack: [V11, 0x164]

================================

Block 0x164
[0x164:0x187]
---
Predecessors: [0x406]
Successors: [0x188]
---
0x164 JUMPDEST
0x165 PUSH1 0x40
0x167 MLOAD
0x168 PUSH1 0x20
0x16a DUP1
0x16b DUP3
0x16c MSTORE
0x16d DUP2
0x16e SWAP1
0x16f DUP2
0x170 ADD
0x171 DUP4
0x172 DUP2
0x173 DUP2
0x174 MLOAD
0x175 DUP2
0x176 MSTORE
0x177 PUSH1 0x20
0x179 ADD
0x17a SWAP2
0x17b POP
0x17c DUP1
0x17d MLOAD
0x17e SWAP1
0x17f PUSH1 0x20
0x181 ADD
0x182 SWAP1
0x183 DUP1
0x184 DUP4
0x185 DUP4
0x186 PUSH1 0x0
---
0x164: JUMPDEST 
0x165: V103 = 0x40
0x167: V104 = M[0x40]
0x168: V105 = 0x20
0x16c: M[V104] = 0x20
0x170: V106 = ADD V104 0x20
0x174: V107 = M[V320]
0x176: M[V106] = V107
0x177: V108 = 0x20
0x179: V109 = ADD 0x20 V106
0x17d: V110 = M[V320]
0x17f: V111 = 0x20
0x181: V112 = ADD 0x20 V320
0x186: V113 = 0x0
---
Entry stack: [V11, 0x164, V320]
Stack pops: 1
Stack additions: [S0, V104, V104, V109, V112, V110, V110, V109, V112, 0x0]
Exit stack: [V11, 0x164, V320, V104, V104, V109, V112, V110, V110, V109, V112, 0x0]

================================

Block 0x188
[0x188:0x190]
---
Predecessors: [0x164, 0x191]
Successors: [0x191, 0x1a0]
---
0x188 JUMPDEST
0x189 DUP4
0x18a DUP2
0x18b LT
0x18c ISZERO
0x18d PUSH2 0x1a0
0x190 JUMPI
---
0x188: JUMPDEST 
0x18b: V114 = LT S0 V110
0x18c: V115 = ISZERO V114
0x18d: V116 = 0x1a0
0x190: JUMPI 0x1a0 V115
---
Entry stack: [V11, 0x164, V320, V104, V104, V109, V112, V110, V110, V109, V112, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x164, V320, V104, V104, V109, V112, V110, V110, V109, V112, S0]

================================

Block 0x191
[0x191:0x19f]
---
Predecessors: [0x188]
Successors: [0x188]
---
0x191 DUP1
0x192 DUP3
0x193 ADD
0x194 MLOAD
0x195 DUP4
0x196 DUP3
0x197 ADD
0x198 MSTORE
0x199 PUSH1 0x20
0x19b ADD
0x19c PUSH2 0x188
0x19f JUMP
---
0x193: V117 = ADD V112 S0
0x194: V118 = M[V117]
0x197: V119 = ADD S0 V109
0x198: M[V119] = V118
0x199: V120 = 0x20
0x19b: V121 = ADD 0x20 S0
0x19c: V122 = 0x188
0x19f: JUMP 0x188
---
Entry stack: [V11, 0x164, V320, V104, V104, V109, V112, V110, V110, V109, V112, S0]
Stack pops: 3
Stack additions: [S2, S1, V121]
Exit stack: [V11, 0x164, V320, V104, V104, V109, V112, V110, V110, V109, V112, V121]

================================

Block 0x1a0
[0x1a0:0x1b3]
---
Predecessors: [0x188]
Successors: [0x1b4, 0x1cd]
---
0x1a0 JUMPDEST
0x1a1 POP
0x1a2 POP
0x1a3 POP
0x1a4 POP
0x1a5 SWAP1
0x1a6 POP
0x1a7 SWAP1
0x1a8 DUP2
0x1a9 ADD
0x1aa SWAP1
0x1ab PUSH1 0x1f
0x1ad AND
0x1ae DUP1
0x1af ISZERO
0x1b0 PUSH2 0x1cd
0x1b3 JUMPI
---
0x1a0: JUMPDEST 
0x1a9: V123 = ADD V110 V109
0x1ab: V124 = 0x1f
0x1ad: V125 = AND 0x1f V110
0x1af: V126 = ISZERO V125
0x1b0: V127 = 0x1cd
0x1b3: JUMPI 0x1cd V126
---
Entry stack: [V11, 0x164, V320, V104, V104, V109, V112, V110, V110, V109, V112, S0]
Stack pops: 7
Stack additions: [V123, V125]
Exit stack: [V11, 0x164, V320, V104, V104, V123, V125]

================================

Block 0x1b4
[0x1b4:0x1cc]
---
Predecessors: [0x1a0]
Successors: [0x1cd]
---
0x1b4 DUP1
0x1b5 DUP3
0x1b6 SUB
0x1b7 DUP1
0x1b8 MLOAD
0x1b9 PUSH1 0x1
0x1bb DUP4
0x1bc PUSH1 0x20
0x1be SUB
0x1bf PUSH2 0x100
0x1c2 EXP
0x1c3 SUB
0x1c4 NOT
0x1c5 AND
0x1c6 DUP2
0x1c7 MSTORE
0x1c8 PUSH1 0x20
0x1ca ADD
0x1cb SWAP2
0x1cc POP
---
0x1b6: V128 = SUB V123 V125
0x1b8: V129 = M[V128]
0x1b9: V130 = 0x1
0x1bc: V131 = 0x20
0x1be: V132 = SUB 0x20 V125
0x1bf: V133 = 0x100
0x1c2: V134 = EXP 0x100 V132
0x1c3: V135 = SUB V134 0x1
0x1c4: V136 = NOT V135
0x1c5: V137 = AND V136 V129
0x1c7: M[V128] = V137
0x1c8: V138 = 0x20
0x1ca: V139 = ADD 0x20 V128
---
Entry stack: [V11, 0x164, V320, V104, V104, V123, V125]
Stack pops: 2
Stack additions: [V139, S0]
Exit stack: [V11, 0x164, V320, V104, V104, V139, V125]

================================

Block 0x1cd
[0x1cd:0x1da]
---
Predecessors: [0x1a0, 0x1b4]
Successors: []
---
0x1cd JUMPDEST
0x1ce POP
0x1cf SWAP3
0x1d0 POP
0x1d1 POP
0x1d2 POP
0x1d3 PUSH1 0x40
0x1d5 MLOAD
0x1d6 DUP1
0x1d7 SWAP2
0x1d8 SUB
0x1d9 SWAP1
0x1da RETURN
---
0x1cd: JUMPDEST 
0x1d3: V140 = 0x40
0x1d5: V141 = M[0x40]
0x1d8: V142 = SUB S1 V141
0x1da: RETURN V141 V142
---
Entry stack: [V11, 0x164, V320, V104, V104, S1, V125]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x164]

================================

Block 0x1db
[0x1db:0x1e1]
---
Predecessors: [0x61]
Successors: [0x1e2, 0x1e6]
---
0x1db JUMPDEST
0x1dc CALLVALUE
0x1dd ISZERO
0x1de PUSH2 0x1e6
0x1e1 JUMPI
---
0x1db: JUMPDEST 
0x1dc: V143 = CALLVALUE
0x1dd: V144 = ISZERO V143
0x1de: V145 = 0x1e6
0x1e1: JUMPI 0x1e6 V144
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1e2
[0x1e2:0x1e5]
---
Predecessors: [0x1db]
Successors: []
---
0x1e2 PUSH1 0x0
0x1e4 DUP1
0x1e5 REVERT
---
0x1e2: V146 = 0x0
0x1e5: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1e6
[0x1e6:0x1f9]
---
Predecessors: [0x1db]
Successors: [0x40e]
---
0x1e6 JUMPDEST
0x1e7 PUSH2 0x6c
0x1ea PUSH1 0x1
0x1ec PUSH1 0xa0
0x1ee PUSH1 0x2
0x1f0 EXP
0x1f1 SUB
0x1f2 PUSH1 0x4
0x1f4 CALLDATALOAD
0x1f5 AND
0x1f6 PUSH2 0x40e
0x1f9 JUMP
---
0x1e6: JUMPDEST 
0x1e7: V147 = 0x6c
0x1ea: V148 = 0x1
0x1ec: V149 = 0xa0
0x1ee: V150 = 0x2
0x1f0: V151 = EXP 0x2 0xa0
0x1f1: V152 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f2: V153 = 0x4
0x1f4: V154 = CALLDATALOAD 0x4
0x1f5: V155 = AND V154 0xffffffffffffffffffffffffffffffffffffffff
0x1f6: V156 = 0x40e
0x1f9: JUMP 0x40e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6c, V155]
Exit stack: [V11, 0x6c, V155]

================================

Block 0x1fa
[0x1fa:0x203]
---
Predecessors: [0x6e]
Successors: [0x204, 0x2a0]
---
0x1fa JUMPDEST
0x1fb PUSH1 0x2
0x1fd SLOAD
0x1fe ISZERO
0x1ff ISZERO
0x200 PUSH2 0x2a0
0x203 JUMPI
---
0x1fa: JUMPDEST 
0x1fb: V157 = 0x2
0x1fd: V158 = S[0x2]
0x1fe: V159 = ISZERO V158
0x1ff: V160 = ISZERO V159
0x200: V161 = 0x2a0
0x203: JUMPI 0x2a0 V160
---
Entry stack: [V11, 0x6c, V41, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V41, V62]

================================

Block 0x204
[0x204:0x213]
---
Predecessors: [0x1fa]
Successors: [0x214]
---
0x204 DUP1
0x205 PUSH1 0x40
0x207 MLOAD
0x208 DUP1
0x209 DUP3
0x20a DUP1
0x20b MLOAD
0x20c SWAP1
0x20d PUSH1 0x20
0x20f ADD
0x210 SWAP1
0x211 DUP1
0x212 DUP4
0x213 DUP4
---
0x205: V162 = 0x40
0x207: V163 = M[0x40]
0x20b: V164 = M[V62]
0x20d: V165 = 0x20
0x20f: V166 = ADD 0x20 V62
---
Entry stack: [V11, 0x6c, V41, V62]
Stack pops: 1
Stack additions: [S0, S0, V163, V163, V166, V164, V164, V163, V166]
Exit stack: [V11, 0x6c, V41, V62, V62, V163, V163, V166, V164, V164, V163, V166]

================================

Block 0x214
[0x214:0x21c]
---
Predecessors: [0x204, 0x21d]
Successors: [0x21d, 0x233]
---
0x214 JUMPDEST
0x215 PUSH1 0x20
0x217 DUP4
0x218 LT
0x219 PUSH2 0x233
0x21c JUMPI
---
0x214: JUMPDEST 
0x215: V167 = 0x20
0x218: V168 = LT S2 0x20
0x219: V169 = 0x233
0x21c: JUMPI 0x233 V168
---
Entry stack: [V11, 0x6c, V41, V62, V62, V163, V163, V166, V164, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x6c, V41, V62, V62, V163, V163, V166, V164, S2, S1, S0]

================================

Block 0x21d
[0x21d:0x232]
---
Predecessors: [0x214]
Successors: [0x214]
---
0x21d DUP1
0x21e MLOAD
0x21f DUP3
0x220 MSTORE
0x221 PUSH1 0x1f
0x223 NOT
0x224 SWAP1
0x225 SWAP3
0x226 ADD
0x227 SWAP2
0x228 PUSH1 0x20
0x22a SWAP2
0x22b DUP3
0x22c ADD
0x22d SWAP2
0x22e ADD
0x22f PUSH2 0x214
0x232 JUMP
---
0x21e: V170 = M[S0]
0x220: M[S1] = V170
0x221: V171 = 0x1f
0x223: V172 = NOT 0x1f
0x226: V173 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x228: V174 = 0x20
0x22c: V175 = ADD 0x20 S1
0x22e: V176 = ADD 0x20 S0
0x22f: V177 = 0x214
0x232: JUMP 0x214
---
Entry stack: [V11, 0x6c, V41, V62, V62, V163, V163, V166, V164, S2, S1, S0]
Stack pops: 3
Stack additions: [V173, V175, V176]
Exit stack: [V11, 0x6c, V41, V62, V62, V163, V163, V166, V164, V173, V175, V176]

================================

Block 0x233
[0x233:0x275]
---
Predecessors: [0x214]
Successors: [0x458]
---
0x233 JUMPDEST
0x234 PUSH1 0x1
0x236 DUP4
0x237 PUSH1 0x20
0x239 SUB
0x23a PUSH2 0x100
0x23d EXP
0x23e SUB
0x23f DUP1
0x240 NOT
0x241 DUP3
0x242 MLOAD
0x243 AND
0x244 DUP2
0x245 DUP5
0x246 MLOAD
0x247 AND
0x248 OR
0x249 SWAP1
0x24a SWAP3
0x24b MSTORE
0x24c POP
0x24d POP
0x24e POP
0x24f SWAP2
0x250 SWAP1
0x251 SWAP2
0x252 ADD
0x253 SWAP3
0x254 POP
0x255 PUSH1 0x40
0x257 SWAP2
0x258 POP
0x259 POP
0x25a MLOAD
0x25b SWAP1
0x25c DUP2
0x25d SWAP1
0x25e SUB
0x25f SWAP1
0x260 SHA3
0x261 PUSH1 0x2
0x263 SSTORE
0x264 PUSH1 0x0
0x266 DUP3
0x267 DUP1
0x268 MLOAD
0x269 PUSH2 0x276
0x26c SWAP3
0x26d SWAP2
0x26e PUSH1 0x20
0x270 ADD
0x271 SWAP1
0x272 PUSH2 0x458
0x275 JUMP
---
0x233: JUMPDEST 
0x234: V178 = 0x1
0x237: V179 = 0x20
0x239: V180 = SUB 0x20 S2
0x23a: V181 = 0x100
0x23d: V182 = EXP 0x100 V180
0x23e: V183 = SUB V182 0x1
0x240: V184 = NOT V183
0x242: V185 = M[S0]
0x243: V186 = AND V185 V184
0x246: V187 = M[S1]
0x247: V188 = AND V187 V183
0x248: V189 = OR V188 V186
0x24b: M[S1] = V189
0x252: V190 = ADD V164 V163
0x255: V191 = 0x40
0x25a: V192 = M[0x40]
0x25e: V193 = SUB V190 V192
0x260: V194 = SHA3 V192 V193
0x261: V195 = 0x2
0x263: S[0x2] = V194
0x264: V196 = 0x0
0x268: V197 = M[V41]
0x269: V198 = 0x276
0x26e: V199 = 0x20
0x270: V200 = ADD 0x20 V41
0x272: V201 = 0x458
0x275: JUMP 0x458
---
Entry stack: [V11, 0x6c, V41, V62, V62, V163, V163, V166, V164, S2, S1, S0]
Stack pops: 10
Stack additions: [S9, S8, 0x276, 0x0, V200, V197]
Exit stack: [V11, 0x6c, V41, V62, 0x276, 0x0, V200, V197]

================================

Block 0x276
[0x276:0x29f]
---
Predecessors: [0x2a0, 0x369, 0x4d2]
Successors: [0x2a0]
---
0x276 JUMPDEST
0x277 POP
0x278 PUSH1 0x1
0x27a DUP1
0x27b SLOAD
0x27c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x291 NOT
0x292 AND
0x293 CALLER
0x294 PUSH1 0x1
0x296 PUSH1 0xa0
0x298 PUSH1 0x2
0x29a EXP
0x29b SUB
0x29c AND
0x29d OR
0x29e SWAP1
0x29f SSTORE
---
0x276: JUMPDEST 
0x278: V202 = 0x1
0x27b: V203 = S[0x1]
0x27c: V204 = 0xffffffffffffffffffffffffffffffffffffffff
0x291: V205 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x292: V206 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V203
0x293: V207 = CALLER
0x294: V208 = 0x1
0x296: V209 = 0xa0
0x298: V210 = 0x2
0x29a: V211 = EXP 0x2 0xa0
0x29b: V212 = SUB 0x10000000000000000000000000000000000000000 0x1
0x29c: V213 = AND 0xffffffffffffffffffffffffffffffffffffffff V207
0x29d: V214 = OR V213 V206
0x29f: S[0x1] = V214
---
Entry stack: [V11, 0x6c, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x6c, S5, S4, S3, S2, S1]

================================

Block 0x2a0
[0x2a0:0x2a3]
---
Predecessors: [0x1fa, 0x276, 0x2f9, 0x2ff]
Successors: [0x6c, 0x276, 0x369]
---
0x2a0 JUMPDEST
0x2a1 POP
0x2a2 POP
0x2a3 JUMP
---
0x2a0: JUMPDEST 
0x2a3: JUMP S2
---
Entry stack: [V11, 0x6c, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x6c, S4, S3]

================================

Block 0x2a4
[0x2a4:0x2bf]
---
Predecessors: [0xf6]
Successors: [0x2c0, 0x2c4]
---
0x2a4 JUMPDEST
0x2a5 ORIGIN
0x2a6 PUSH1 0x1
0x2a8 PUSH1 0xa0
0x2aa PUSH1 0x2
0x2ac EXP
0x2ad SUB
0x2ae AND
0x2af CALLER
0x2b0 PUSH1 0x1
0x2b2 PUSH1 0xa0
0x2b4 PUSH1 0x2
0x2b6 EXP
0x2b7 SUB
0x2b8 AND
0x2b9 EQ
0x2ba ISZERO
0x2bb ISZERO
0x2bc PUSH2 0x2c4
0x2bf JUMPI
---
0x2a4: JUMPDEST 
0x2a5: V215 = ORIGIN
0x2a6: V216 = 0x1
0x2a8: V217 = 0xa0
0x2aa: V218 = 0x2
0x2ac: V219 = EXP 0x2 0xa0
0x2ad: V220 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ae: V221 = AND 0xffffffffffffffffffffffffffffffffffffffff V215
0x2af: V222 = CALLER
0x2b0: V223 = 0x1
0x2b2: V224 = 0xa0
0x2b4: V225 = 0x2
0x2b6: V226 = EXP 0x2 0xa0
0x2b7: V227 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b8: V228 = AND 0xffffffffffffffffffffffffffffffffffffffff V222
0x2b9: V229 = EQ V228 V221
0x2ba: V230 = ISZERO V229
0x2bb: V231 = ISZERO V230
0x2bc: V232 = 0x2c4
0x2bf: JUMPI 0x2c4 V231
---
Entry stack: [V11, 0x6c, V72, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V72, V74]

================================

Block 0x2c0
[0x2c0:0x2c3]
---
Predecessors: [0x2a4]
Successors: []
---
0x2c0 PUSH1 0x0
0x2c2 DUP1
0x2c3 REVERT
---
0x2c0: V233 = 0x0
0x2c3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6c, V72, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V72, V74]

================================

Block 0x2c4
[0x2c4:0x2ec]
---
Predecessors: [0x2a4]
Successors: [0x2ed, 0x2f9]
---
0x2c4 JUMPDEST
0x2c5 DUP2
0x2c6 DUP2
0x2c7 PUSH1 0x40
0x2c9 MLOAD
0x2ca DUP1
0x2cb DUP4
0x2cc DUP4
0x2cd DUP1
0x2ce DUP3
0x2cf DUP5
0x2d0 CALLDATACOPY
0x2d1 DUP3
0x2d2 ADD
0x2d3 SWAP2
0x2d4 POP
0x2d5 POP
0x2d6 SWAP3
0x2d7 POP
0x2d8 POP
0x2d9 POP
0x2da PUSH1 0x40
0x2dc MLOAD
0x2dd SWAP1
0x2de DUP2
0x2df SWAP1
0x2e0 SUB
0x2e1 SWAP1
0x2e2 SHA3
0x2e3 PUSH1 0x2
0x2e5 SLOAD
0x2e6 EQ
0x2e7 DUP1
0x2e8 ISZERO
0x2e9 PUSH2 0x2f9
0x2ec JUMPI
---
0x2c4: JUMPDEST 
0x2c7: V234 = 0x40
0x2c9: V235 = M[0x40]
0x2d0: CALLDATACOPY V235 V72 V74
0x2d2: V236 = ADD V235 V74
0x2da: V237 = 0x40
0x2dc: V238 = M[0x40]
0x2e0: V239 = SUB V236 V238
0x2e2: V240 = SHA3 V238 V239
0x2e3: V241 = 0x2
0x2e5: V242 = S[0x2]
0x2e6: V243 = EQ V242 V240
0x2e8: V244 = ISZERO V243
0x2e9: V245 = 0x2f9
0x2ec: JUMPI 0x2f9 V244
---
Entry stack: [V11, 0x6c, V72, V74]
Stack pops: 2
Stack additions: [S1, S0, V243]
Exit stack: [V11, 0x6c, V72, V74, V243]

================================

Block 0x2ed
[0x2ed:0x2f8]
---
Predecessors: [0x2c4]
Successors: [0x2f9]
---
0x2ed POP
0x2ee PUSH8 0xde0b6b3a7640000
0x2f7 CALLVALUE
0x2f8 GT
---
0x2ee: V246 = 0xde0b6b3a7640000
0x2f7: V247 = CALLVALUE
0x2f8: V248 = GT V247 0xde0b6b3a7640000
---
Entry stack: [V11, 0x6c, V72, V74, V243]
Stack pops: 1
Stack additions: [V248]
Exit stack: [V11, 0x6c, V72, V74, V248]

================================

Block 0x2f9
[0x2f9:0x2fe]
---
Predecessors: [0x2c4, 0x2ed]
Successors: [0x2a0, 0x2ff]
---
0x2f9 JUMPDEST
0x2fa ISZERO
0x2fb PUSH2 0x2a0
0x2fe JUMPI
---
0x2f9: JUMPDEST 
0x2fa: V249 = ISZERO S0
0x2fb: V250 = 0x2a0
0x2fe: JUMPI 0x2a0 V249
---
Entry stack: [V11, 0x6c, V72, V74, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x6c, V72, V74]

================================

Block 0x2ff
[0x2ff:0x336]
---
Predecessors: [0x2f9]
Successors: [0x2a0, 0x337]
---
0x2ff CALLER
0x300 PUSH1 0x1
0x302 PUSH1 0xa0
0x304 PUSH1 0x2
0x306 EXP
0x307 SUB
0x308 AND
0x309 PUSH2 0x8fc
0x30c ADDRESS
0x30d PUSH1 0x1
0x30f PUSH1 0xa0
0x311 PUSH1 0x2
0x313 EXP
0x314 SUB
0x315 AND
0x316 BALANCE
0x317 SWAP1
0x318 DUP2
0x319 ISZERO
0x31a MUL
0x31b SWAP1
0x31c PUSH1 0x40
0x31e MLOAD
0x31f PUSH1 0x0
0x321 PUSH1 0x40
0x323 MLOAD
0x324 DUP1
0x325 DUP4
0x326 SUB
0x327 DUP2
0x328 DUP6
0x329 DUP9
0x32a DUP9
0x32b CALL
0x32c SWAP4
0x32d POP
0x32e POP
0x32f POP
0x330 POP
0x331 ISZERO
0x332 ISZERO
0x333 PUSH2 0x2a0
0x336 JUMPI
---
0x2ff: V251 = CALLER
0x300: V252 = 0x1
0x302: V253 = 0xa0
0x304: V254 = 0x2
0x306: V255 = EXP 0x2 0xa0
0x307: V256 = SUB 0x10000000000000000000000000000000000000000 0x1
0x308: V257 = AND 0xffffffffffffffffffffffffffffffffffffffff V251
0x309: V258 = 0x8fc
0x30c: V259 = ADDRESS
0x30d: V260 = 0x1
0x30f: V261 = 0xa0
0x311: V262 = 0x2
0x313: V263 = EXP 0x2 0xa0
0x314: V264 = SUB 0x10000000000000000000000000000000000000000 0x1
0x315: V265 = AND 0xffffffffffffffffffffffffffffffffffffffff V259
0x316: V266 = BALANCE V265
0x319: V267 = ISZERO V266
0x31a: V268 = MUL V267 0x8fc
0x31c: V269 = 0x40
0x31e: V270 = M[0x40]
0x31f: V271 = 0x0
0x321: V272 = 0x40
0x323: V273 = M[0x40]
0x326: V274 = SUB V270 V273
0x32b: V275 = CALL V268 V257 V266 V273 V274 V273 0x0
0x331: V276 = ISZERO V275
0x332: V277 = ISZERO V276
0x333: V278 = 0x2a0
0x336: JUMPI 0x2a0 V277
---
Entry stack: [V11, 0x6c, V72, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V72, V74]

================================

Block 0x337
[0x337:0x33a]
---
Predecessors: [0x2ff]
Successors: []
---
0x337 PUSH1 0x0
0x339 DUP1
0x33a REVERT
---
0x337: V279 = 0x0
0x33a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6c, V72, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V72, V74]

================================

Block 0x33b
[0x33b:0x351]
---
Predecessors: [0x109]
Successors: [0x352, 0x356]
---
0x33b JUMPDEST
0x33c PUSH1 0x1
0x33e SLOAD
0x33f CALLER
0x340 PUSH1 0x1
0x342 PUSH1 0xa0
0x344 PUSH1 0x2
0x346 EXP
0x347 SUB
0x348 SWAP1
0x349 DUP2
0x34a AND
0x34b SWAP2
0x34c AND
0x34d EQ
0x34e PUSH2 0x356
0x351 JUMPI
---
0x33b: JUMPDEST 
0x33c: V280 = 0x1
0x33e: V281 = S[0x1]
0x33f: V282 = CALLER
0x340: V283 = 0x1
0x342: V284 = 0xa0
0x344: V285 = 0x2
0x346: V286 = EXP 0x2 0xa0
0x347: V287 = SUB 0x10000000000000000000000000000000000000000 0x1
0x34a: V288 = AND 0xffffffffffffffffffffffffffffffffffffffff V282
0x34c: V289 = AND V281 0xffffffffffffffffffffffffffffffffffffffff
0x34d: V290 = EQ V289 V288
0x34e: V291 = 0x356
0x351: JUMPI 0x356 V290
---
Entry stack: [V11, 0x6c, V90, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V90, V95]

================================

Block 0x352
[0x352:0x355]
---
Predecessors: [0x33b]
Successors: []
---
0x352 PUSH1 0x0
0x354 DUP1
0x355 REVERT
---
0x352: V292 = 0x0
0x355: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6c, V90, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V90, V95]

================================

Block 0x356
[0x356:0x368]
---
Predecessors: [0x33b]
Successors: [0x458]
---
0x356 JUMPDEST
0x357 PUSH1 0x0
0x359 DUP3
0x35a DUP1
0x35b MLOAD
0x35c PUSH2 0x369
0x35f SWAP3
0x360 SWAP2
0x361 PUSH1 0x20
0x363 ADD
0x364 SWAP1
0x365 PUSH2 0x458
0x368 JUMP
---
0x356: JUMPDEST 
0x357: V293 = 0x0
0x35b: V294 = M[V90]
0x35c: V295 = 0x369
0x361: V296 = 0x20
0x363: V297 = ADD 0x20 V90
0x365: V298 = 0x458
0x368: JUMP 0x458
---
Entry stack: [V11, 0x6c, V90, V95]
Stack pops: 2
Stack additions: [S1, S0, 0x369, 0x0, V297, V294]
Exit stack: [V11, 0x6c, V90, V95, 0x369, 0x0, V297, V294]

================================

Block 0x369
[0x369:0x36f]
---
Predecessors: [0x2a0, 0x369, 0x4d2]
Successors: [0x6c, 0x276, 0x369]
---
0x369 JUMPDEST
0x36a POP
0x36b PUSH1 0x2
0x36d SSTORE
0x36e POP
0x36f JUMP
---
0x369: JUMPDEST 
0x36b: V299 = 0x2
0x36d: S[0x2] = S1
0x36f: JUMP S3
---
Entry stack: [V11, 0x6c, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x6c, S5, S4]

================================

Block 0x370
[0x370:0x3bf]
---
Predecessors: [0x15c]
Successors: [0x3c0, 0x406]
---
0x370 JUMPDEST
0x371 PUSH1 0x0
0x373 DUP1
0x374 SLOAD
0x375 PUSH1 0x1
0x377 DUP2
0x378 PUSH1 0x1
0x37a AND
0x37b ISZERO
0x37c PUSH2 0x100
0x37f MUL
0x380 SUB
0x381 AND
0x382 PUSH1 0x2
0x384 SWAP1
0x385 DIV
0x386 DUP1
0x387 PUSH1 0x1f
0x389 ADD
0x38a PUSH1 0x20
0x38c DUP1
0x38d SWAP2
0x38e DIV
0x38f MUL
0x390 PUSH1 0x20
0x392 ADD
0x393 PUSH1 0x40
0x395 MLOAD
0x396 SWAP1
0x397 DUP2
0x398 ADD
0x399 PUSH1 0x40
0x39b MSTORE
0x39c DUP1
0x39d SWAP3
0x39e SWAP2
0x39f SWAP1
0x3a0 DUP2
0x3a1 DUP2
0x3a2 MSTORE
0x3a3 PUSH1 0x20
0x3a5 ADD
0x3a6 DUP3
0x3a7 DUP1
0x3a8 SLOAD
0x3a9 PUSH1 0x1
0x3ab DUP2
0x3ac PUSH1 0x1
0x3ae AND
0x3af ISZERO
0x3b0 PUSH2 0x100
0x3b3 MUL
0x3b4 SUB
0x3b5 AND
0x3b6 PUSH1 0x2
0x3b8 SWAP1
0x3b9 DIV
0x3ba DUP1
0x3bb ISZERO
0x3bc PUSH2 0x406
0x3bf JUMPI
---
0x370: JUMPDEST 
0x371: V300 = 0x0
0x374: V301 = S[0x0]
0x375: V302 = 0x1
0x378: V303 = 0x1
0x37a: V304 = AND 0x1 V301
0x37b: V305 = ISZERO V304
0x37c: V306 = 0x100
0x37f: V307 = MUL 0x100 V305
0x380: V308 = SUB V307 0x1
0x381: V309 = AND V308 V301
0x382: V310 = 0x2
0x385: V311 = DIV V309 0x2
0x387: V312 = 0x1f
0x389: V313 = ADD 0x1f V311
0x38a: V314 = 0x20
0x38e: V315 = DIV V313 0x20
0x38f: V316 = MUL V315 0x20
0x390: V317 = 0x20
0x392: V318 = ADD 0x20 V316
0x393: V319 = 0x40
0x395: V320 = M[0x40]
0x398: V321 = ADD V320 V318
0x399: V322 = 0x40
0x39b: M[0x40] = V321
0x3a2: M[V320] = V311
0x3a3: V323 = 0x20
0x3a5: V324 = ADD 0x20 V320
0x3a8: V325 = S[0x0]
0x3a9: V326 = 0x1
0x3ac: V327 = 0x1
0x3ae: V328 = AND 0x1 V325
0x3af: V329 = ISZERO V328
0x3b0: V330 = 0x100
0x3b3: V331 = MUL 0x100 V329
0x3b4: V332 = SUB V331 0x1
0x3b5: V333 = AND V332 V325
0x3b6: V334 = 0x2
0x3b9: V335 = DIV V333 0x2
0x3bb: V336 = ISZERO V335
0x3bc: V337 = 0x406
0x3bf: JUMPI 0x406 V336
---
Entry stack: [V11, 0x164]
Stack pops: 0
Stack additions: [V320, 0x0, V311, V324, 0x0, V335]
Exit stack: [V11, 0x164, V320, 0x0, V311, V324, 0x0, V335]

================================

Block 0x3c0
[0x3c0:0x3c7]
---
Predecessors: [0x370]
Successors: [0x3c8, 0x3db]
---
0x3c0 DUP1
0x3c1 PUSH1 0x1f
0x3c3 LT
0x3c4 PUSH2 0x3db
0x3c7 JUMPI
---
0x3c1: V338 = 0x1f
0x3c3: V339 = LT 0x1f V335
0x3c4: V340 = 0x3db
0x3c7: JUMPI 0x3db V339
---
Entry stack: [V11, 0x164, V320, 0x0, V311, V324, 0x0, V335]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x164, V320, 0x0, V311, V324, 0x0, V335]

================================

Block 0x3c8
[0x3c8:0x3da]
---
Predecessors: [0x3c0]
Successors: [0x406]
---
0x3c8 PUSH2 0x100
0x3cb DUP1
0x3cc DUP4
0x3cd SLOAD
0x3ce DIV
0x3cf MUL
0x3d0 DUP4
0x3d1 MSTORE
0x3d2 SWAP2
0x3d3 PUSH1 0x20
0x3d5 ADD
0x3d6 SWAP2
0x3d7 PUSH2 0x406
0x3da JUMP
---
0x3c8: V341 = 0x100
0x3cd: V342 = S[0x0]
0x3ce: V343 = DIV V342 0x100
0x3cf: V344 = MUL V343 0x100
0x3d1: M[V324] = V344
0x3d3: V345 = 0x20
0x3d5: V346 = ADD 0x20 V324
0x3d7: V347 = 0x406
0x3da: JUMP 0x406
---
Entry stack: [V11, 0x164, V320, 0x0, V311, V324, 0x0, V335]
Stack pops: 3
Stack additions: [V346, S1, S0]
Exit stack: [V11, 0x164, V320, 0x0, V311, V346, 0x0, V335]

================================

Block 0x3db
[0x3db:0x3e8]
---
Predecessors: [0x3c0]
Successors: [0x3e9]
---
0x3db JUMPDEST
0x3dc DUP3
0x3dd ADD
0x3de SWAP2
0x3df SWAP1
0x3e0 PUSH1 0x0
0x3e2 MSTORE
0x3e3 PUSH1 0x20
0x3e5 PUSH1 0x0
0x3e7 SHA3
0x3e8 SWAP1
---
0x3db: JUMPDEST 
0x3dd: V348 = ADD V324 V335
0x3e0: V349 = 0x0
0x3e2: M[0x0] = 0x0
0x3e3: V350 = 0x20
0x3e5: V351 = 0x0
0x3e7: V352 = SHA3 0x0 0x20
---
Entry stack: [V11, 0x164, V320, 0x0, V311, V324, 0x0, V335]
Stack pops: 3
Stack additions: [V348, V352, S2]
Exit stack: [V11, 0x164, V320, 0x0, V311, V348, V352, V324]

================================

Block 0x3e9
[0x3e9:0x3fc]
---
Predecessors: [0x3db, 0x3e9]
Successors: [0x3e9, 0x3fd]
---
0x3e9 JUMPDEST
0x3ea DUP2
0x3eb SLOAD
0x3ec DUP2
0x3ed MSTORE
0x3ee SWAP1
0x3ef PUSH1 0x1
0x3f1 ADD
0x3f2 SWAP1
0x3f3 PUSH1 0x20
0x3f5 ADD
0x3f6 DUP1
0x3f7 DUP4
0x3f8 GT
0x3f9 PUSH2 0x3e9
0x3fc JUMPI
---
0x3e9: JUMPDEST 
0x3eb: V353 = S[S1]
0x3ed: M[S0] = V353
0x3ef: V354 = 0x1
0x3f1: V355 = ADD 0x1 S1
0x3f3: V356 = 0x20
0x3f5: V357 = ADD 0x20 S0
0x3f8: V358 = GT V348 V357
0x3f9: V359 = 0x3e9
0x3fc: JUMPI 0x3e9 V358
---
Entry stack: [V11, 0x164, V320, 0x0, V311, V348, S1, S0]
Stack pops: 3
Stack additions: [S2, V355, V357]
Exit stack: [V11, 0x164, V320, 0x0, V311, V348, V355, V357]

================================

Block 0x3fd
[0x3fd:0x405]
---
Predecessors: [0x3e9]
Successors: [0x406]
---
0x3fd DUP3
0x3fe SWAP1
0x3ff SUB
0x400 PUSH1 0x1f
0x402 AND
0x403 DUP3
0x404 ADD
0x405 SWAP2
---
0x3ff: V360 = SUB V357 V348
0x400: V361 = 0x1f
0x402: V362 = AND 0x1f V360
0x404: V363 = ADD V348 V362
---
Entry stack: [V11, 0x164, V320, 0x0, V311, V348, V355, V357]
Stack pops: 3
Stack additions: [V363, S1, S2]
Exit stack: [V11, 0x164, V320, 0x0, V311, V363, V355, V348]

================================

Block 0x406
[0x406:0x40d]
---
Predecessors: [0x370, 0x3c8, 0x3fd]
Successors: [0x164]
---
0x406 JUMPDEST
0x407 POP
0x408 POP
0x409 POP
0x40a POP
0x40b POP
0x40c DUP2
0x40d JUMP
---
0x406: JUMPDEST 
0x40d: JUMP 0x164
---
Entry stack: [V11, 0x164, V320, 0x0, V311, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0x164, V320]

================================

Block 0x40e
[0x40e:0x424]
---
Predecessors: [0x1e6]
Successors: [0x425, 0x429]
---
0x40e JUMPDEST
0x40f PUSH1 0x1
0x411 SLOAD
0x412 CALLER
0x413 PUSH1 0x1
0x415 PUSH1 0xa0
0x417 PUSH1 0x2
0x419 EXP
0x41a SUB
0x41b SWAP1
0x41c DUP2
0x41d AND
0x41e SWAP2
0x41f AND
0x420 EQ
0x421 PUSH2 0x429
0x424 JUMPI
---
0x40e: JUMPDEST 
0x40f: V364 = 0x1
0x411: V365 = S[0x1]
0x412: V366 = CALLER
0x413: V367 = 0x1
0x415: V368 = 0xa0
0x417: V369 = 0x2
0x419: V370 = EXP 0x2 0xa0
0x41a: V371 = SUB 0x10000000000000000000000000000000000000000 0x1
0x41d: V372 = AND 0xffffffffffffffffffffffffffffffffffffffff V366
0x41f: V373 = AND V365 0xffffffffffffffffffffffffffffffffffffffff
0x420: V374 = EQ V373 V372
0x421: V375 = 0x429
0x424: JUMPI 0x429 V374
---
Entry stack: [V11, 0x6c, V155]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V155]

================================

Block 0x425
[0x425:0x428]
---
Predecessors: [0x40e]
Successors: []
---
0x425 PUSH1 0x0
0x427 DUP1
0x428 REVERT
---
0x425: V376 = 0x0
0x428: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6c, V155]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V155]

================================

Block 0x429
[0x429:0x457]
---
Predecessors: [0x40e]
Successors: [0x6c]
---
0x429 JUMPDEST
0x42a PUSH1 0x1
0x42c DUP1
0x42d SLOAD
0x42e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x443 NOT
0x444 AND
0x445 PUSH1 0x1
0x447 PUSH1 0xa0
0x449 PUSH1 0x2
0x44b EXP
0x44c SUB
0x44d SWAP3
0x44e SWAP1
0x44f SWAP3
0x450 AND
0x451 SWAP2
0x452 SWAP1
0x453 SWAP2
0x454 OR
0x455 SWAP1
0x456 SSTORE
0x457 JUMP
---
0x429: JUMPDEST 
0x42a: V377 = 0x1
0x42d: V378 = S[0x1]
0x42e: V379 = 0xffffffffffffffffffffffffffffffffffffffff
0x443: V380 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x444: V381 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V378
0x445: V382 = 0x1
0x447: V383 = 0xa0
0x449: V384 = 0x2
0x44b: V385 = EXP 0x2 0xa0
0x44c: V386 = SUB 0x10000000000000000000000000000000000000000 0x1
0x450: V387 = AND 0xffffffffffffffffffffffffffffffffffffffff V155
0x454: V388 = OR V387 V381
0x456: S[0x1] = V388
0x457: JUMP 0x6c
---
Entry stack: [V11, 0x6c, V155]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x458
[0x458:0x488]
---
Predecessors: [0x233, 0x356]
Successors: [0x489, 0x499]
---
0x458 JUMPDEST
0x459 DUP3
0x45a DUP1
0x45b SLOAD
0x45c PUSH1 0x1
0x45e DUP2
0x45f PUSH1 0x1
0x461 AND
0x462 ISZERO
0x463 PUSH2 0x100
0x466 MUL
0x467 SUB
0x468 AND
0x469 PUSH1 0x2
0x46b SWAP1
0x46c DIV
0x46d SWAP1
0x46e PUSH1 0x0
0x470 MSTORE
0x471 PUSH1 0x20
0x473 PUSH1 0x0
0x475 SHA3
0x476 SWAP1
0x477 PUSH1 0x1f
0x479 ADD
0x47a PUSH1 0x20
0x47c SWAP1
0x47d DIV
0x47e DUP2
0x47f ADD
0x480 SWAP3
0x481 DUP3
0x482 PUSH1 0x1f
0x484 LT
0x485 PUSH2 0x499
0x488 JUMPI
---
0x458: JUMPDEST 
0x45b: V389 = S[0x0]
0x45c: V390 = 0x1
0x45f: V391 = 0x1
0x461: V392 = AND 0x1 V389
0x462: V393 = ISZERO V392
0x463: V394 = 0x100
0x466: V395 = MUL 0x100 V393
0x467: V396 = SUB V395 0x1
0x468: V397 = AND V396 V389
0x469: V398 = 0x2
0x46c: V399 = DIV V397 0x2
0x46e: V400 = 0x0
0x470: M[0x0] = 0x0
0x471: V401 = 0x20
0x473: V402 = 0x0
0x475: V403 = SHA3 0x0 0x20
0x477: V404 = 0x1f
0x479: V405 = ADD 0x1f V399
0x47a: V406 = 0x20
0x47d: V407 = DIV V405 0x20
0x47f: V408 = ADD V403 V407
0x482: V409 = 0x1f
0x484: V410 = LT 0x1f S0
0x485: V411 = 0x499
0x488: JUMPI 0x499 V410
---
Entry stack: [V11, 0x6c, S5, S4, {0x276, 0x369}, 0x0, S1, S0]
Stack pops: 3
Stack additions: [S2, V408, S0, V403, S1]
Exit stack: [V11, 0x6c, S5, S4, {0x276, 0x369}, 0x0, V408, S0, V403, S1]

================================

Block 0x489
[0x489:0x498]
---
Predecessors: [0x458]
Successors: [0x4c6]
---
0x489 DUP1
0x48a MLOAD
0x48b PUSH1 0xff
0x48d NOT
0x48e AND
0x48f DUP4
0x490 DUP1
0x491 ADD
0x492 OR
0x493 DUP6
0x494 SSTORE
0x495 PUSH2 0x4c6
0x498 JUMP
---
0x48a: V412 = M[S0]
0x48b: V413 = 0xff
0x48d: V414 = NOT 0xff
0x48e: V415 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V412
0x491: V416 = ADD S2 S2
0x492: V417 = OR V416 V415
0x494: S[0x0] = V417
0x495: V418 = 0x4c6
0x498: JUMP 0x4c6
---
Entry stack: [V11, 0x6c, S7, S6, {0x276, 0x369}, 0x0, V408, S2, V403, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x6c, S7, S6, {0x276, 0x369}, 0x0, V408, S2, V403, S0]

================================

Block 0x499
[0x499:0x4a7]
---
Predecessors: [0x458]
Successors: [0x4a8, 0x4c6]
---
0x499 JUMPDEST
0x49a DUP3
0x49b DUP1
0x49c ADD
0x49d PUSH1 0x1
0x49f ADD
0x4a0 DUP6
0x4a1 SSTORE
0x4a2 DUP3
0x4a3 ISZERO
0x4a4 PUSH2 0x4c6
0x4a7 JUMPI
---
0x499: JUMPDEST 
0x49c: V419 = ADD S2 S2
0x49d: V420 = 0x1
0x49f: V421 = ADD 0x1 V419
0x4a1: S[0x0] = V421
0x4a3: V422 = ISZERO S2
0x4a4: V423 = 0x4c6
0x4a7: JUMPI 0x4c6 V422
---
Entry stack: [V11, 0x6c, S7, S6, {0x276, 0x369}, 0x0, V408, S2, V403, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x6c, S7, S6, {0x276, 0x369}, 0x0, V408, S2, V403, S0]

================================

Block 0x4a8
[0x4a8:0x4aa]
---
Predecessors: [0x499]
Successors: [0x4ab]
---
0x4a8 SWAP2
0x4a9 DUP3
0x4aa ADD
---
0x4aa: V424 = ADD S0 S2
---
Entry stack: [V11, 0x6c, S7, S6, {0x276, 0x369}, 0x0, V408, S2, V403, S0]
Stack pops: 3
Stack additions: [S0, S1, V424]
Exit stack: [V11, 0x6c, S7, S6, {0x276, 0x369}, 0x0, V408, S0, V403, V424]

================================

Block 0x4ab
[0x4ab:0x4b3]
---
Predecessors: [0x4a8, 0x4b4]
Successors: [0x4b4, 0x4c6]
---
0x4ab JUMPDEST
0x4ac DUP3
0x4ad DUP2
0x4ae GT
0x4af ISZERO
0x4b0 PUSH2 0x4c6
0x4b3 JUMPI
---
0x4ab: JUMPDEST 
0x4ae: V425 = GT V424 S2
0x4af: V426 = ISZERO V425
0x4b0: V427 = 0x4c6
0x4b3: JUMPI 0x4c6 V426
---
Entry stack: [V11, 0x6c, S7, S6, {0x276, 0x369}, 0x0, V408, S2, S1, V424]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x6c, S7, S6, {0x276, 0x369}, 0x0, V408, S2, S1, V424]

================================

Block 0x4b4
[0x4b4:0x4c5]
---
Predecessors: [0x4ab]
Successors: [0x4ab]
---
0x4b4 DUP3
0x4b5 MLOAD
0x4b6 DUP3
0x4b7 SSTORE
0x4b8 SWAP2
0x4b9 PUSH1 0x20
0x4bb ADD
0x4bc SWAP2
0x4bd SWAP1
0x4be PUSH1 0x1
0x4c0 ADD
0x4c1 SWAP1
0x4c2 PUSH2 0x4ab
0x4c5 JUMP
---
0x4b5: V428 = M[S2]
0x4b7: S[S1] = V428
0x4b9: V429 = 0x20
0x4bb: V430 = ADD 0x20 S2
0x4be: V431 = 0x1
0x4c0: V432 = ADD 0x1 S1
0x4c2: V433 = 0x4ab
0x4c5: JUMP 0x4ab
---
Entry stack: [V11, 0x6c, S7, S6, {0x276, 0x369}, 0x0, V408, S2, S1, V424]
Stack pops: 3
Stack additions: [V430, V432, S0]
Exit stack: [V11, 0x6c, S7, S6, {0x276, 0x369}, 0x0, V408, V430, V432, V424]

================================

Block 0x4c6
[0x4c6:0x4d1]
---
Predecessors: [0x489, 0x499, 0x4ab]
Successors: [0x4d6]
---
0x4c6 JUMPDEST
0x4c7 POP
0x4c8 PUSH2 0x4d2
0x4cb SWAP3
0x4cc SWAP2
0x4cd POP
0x4ce PUSH2 0x4d6
0x4d1 JUMP
---
0x4c6: JUMPDEST 
0x4c8: V434 = 0x4d2
0x4ce: V435 = 0x4d6
0x4d1: JUMP 0x4d6
---
Entry stack: [V11, 0x6c, S7, S6, {0x276, 0x369}, 0x0, V408, S2, S1, S0]
Stack pops: 4
Stack additions: [0x4d2, S3, S1]
Exit stack: [V11, 0x6c, S7, S6, {0x276, 0x369}, 0x0, 0x4d2, V408, S1]

================================

Block 0x4d2
[0x4d2:0x4d5]
---
Predecessors: [0x4dc, 0x4f0]
Successors: [0x6c, 0x276, 0x369, 0x4f0]
---
0x4d2 JUMPDEST
0x4d3 POP
0x4d4 SWAP1
0x4d5 JUMP
---
0x4d2: JUMPDEST 
0x4d5: JUMP {0x6c, 0x276, 0x369, 0x4f0}
---
Entry stack: [V11, 0x6c, S7, S6, {0x6c, 0x276, 0x369}, S4, S3, {0x6c, 0x276, 0x369, 0x4f0}, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0x6c, S7, S6, {0x6c, 0x276, 0x369}, S4, S3, S1]

================================

Block 0x4d6
[0x4d6:0x4db]
---
Predecessors: [0x4c6]
Successors: [0x4dc]
---
0x4d6 JUMPDEST
0x4d7 PUSH2 0x4f0
0x4da SWAP2
0x4db SWAP1
---
0x4d6: JUMPDEST 
0x4d7: V436 = 0x4f0
---
Entry stack: [V11, 0x6c, S6, S5, {0x276, 0x369}, 0x0, 0x4d2, V408, S0]
Stack pops: 2
Stack additions: [0x4f0, S1, S0]
Exit stack: [V11, 0x6c, S6, S5, {0x276, 0x369}, 0x0, 0x4d2, 0x4f0, V408, S0]

================================

Block 0x4dc
[0x4dc:0x4e4]
---
Predecessors: [0x4d6, 0x4e5]
Successors: [0x4d2, 0x4e5]
---
0x4dc JUMPDEST
0x4dd DUP1
0x4de DUP3
0x4df GT
0x4e0 ISZERO
0x4e1 PUSH2 0x4d2
0x4e4 JUMPI
---
0x4dc: JUMPDEST 
0x4df: V437 = GT V408 S0
0x4e0: V438 = ISZERO V437
0x4e1: V439 = 0x4d2
0x4e4: JUMPI 0x4d2 V438
---
Entry stack: [V11, 0x6c, S7, S6, {0x276, 0x369}, 0x0, 0x4d2, 0x4f0, V408, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x6c, S7, S6, {0x276, 0x369}, 0x0, 0x4d2, 0x4f0, V408, S0]

================================

Block 0x4e5
[0x4e5:0x4ef]
---
Predecessors: [0x4dc]
Successors: [0x4dc]
---
0x4e5 PUSH1 0x0
0x4e7 DUP2
0x4e8 SSTORE
0x4e9 PUSH1 0x1
0x4eb ADD
0x4ec PUSH2 0x4dc
0x4ef JUMP
---
0x4e5: V440 = 0x0
0x4e8: S[S0] = 0x0
0x4e9: V441 = 0x1
0x4eb: V442 = ADD 0x1 S0
0x4ec: V443 = 0x4dc
0x4ef: JUMP 0x4dc
---
Entry stack: [V11, 0x6c, S7, S6, {0x276, 0x369}, 0x0, 0x4d2, 0x4f0, V408, S0]
Stack pops: 1
Stack additions: [V442]
Exit stack: [V11, 0x6c, S7, S6, {0x276, 0x369}, 0x0, 0x4d2, 0x4f0, V408, V442]

================================

Block 0x4f0
[0x4f0:0x4f2]
---
Predecessors: [0x4d2]
Successors: [0x4d2]
---
0x4f0 JUMPDEST
0x4f1 SWAP1
0x4f2 JUMP
---
0x4f0: JUMPDEST 
0x4f2: JUMP S1
---
Entry stack: [V11, 0x6c, S5, S4, {0x6c, 0x276, 0x369}, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0x6c, S5, S4, {0x6c, 0x276, 0x369}, S2, S0]

================================

Block 0x4f3
[0x4f3:0x51e]
---
Predecessors: []
Successors: []
---
0x4f3 STOP
0x4f4 LOG1
0x4f5 PUSH6 0x627a7a723058
0x4fc SHA3
0x4fd DUP8
0x4fe ORIGIN
0x4ff SSTORE
0x500 MISSING 0xdb
0x501 INVALID
0x502 SHR
0x503 ISZERO
0x504 XOR
0x505 MISSING 0xcb
0x506 PUSH16 0x363ca8563e88181b804f93cf502ac59d
0x517 MISSING 0xb8
0x518 MISSING 0xcd
0x519 ADD
0x51a MISSING 0xd5
0x51b CODECOPY
0x51c ADD
0x51d STOP
0x51e MISSING 0x29
---
0x4f3: STOP 
0x4f4: LOG S0 S1 S2
0x4f5: V444 = 0x627a7a723058
0x4fc: V445 = SHA3 0x627a7a723058 S3
0x4fe: V446 = ORIGIN
0x4ff: S[V446] = S10
0x500: MISSING 0xdb
0x501: INVALID 
0x502: V447 = SHR S0 S1
0x503: V448 = ISZERO V447
0x504: V449 = XOR V448 S2
0x505: MISSING 0xcb
0x506: V450 = 0x363ca8563e88181b804f93cf502ac59d
0x517: MISSING 0xb8
0x518: MISSING 0xcd
0x519: V451 = ADD S0 S1
0x51a: MISSING 0xd5
0x51b: CODECOPY S0 S1 S2
0x51c: V452 = ADD S3 S4
0x51d: STOP 
0x51e: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V445, S4, S5, S6, S7, S8, S9, S10, V449, 0x363ca8563e88181b804f93cf502ac59d, V451, V452]
Exit stack: []

================================

Function 0:
Public function signature: 0x379dadfe
Entry block: 0x6e
Exit block: 0x6c
Body: 0x6c, 0x6e, 0x1fa, 0x204, 0x214, 0x21d, 0x233, 0x276, 0x2a0, 0x369

Function 1:
Public function signature: 0x3853682c
Entry block: 0xf6
Exit block: 0x6c
Body: 0x6c, 0xf6, 0x276, 0x2a0, 0x2a4, 0x2c0, 0x2c4, 0x2ed, 0x2f9, 0x2ff, 0x337, 0x369

Function 2:
Public function signature: 0x3e3ee859
Entry block: 0x109
Exit block: 0x6c
Body: 0x6c, 0x109, 0x276, 0x2a0, 0x33b, 0x352, 0x356, 0x369

Function 3:
Public function signature: 0x3fad9ae0
Entry block: 0x151
Exit block: 0x1cd
Body: 0x151, 0x158, 0x15c, 0x164, 0x188, 0x191, 0x1a0, 0x1b4, 0x1cd, 0x370, 0x3c0, 0x3c8, 0x3db, 0x3e9, 0x3fd, 0x406

Function 4:
Public function signature: 0x59988dce
Entry block: 0x1db
Exit block: 0x6c
Body: 0x6c, 0x1db, 0x1e2, 0x1e6, 0x40e, 0x425, 0x429

Function 5:
Public fallback function
Entry block: 0x6c
Exit block: 0x6c
Body: 0x6c

Function 6:
Private function
Entry block: 0x458
Exit block: 0x4d2
Body: 0x458, 0x489, 0x499, 0x4a8, 0x4ab, 0x4b4, 0x4c6, 0x4d2, 0x4d6, 0x4dc, 0x4e5, 0x4f0

