Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x124]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x124
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x124
0xc: JUMPI 0x124 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x12e]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x6fdde03
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x12e
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x6fdde03
0x22: V15 = EQ V13 0x6fdde03
0x23: V16 = 0x12e
0x26: JUMPI 0x12e V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x1b8]
---
0x27 DUP1
0x28 PUSH4 0x95ea7b3
0x2d EQ
0x2e PUSH2 0x1b8
0x31 JUMPI
---
0x28: V17 = 0x95ea7b3
0x2d: V18 = EQ 0x95ea7b3 V13
0x2e: V19 = 0x1b8
0x31: JUMPI 0x1b8 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x1ee]
---
0x32 DUP1
0x33 PUSH4 0x18160ddd
0x38 EQ
0x39 PUSH2 0x1ee
0x3c JUMPI
---
0x33: V20 = 0x18160ddd
0x38: V21 = EQ 0x18160ddd V13
0x39: V22 = 0x1ee
0x3c: JUMPI 0x1ee V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x213]
---
0x3d DUP1
0x3e PUSH4 0x23b872dd
0x43 EQ
0x44 PUSH2 0x213
0x47 JUMPI
---
0x3e: V23 = 0x23b872dd
0x43: V24 = EQ 0x23b872dd V13
0x44: V25 = 0x213
0x47: JUMPI 0x213 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x23b]
---
0x48 DUP1
0x49 PUSH4 0x313ce567
0x4e EQ
0x4f PUSH2 0x23b
0x52 JUMPI
---
0x49: V26 = 0x313ce567
0x4e: V27 = EQ 0x313ce567 V13
0x4f: V28 = 0x23b
0x52: JUMPI 0x23b V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x24e]
---
0x53 DUP1
0x54 PUSH4 0x3ccfd60b
0x59 EQ
0x5a PUSH2 0x24e
0x5d JUMPI
---
0x54: V29 = 0x3ccfd60b
0x59: V30 = EQ 0x3ccfd60b V13
0x5a: V31 = 0x24e
0x5d: JUMPI 0x24e V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x261]
---
0x5e DUP1
0x5f PUSH4 0x40650c91
0x64 EQ
0x65 PUSH2 0x261
0x68 JUMPI
---
0x5f: V32 = 0x40650c91
0x64: V33 = EQ 0x40650c91 V13
0x65: V34 = 0x261
0x68: JUMPI 0x261 V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x274]
---
0x69 DUP1
0x6a PUSH4 0x42966c68
0x6f EQ
0x70 PUSH2 0x274
0x73 JUMPI
---
0x6a: V35 = 0x42966c68
0x6f: V36 = EQ 0x42966c68 V13
0x70: V37 = 0x274
0x73: JUMPI 0x274 V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x28a]
---
0x74 DUP1
0x75 PUSH4 0x4a63464d
0x7a EQ
0x7b PUSH2 0x28a
0x7e JUMPI
---
0x75: V38 = 0x4a63464d
0x7a: V39 = EQ 0x4a63464d V13
0x7b: V40 = 0x28a
0x7e: JUMPI 0x28a V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x74]
Successors: [0x8a, 0x2ac]
---
0x7f DUP1
0x80 PUSH4 0x6338ef32
0x85 EQ
0x86 PUSH2 0x2ac
0x89 JUMPI
---
0x80: V41 = 0x6338ef32
0x85: V42 = EQ 0x6338ef32 V13
0x86: V43 = 0x2ac
0x89: JUMPI 0x2ac V42
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x8a
[0x8a:0x94]
---
Predecessors: [0x7f]
Successors: [0x95, 0x2bf]
---
0x8a DUP1
0x8b PUSH4 0x67220fd7
0x90 EQ
0x91 PUSH2 0x2bf
0x94 JUMPI
---
0x8b: V44 = 0x67220fd7
0x90: V45 = EQ 0x67220fd7 V13
0x91: V46 = 0x2bf
0x94: JUMPI 0x2bf V45
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x95
[0x95:0x9f]
---
Predecessors: [0x8a]
Successors: [0xa0, 0x310]
---
0x95 DUP1
0x96 PUSH4 0x70a08231
0x9b EQ
0x9c PUSH2 0x310
0x9f JUMPI
---
0x96: V47 = 0x70a08231
0x9b: V48 = EQ 0x70a08231 V13
0x9c: V49 = 0x310
0x9f: JUMPI 0x310 V48
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xa0
[0xa0:0xaa]
---
Predecessors: [0x95]
Successors: [0xab, 0x32f]
---
0xa0 DUP1
0xa1 PUSH4 0x95d89b41
0xa6 EQ
0xa7 PUSH2 0x32f
0xaa JUMPI
---
0xa1: V50 = 0x95d89b41
0xa6: V51 = EQ 0x95d89b41 V13
0xa7: V52 = 0x32f
0xaa: JUMPI 0x32f V51
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xab
[0xab:0xb5]
---
Predecessors: [0xa0]
Successors: [0xb6, 0x342]
---
0xab DUP1
0xac PUSH4 0x9b1cbccc
0xb1 EQ
0xb2 PUSH2 0x342
0xb5 JUMPI
---
0xac: V53 = 0x9b1cbccc
0xb1: V54 = EQ 0x9b1cbccc V13
0xb2: V55 = 0x342
0xb5: JUMPI 0x342 V54
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xb6
[0xb6:0xc0]
---
Predecessors: [0xab]
Successors: [0xc1, 0x355]
---
0xb6 DUP1
0xb7 PUSH4 0x9ea407be
0xbc EQ
0xbd PUSH2 0x355
0xc0 JUMPI
---
0xb7: V56 = 0x9ea407be
0xbc: V57 = EQ 0x9ea407be V13
0xbd: V58 = 0x355
0xc0: JUMPI 0x355 V57
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xc1
[0xc1:0xcb]
---
Predecessors: [0xb6]
Successors: [0xcc, 0x36b]
---
0xc1 DUP1
0xc2 PUSH4 0xa9059cbb
0xc7 EQ
0xc8 PUSH2 0x36b
0xcb JUMPI
---
0xc2: V59 = 0xa9059cbb
0xc7: V60 = EQ 0xa9059cbb V13
0xc8: V61 = 0x36b
0xcb: JUMPI 0x36b V60
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xcc
[0xcc:0xd6]
---
Predecessors: [0xc1]
Successors: [0xd7, 0x124]
---
0xcc DUP1
0xcd PUSH4 0xaa6ca808
0xd2 EQ
0xd3 PUSH2 0x124
0xd6 JUMPI
---
0xcd: V62 = 0xaa6ca808
0xd2: V63 = EQ 0xaa6ca808 V13
0xd3: V64 = 0x124
0xd6: JUMPI 0x124 V63
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xd7
[0xd7:0xe1]
---
Predecessors: [0xcc]
Successors: [0xe2, 0x38d]
---
0xd7 DUP1
0xd8 PUSH4 0xc108d542
0xdd EQ
0xde PUSH2 0x38d
0xe1 JUMPI
---
0xd8: V65 = 0xc108d542
0xdd: V66 = EQ 0xc108d542 V13
0xde: V67 = 0x38d
0xe1: JUMPI 0x38d V66
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xe2
[0xe2:0xec]
---
Predecessors: [0xd7]
Successors: [0xed, 0x3a0]
---
0xe2 DUP1
0xe3 PUSH4 0xc489744b
0xe8 EQ
0xe9 PUSH2 0x3a0
0xec JUMPI
---
0xe3: V68 = 0xc489744b
0xe8: V69 = EQ 0xc489744b V13
0xe9: V70 = 0x3a0
0xec: JUMPI 0x3a0 V69
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xed
[0xed:0xf7]
---
Predecessors: [0xe2]
Successors: [0xf8, 0x3c5]
---
0xed DUP1
0xee PUSH4 0xcbdd69b5
0xf3 EQ
0xf4 PUSH2 0x3c5
0xf7 JUMPI
---
0xee: V71 = 0xcbdd69b5
0xf3: V72 = EQ 0xcbdd69b5 V13
0xf4: V73 = 0x3c5
0xf7: JUMPI 0x3c5 V72
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xf8
[0xf8:0x102]
---
Predecessors: [0xed]
Successors: [0x103, 0x3d8]
---
0xf8 DUP1
0xf9 PUSH4 0xdd62ed3e
0xfe EQ
0xff PUSH2 0x3d8
0x102 JUMPI
---
0xf9: V74 = 0xdd62ed3e
0xfe: V75 = EQ 0xdd62ed3e V13
0xff: V76 = 0x3d8
0x102: JUMPI 0x3d8 V75
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x103
[0x103:0x10d]
---
Predecessors: [0xf8]
Successors: [0x10e, 0x3fd]
---
0x103 DUP1
0x104 PUSH4 0xe58fc54c
0x109 EQ
0x10a PUSH2 0x3fd
0x10d JUMPI
---
0x104: V77 = 0xe58fc54c
0x109: V78 = EQ 0xe58fc54c V13
0x10a: V79 = 0x3fd
0x10d: JUMPI 0x3fd V78
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x10e
[0x10e:0x118]
---
Predecessors: [0x103]
Successors: [0x119, 0x41c]
---
0x10e DUP1
0x10f PUSH4 0xefca2eed
0x114 EQ
0x115 PUSH2 0x41c
0x118 JUMPI
---
0x10f: V80 = 0xefca2eed
0x114: V81 = EQ 0xefca2eed V13
0x115: V82 = 0x41c
0x118: JUMPI 0x41c V81
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x119
[0x119:0x123]
---
Predecessors: [0x10e]
Successors: [0x124, 0x42f]
---
0x119 DUP1
0x11a PUSH4 0xf2fde38b
0x11f EQ
0x120 PUSH2 0x42f
0x123 JUMPI
---
0x11a: V83 = 0xf2fde38b
0x11f: V84 = EQ 0xf2fde38b V13
0x120: V85 = 0x42f
0x123: JUMPI 0x42f V84
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x124
[0x124:0x12b]
---
Predecessors: [0x0, 0xcc, 0x119]
Successors: [0x44e]
---
0x124 JUMPDEST
0x125 PUSH2 0x12c
0x128 PUSH2 0x44e
0x12b JUMP
---
0x124: JUMPDEST 
0x125: V86 = 0x12c
0x128: V87 = 0x44e
0x12b: JUMP 0x44e
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x12c]
Exit stack: [V13, 0x12c]

================================

Block 0x12c
[0x12c:0x12d]
---
Predecessors: [0x4e1, 0x6fc, 0x861, 0x909, 0x95e, 0xa3d, 0xb1f, 0xd4f, 0xdf6]
Successors: []
---
0x12c JUMPDEST
0x12d STOP
---
0x12c: JUMPDEST 
0x12d: STOP 
---
Entry stack: [V13, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S2, S1, S0]

================================

Block 0x12e
[0x12e:0x134]
---
Predecessors: [0xd]
Successors: [0x135, 0x139]
---
0x12e JUMPDEST
0x12f CALLVALUE
0x130 ISZERO
0x131 PUSH2 0x139
0x134 JUMPI
---
0x12e: JUMPDEST 
0x12f: V88 = CALLVALUE
0x130: V89 = ISZERO V88
0x131: V90 = 0x139
0x134: JUMPI 0x139 V89
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x135
[0x135:0x138]
---
Predecessors: [0x12e]
Successors: []
---
0x135 PUSH1 0x0
0x137 DUP1
0x138 REVERT
---
0x135: V91 = 0x0
0x138: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x139
[0x139:0x140]
---
Predecessors: [0x12e]
Successors: [0x4e5]
---
0x139 JUMPDEST
0x13a PUSH2 0x141
0x13d PUSH2 0x4e5
0x140 JUMP
---
0x139: JUMPDEST 
0x13a: V92 = 0x141
0x13d: V93 = 0x4e5
0x140: JUMP 0x4e5
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x141]
Exit stack: [V13, 0x141]

================================

Block 0x141
[0x141:0x164]
---
Predecessors: [0x4e5, 0x97e]
Successors: [0x165]
---
0x141 JUMPDEST
0x142 PUSH1 0x40
0x144 MLOAD
0x145 PUSH1 0x20
0x147 DUP1
0x148 DUP3
0x149 MSTORE
0x14a DUP2
0x14b SWAP1
0x14c DUP2
0x14d ADD
0x14e DUP4
0x14f DUP2
0x150 DUP2
0x151 MLOAD
0x152 DUP2
0x153 MSTORE
0x154 PUSH1 0x20
0x156 ADD
0x157 SWAP2
0x158 POP
0x159 DUP1
0x15a MLOAD
0x15b SWAP1
0x15c PUSH1 0x20
0x15e ADD
0x15f SWAP1
0x160 DUP1
0x161 DUP4
0x162 DUP4
0x163 PUSH1 0x0
---
0x141: JUMPDEST 
0x142: V94 = 0x40
0x144: V95 = M[0x40]
0x145: V96 = 0x20
0x149: M[V95] = 0x20
0x14d: V97 = ADD V95 0x20
0x151: V98 = M[S0]
0x153: M[V97] = V98
0x154: V99 = 0x20
0x156: V100 = ADD 0x20 V97
0x15a: V101 = M[S0]
0x15c: V102 = 0x20
0x15e: V103 = ADD 0x20 S0
0x163: V104 = 0x0
---
Entry stack: [V13, 0x141, S0]
Stack pops: 1
Stack additions: [S0, V95, V95, V100, V103, V101, V101, V100, V103, 0x0]
Exit stack: [V13, 0x141, S0, V95, V95, V100, V103, V101, V101, V100, V103, 0x0]

================================

Block 0x165
[0x165:0x16d]
---
Predecessors: [0x141, 0x16e]
Successors: [0x16e, 0x17d]
---
0x165 JUMPDEST
0x166 DUP4
0x167 DUP2
0x168 LT
0x169 ISZERO
0x16a PUSH2 0x17d
0x16d JUMPI
---
0x165: JUMPDEST 
0x168: V105 = LT S0 V101
0x169: V106 = ISZERO V105
0x16a: V107 = 0x17d
0x16d: JUMPI 0x17d V106
---
Entry stack: [V13, 0x141, S9, V95, V95, V100, V103, V101, V101, V100, V103, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, 0x141, S9, V95, V95, V100, V103, V101, V101, V100, V103, S0]

================================

Block 0x16e
[0x16e:0x17c]
---
Predecessors: [0x165]
Successors: [0x165]
---
0x16e DUP1
0x16f DUP3
0x170 ADD
0x171 MLOAD
0x172 DUP4
0x173 DUP3
0x174 ADD
0x175 MSTORE
0x176 PUSH1 0x20
0x178 ADD
0x179 PUSH2 0x165
0x17c JUMP
---
0x170: V108 = ADD V103 S0
0x171: V109 = M[V108]
0x174: V110 = ADD S0 V100
0x175: M[V110] = V109
0x176: V111 = 0x20
0x178: V112 = ADD 0x20 S0
0x179: V113 = 0x165
0x17c: JUMP 0x165
---
Entry stack: [V13, 0x141, S9, V95, V95, V100, V103, V101, V101, V100, V103, S0]
Stack pops: 3
Stack additions: [S2, S1, V112]
Exit stack: [V13, 0x141, S9, V95, V95, V100, V103, V101, V101, V100, V103, V112]

================================

Block 0x17d
[0x17d:0x190]
---
Predecessors: [0x165]
Successors: [0x191, 0x1aa]
---
0x17d JUMPDEST
0x17e POP
0x17f POP
0x180 POP
0x181 POP
0x182 SWAP1
0x183 POP
0x184 SWAP1
0x185 DUP2
0x186 ADD
0x187 SWAP1
0x188 PUSH1 0x1f
0x18a AND
0x18b DUP1
0x18c ISZERO
0x18d PUSH2 0x1aa
0x190 JUMPI
---
0x17d: JUMPDEST 
0x186: V114 = ADD V101 V100
0x188: V115 = 0x1f
0x18a: V116 = AND 0x1f V101
0x18c: V117 = ISZERO V116
0x18d: V118 = 0x1aa
0x190: JUMPI 0x1aa V117
---
Entry stack: [V13, 0x141, S9, V95, V95, V100, V103, V101, V101, V100, V103, S0]
Stack pops: 7
Stack additions: [V114, V116]
Exit stack: [V13, 0x141, S9, V95, V95, V114, V116]

================================

Block 0x191
[0x191:0x1a9]
---
Predecessors: [0x17d]
Successors: [0x1aa]
---
0x191 DUP1
0x192 DUP3
0x193 SUB
0x194 DUP1
0x195 MLOAD
0x196 PUSH1 0x1
0x198 DUP4
0x199 PUSH1 0x20
0x19b SUB
0x19c PUSH2 0x100
0x19f EXP
0x1a0 SUB
0x1a1 NOT
0x1a2 AND
0x1a3 DUP2
0x1a4 MSTORE
0x1a5 PUSH1 0x20
0x1a7 ADD
0x1a8 SWAP2
0x1a9 POP
---
0x193: V119 = SUB V114 V116
0x195: V120 = M[V119]
0x196: V121 = 0x1
0x199: V122 = 0x20
0x19b: V123 = SUB 0x20 V116
0x19c: V124 = 0x100
0x19f: V125 = EXP 0x100 V123
0x1a0: V126 = SUB V125 0x1
0x1a1: V127 = NOT V126
0x1a2: V128 = AND V127 V120
0x1a4: M[V119] = V128
0x1a5: V129 = 0x20
0x1a7: V130 = ADD 0x20 V119
---
Entry stack: [V13, 0x141, S4, V95, V95, V114, V116]
Stack pops: 2
Stack additions: [V130, S0]
Exit stack: [V13, 0x141, S4, V95, V95, V130, V116]

================================

Block 0x1aa
[0x1aa:0x1b7]
---
Predecessors: [0x17d, 0x191]
Successors: []
---
0x1aa JUMPDEST
0x1ab POP
0x1ac SWAP3
0x1ad POP
0x1ae POP
0x1af POP
0x1b0 PUSH1 0x40
0x1b2 MLOAD
0x1b3 DUP1
0x1b4 SWAP2
0x1b5 SUB
0x1b6 SWAP1
0x1b7 RETURN
---
0x1aa: JUMPDEST 
0x1b0: V131 = 0x40
0x1b2: V132 = M[0x40]
0x1b5: V133 = SUB S1 V132
0x1b7: RETURN V132 V133
---
Entry stack: [V13, 0x141, S4, V95, V95, S1, V116]
Stack pops: 5
Stack additions: []
Exit stack: [V13, 0x141]

================================

Block 0x1b8
[0x1b8:0x1be]
---
Predecessors: [0x27]
Successors: [0x1bf, 0x1c3]
---
0x1b8 JUMPDEST
0x1b9 CALLVALUE
0x1ba ISZERO
0x1bb PUSH2 0x1c3
0x1be JUMPI
---
0x1b8: JUMPDEST 
0x1b9: V134 = CALLVALUE
0x1ba: V135 = ISZERO V134
0x1bb: V136 = 0x1c3
0x1be: JUMPI 0x1c3 V135
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1bf
[0x1bf:0x1c2]
---
Predecessors: [0x1b8]
Successors: []
---
0x1bf PUSH1 0x0
0x1c1 DUP1
0x1c2 REVERT
---
0x1bf: V137 = 0x0
0x1c2: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1c3
[0x1c3:0x1d9]
---
Predecessors: [0x1b8]
Successors: [0x51c]
---
0x1c3 JUMPDEST
0x1c4 PUSH2 0x1da
0x1c7 PUSH1 0x1
0x1c9 PUSH1 0xa0
0x1cb PUSH1 0x2
0x1cd EXP
0x1ce SUB
0x1cf PUSH1 0x4
0x1d1 CALLDATALOAD
0x1d2 AND
0x1d3 PUSH1 0x24
0x1d5 CALLDATALOAD
0x1d6 PUSH2 0x51c
0x1d9 JUMP
---
0x1c3: JUMPDEST 
0x1c4: V138 = 0x1da
0x1c7: V139 = 0x1
0x1c9: V140 = 0xa0
0x1cb: V141 = 0x2
0x1cd: V142 = EXP 0x2 0xa0
0x1ce: V143 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1cf: V144 = 0x4
0x1d1: V145 = CALLDATALOAD 0x4
0x1d2: V146 = AND V145 0xffffffffffffffffffffffffffffffffffffffff
0x1d3: V147 = 0x24
0x1d5: V148 = CALLDATALOAD 0x24
0x1d6: V149 = 0x51c
0x1d9: JUMP 0x51c
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1da, V146, V148]
Exit stack: [V13, 0x1da, V146, V148]

================================

Block 0x1da
[0x1da:0x1ed]
---
Predecessors: [0x4e1, 0x5c2, 0x6fc, 0x909, 0x9e3, 0xb1f, 0xb6f, 0xd0d]
Successors: []
---
0x1da JUMPDEST
0x1db PUSH1 0x40
0x1dd MLOAD
0x1de SWAP1
0x1df ISZERO
0x1e0 ISZERO
0x1e1 DUP2
0x1e2 MSTORE
0x1e3 PUSH1 0x20
0x1e5 ADD
0x1e6 PUSH1 0x40
0x1e8 MLOAD
0x1e9 DUP1
0x1ea SWAP2
0x1eb SUB
0x1ec SWAP1
0x1ed RETURN
---
0x1da: JUMPDEST 
0x1db: V150 = 0x40
0x1dd: V151 = M[0x40]
0x1df: V152 = ISZERO S0
0x1e0: V153 = ISZERO V152
0x1e2: M[V151] = V153
0x1e3: V154 = 0x20
0x1e5: V155 = ADD 0x20 V151
0x1e6: V156 = 0x40
0x1e8: V157 = M[0x40]
0x1eb: V158 = SUB V155 V157
0x1ed: RETURN V157 V158
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x1ee
[0x1ee:0x1f4]
---
Predecessors: [0x32]
Successors: [0x1f5, 0x1f9]
---
0x1ee JUMPDEST
0x1ef CALLVALUE
0x1f0 ISZERO
0x1f1 PUSH2 0x1f9
0x1f4 JUMPI
---
0x1ee: JUMPDEST 
0x1ef: V159 = CALLVALUE
0x1f0: V160 = ISZERO V159
0x1f1: V161 = 0x1f9
0x1f4: JUMPI 0x1f9 V160
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1f5
[0x1f5:0x1f8]
---
Predecessors: [0x1ee]
Successors: []
---
0x1f5 PUSH1 0x0
0x1f7 DUP1
0x1f8 REVERT
---
0x1f5: V162 = 0x0
0x1f8: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1f9
[0x1f9:0x200]
---
Predecessors: [0x1ee]
Successors: [0x5c8]
---
0x1f9 JUMPDEST
0x1fa PUSH2 0x201
0x1fd PUSH2 0x5c8
0x200 JUMP
---
0x1f9: JUMPDEST 
0x1fa: V163 = 0x201
0x1fd: V164 = 0x5c8
0x200: JUMP 0x5c8
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x201]
Exit stack: [V13, 0x201]

================================

Block 0x201
[0x201:0x212]
---
Predecessors: [0x5c8, 0x74c, 0x7ad, 0x963, 0xbd7, 0xbe9, 0xbef, 0xd1e]
Successors: []
---
0x201 JUMPDEST
0x202 PUSH1 0x40
0x204 MLOAD
0x205 SWAP1
0x206 DUP2
0x207 MSTORE
0x208 PUSH1 0x20
0x20a ADD
0x20b PUSH1 0x40
0x20d MLOAD
0x20e DUP1
0x20f SWAP2
0x210 SUB
0x211 SWAP1
0x212 RETURN
---
0x201: JUMPDEST 
0x202: V165 = 0x40
0x204: V166 = M[0x40]
0x207: M[V166] = S0
0x208: V167 = 0x20
0x20a: V168 = ADD 0x20 V166
0x20b: V169 = 0x40
0x20d: V170 = M[0x40]
0x210: V171 = SUB V168 V170
0x212: RETURN V170 V171
---
Entry stack: [V13, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S1]

================================

Block 0x213
[0x213:0x219]
---
Predecessors: [0x3d]
Successors: [0x21a, 0x21e]
---
0x213 JUMPDEST
0x214 CALLVALUE
0x215 ISZERO
0x216 PUSH2 0x21e
0x219 JUMPI
---
0x213: JUMPDEST 
0x214: V172 = CALLVALUE
0x215: V173 = ISZERO V172
0x216: V174 = 0x21e
0x219: JUMPI 0x21e V173
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x21a
[0x21a:0x21d]
---
Predecessors: [0x213]
Successors: []
---
0x21a PUSH1 0x0
0x21c DUP1
0x21d REVERT
---
0x21a: V175 = 0x0
0x21d: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x21e
[0x21e:0x23a]
---
Predecessors: [0x213]
Successors: [0x5ce]
---
0x21e JUMPDEST
0x21f PUSH2 0x1da
0x222 PUSH1 0x1
0x224 PUSH1 0xa0
0x226 PUSH1 0x2
0x228 EXP
0x229 SUB
0x22a PUSH1 0x4
0x22c CALLDATALOAD
0x22d DUP2
0x22e AND
0x22f SWAP1
0x230 PUSH1 0x24
0x232 CALLDATALOAD
0x233 AND
0x234 PUSH1 0x44
0x236 CALLDATALOAD
0x237 PUSH2 0x5ce
0x23a JUMP
---
0x21e: JUMPDEST 
0x21f: V176 = 0x1da
0x222: V177 = 0x1
0x224: V178 = 0xa0
0x226: V179 = 0x2
0x228: V180 = EXP 0x2 0xa0
0x229: V181 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22a: V182 = 0x4
0x22c: V183 = CALLDATALOAD 0x4
0x22e: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V183
0x230: V185 = 0x24
0x232: V186 = CALLDATALOAD 0x24
0x233: V187 = AND V186 0xffffffffffffffffffffffffffffffffffffffff
0x234: V188 = 0x44
0x236: V189 = CALLDATALOAD 0x44
0x237: V190 = 0x5ce
0x23a: JUMP 0x5ce
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1da, V184, V187, V189]
Exit stack: [V13, 0x1da, V184, V187, V189]

================================

Block 0x23b
[0x23b:0x241]
---
Predecessors: [0x48]
Successors: [0x242, 0x246]
---
0x23b JUMPDEST
0x23c CALLVALUE
0x23d ISZERO
0x23e PUSH2 0x246
0x241 JUMPI
---
0x23b: JUMPDEST 
0x23c: V191 = CALLVALUE
0x23d: V192 = ISZERO V191
0x23e: V193 = 0x246
0x241: JUMPI 0x246 V192
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x242
[0x242:0x245]
---
Predecessors: [0x23b]
Successors: []
---
0x242 PUSH1 0x0
0x244 DUP1
0x245 REVERT
---
0x242: V194 = 0x0
0x245: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x246
[0x246:0x24d]
---
Predecessors: [0x23b]
Successors: [0x74c]
---
0x246 JUMPDEST
0x247 PUSH2 0x201
0x24a PUSH2 0x74c
0x24d JUMP
---
0x246: JUMPDEST 
0x247: V195 = 0x201
0x24a: V196 = 0x74c
0x24d: JUMP 0x74c
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x201]
Exit stack: [V13, 0x201]

================================

Block 0x24e
[0x24e:0x254]
---
Predecessors: [0x53]
Successors: [0x255, 0x259]
---
0x24e JUMPDEST
0x24f CALLVALUE
0x250 ISZERO
0x251 PUSH2 0x259
0x254 JUMPI
---
0x24e: JUMPDEST 
0x24f: V197 = CALLVALUE
0x250: V198 = ISZERO V197
0x251: V199 = 0x259
0x254: JUMPI 0x259 V198
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x255
[0x255:0x258]
---
Predecessors: [0x24e]
Successors: []
---
0x255 PUSH1 0x0
0x257 DUP1
0x258 REVERT
---
0x255: V200 = 0x0
0x258: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x259
[0x259:0x260]
---
Predecessors: [0x24e]
Successors: [0x751]
---
0x259 JUMPDEST
0x25a PUSH2 0x12c
0x25d PUSH2 0x751
0x260 JUMP
---
0x259: JUMPDEST 
0x25a: V201 = 0x12c
0x25d: V202 = 0x751
0x260: JUMP 0x751
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x12c]
Exit stack: [V13, 0x12c]

================================

Block 0x261
[0x261:0x267]
---
Predecessors: [0x5e]
Successors: [0x268, 0x26c]
---
0x261 JUMPDEST
0x262 CALLVALUE
0x263 ISZERO
0x264 PUSH2 0x26c
0x267 JUMPI
---
0x261: JUMPDEST 
0x262: V203 = CALLVALUE
0x263: V204 = ISZERO V203
0x264: V205 = 0x26c
0x267: JUMPI 0x26c V204
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x268
[0x268:0x26b]
---
Predecessors: [0x261]
Successors: []
---
0x268 PUSH1 0x0
0x26a DUP1
0x26b REVERT
---
0x268: V206 = 0x0
0x26b: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x26c
[0x26c:0x273]
---
Predecessors: [0x261]
Successors: [0x7ad]
---
0x26c JUMPDEST
0x26d PUSH2 0x201
0x270 PUSH2 0x7ad
0x273 JUMP
---
0x26c: JUMPDEST 
0x26d: V207 = 0x201
0x270: V208 = 0x7ad
0x273: JUMP 0x7ad
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x201]
Exit stack: [V13, 0x201]

================================

Block 0x274
[0x274:0x27a]
---
Predecessors: [0x69]
Successors: [0x27b, 0x27f]
---
0x274 JUMPDEST
0x275 CALLVALUE
0x276 ISZERO
0x277 PUSH2 0x27f
0x27a JUMPI
---
0x274: JUMPDEST 
0x275: V209 = CALLVALUE
0x276: V210 = ISZERO V209
0x277: V211 = 0x27f
0x27a: JUMPI 0x27f V210
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x27b
[0x27b:0x27e]
---
Predecessors: [0x274]
Successors: []
---
0x27b PUSH1 0x0
0x27d DUP1
0x27e REVERT
---
0x27b: V212 = 0x0
0x27e: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x27f
[0x27f:0x289]
---
Predecessors: [0x274]
Successors: [0x7b7]
---
0x27f JUMPDEST
0x280 PUSH2 0x12c
0x283 PUSH1 0x4
0x285 CALLDATALOAD
0x286 PUSH2 0x7b7
0x289 JUMP
---
0x27f: JUMPDEST 
0x280: V213 = 0x12c
0x283: V214 = 0x4
0x285: V215 = CALLDATALOAD 0x4
0x286: V216 = 0x7b7
0x289: JUMP 0x7b7
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x12c, V215]
Exit stack: [V13, 0x12c, V215]

================================

Block 0x28a
[0x28a:0x290]
---
Predecessors: [0x74]
Successors: [0x291, 0x295]
---
0x28a JUMPDEST
0x28b CALLVALUE
0x28c ISZERO
0x28d PUSH2 0x295
0x290 JUMPI
---
0x28a: JUMPDEST 
0x28b: V217 = CALLVALUE
0x28c: V218 = ISZERO V217
0x28d: V219 = 0x295
0x290: JUMPI 0x295 V218
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x291
[0x291:0x294]
---
Predecessors: [0x28a]
Successors: []
---
0x291 PUSH1 0x0
0x293 DUP1
0x294 REVERT
---
0x291: V220 = 0x0
0x294: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x295
[0x295:0x2ab]
---
Predecessors: [0x28a]
Successors: [0x8a5]
---
0x295 JUMPDEST
0x296 PUSH2 0x12c
0x299 PUSH1 0x1
0x29b PUSH1 0xa0
0x29d PUSH1 0x2
0x29f EXP
0x2a0 SUB
0x2a1 PUSH1 0x4
0x2a3 CALLDATALOAD
0x2a4 AND
0x2a5 PUSH1 0x24
0x2a7 CALLDATALOAD
0x2a8 PUSH2 0x8a5
0x2ab JUMP
---
0x295: JUMPDEST 
0x296: V221 = 0x12c
0x299: V222 = 0x1
0x29b: V223 = 0xa0
0x29d: V224 = 0x2
0x29f: V225 = EXP 0x2 0xa0
0x2a0: V226 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a1: V227 = 0x4
0x2a3: V228 = CALLDATALOAD 0x4
0x2a4: V229 = AND V228 0xffffffffffffffffffffffffffffffffffffffff
0x2a5: V230 = 0x24
0x2a7: V231 = CALLDATALOAD 0x24
0x2a8: V232 = 0x8a5
0x2ab: JUMP 0x8a5
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x12c, V229, V231]
Exit stack: [V13, 0x12c, V229, V231]

================================

Block 0x2ac
[0x2ac:0x2b2]
---
Predecessors: [0x7f]
Successors: [0x2b3, 0x2b7]
---
0x2ac JUMPDEST
0x2ad CALLVALUE
0x2ae ISZERO
0x2af PUSH2 0x2b7
0x2b2 JUMPI
---
0x2ac: JUMPDEST 
0x2ad: V233 = CALLVALUE
0x2ae: V234 = ISZERO V233
0x2af: V235 = 0x2b7
0x2b2: JUMPI 0x2b7 V234
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2b3
[0x2b3:0x2b6]
---
Predecessors: [0x2ac]
Successors: []
---
0x2b3 PUSH1 0x0
0x2b5 DUP1
0x2b6 REVERT
---
0x2b3: V236 = 0x0
0x2b6: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2b7
[0x2b7:0x2be]
---
Predecessors: [0x2ac]
Successors: [0x8ca]
---
0x2b7 JUMPDEST
0x2b8 PUSH2 0x12c
0x2bb PUSH2 0x8ca
0x2be JUMP
---
0x2b7: JUMPDEST 
0x2b8: V237 = 0x12c
0x2bb: V238 = 0x8ca
0x2be: JUMP 0x8ca
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x12c]
Exit stack: [V13, 0x12c]

================================

Block 0x2bf
[0x2bf:0x2c5]
---
Predecessors: [0x8a]
Successors: [0x2c6, 0x2ca]
---
0x2bf JUMPDEST
0x2c0 CALLVALUE
0x2c1 ISZERO
0x2c2 PUSH2 0x2ca
0x2c5 JUMPI
---
0x2bf: JUMPDEST 
0x2c0: V239 = CALLVALUE
0x2c1: V240 = ISZERO V239
0x2c2: V241 = 0x2ca
0x2c5: JUMPI 0x2ca V240
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2c6
[0x2c6:0x2c9]
---
Predecessors: [0x2bf]
Successors: []
---
0x2c6 PUSH1 0x0
0x2c8 DUP1
0x2c9 REVERT
---
0x2c6: V242 = 0x0
0x2c9: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2ca
[0x2ca:0x30f]
---
Predecessors: [0x2bf]
Successors: [0x90c]
---
0x2ca JUMPDEST
0x2cb PUSH2 0x12c
0x2ce PUSH1 0x4
0x2d0 PUSH1 0x24
0x2d2 DUP2
0x2d3 CALLDATALOAD
0x2d4 DUP2
0x2d5 DUP2
0x2d6 ADD
0x2d7 SWAP1
0x2d8 DUP4
0x2d9 ADD
0x2da CALLDATALOAD
0x2db DUP1
0x2dc PUSH1 0x20
0x2de DUP2
0x2df DUP2
0x2e0 MUL
0x2e1 ADD
0x2e2 PUSH1 0x40
0x2e4 MLOAD
0x2e5 SWAP1
0x2e6 DUP2
0x2e7 ADD
0x2e8 PUSH1 0x40
0x2ea MSTORE
0x2eb DUP1
0x2ec SWAP4
0x2ed SWAP3
0x2ee SWAP2
0x2ef SWAP1
0x2f0 DUP2
0x2f1 DUP2
0x2f2 MSTORE
0x2f3 PUSH1 0x20
0x2f5 ADD
0x2f6 DUP4
0x2f7 DUP4
0x2f8 PUSH1 0x20
0x2fa MUL
0x2fb DUP1
0x2fc DUP3
0x2fd DUP5
0x2fe CALLDATACOPY
0x2ff POP
0x300 SWAP5
0x301 SWAP7
0x302 POP
0x303 POP
0x304 SWAP4
0x305 CALLDATALOAD
0x306 SWAP4
0x307 POP
0x308 PUSH2 0x90c
0x30b SWAP3
0x30c POP
0x30d POP
0x30e POP
0x30f JUMP
---
0x2ca: JUMPDEST 
0x2cb: V243 = 0x12c
0x2ce: V244 = 0x4
0x2d0: V245 = 0x24
0x2d3: V246 = CALLDATALOAD 0x4
0x2d6: V247 = ADD V246 0x24
0x2d9: V248 = ADD 0x4 V246
0x2da: V249 = CALLDATALOAD V248
0x2dc: V250 = 0x20
0x2e0: V251 = MUL 0x20 V249
0x2e1: V252 = ADD V251 0x20
0x2e2: V253 = 0x40
0x2e4: V254 = M[0x40]
0x2e7: V255 = ADD V254 V252
0x2e8: V256 = 0x40
0x2ea: M[0x40] = V255
0x2f2: M[V254] = V249
0x2f3: V257 = 0x20
0x2f5: V258 = ADD 0x20 V254
0x2f8: V259 = 0x20
0x2fa: V260 = MUL 0x20 V249
0x2fe: CALLDATACOPY V258 V247 V260
0x305: V261 = CALLDATALOAD 0x24
0x308: V262 = 0x90c
0x30f: JUMP 0x90c
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x12c, V254, V261]
Exit stack: [V13, 0x12c, V254, V261]

================================

Block 0x310
[0x310:0x316]
---
Predecessors: [0x95]
Successors: [0x317, 0x31b]
---
0x310 JUMPDEST
0x311 CALLVALUE
0x312 ISZERO
0x313 PUSH2 0x31b
0x316 JUMPI
---
0x310: JUMPDEST 
0x311: V263 = CALLVALUE
0x312: V264 = ISZERO V263
0x313: V265 = 0x31b
0x316: JUMPI 0x31b V264
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x317
[0x317:0x31a]
---
Predecessors: [0x310]
Successors: []
---
0x317 PUSH1 0x0
0x319 DUP1
0x31a REVERT
---
0x317: V266 = 0x0
0x31a: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x31b
[0x31b:0x32e]
---
Predecessors: [0x310]
Successors: [0x963]
---
0x31b JUMPDEST
0x31c PUSH2 0x201
0x31f PUSH1 0x1
0x321 PUSH1 0xa0
0x323 PUSH1 0x2
0x325 EXP
0x326 SUB
0x327 PUSH1 0x4
0x329 CALLDATALOAD
0x32a AND
0x32b PUSH2 0x963
0x32e JUMP
---
0x31b: JUMPDEST 
0x31c: V267 = 0x201
0x31f: V268 = 0x1
0x321: V269 = 0xa0
0x323: V270 = 0x2
0x325: V271 = EXP 0x2 0xa0
0x326: V272 = SUB 0x10000000000000000000000000000000000000000 0x1
0x327: V273 = 0x4
0x329: V274 = CALLDATALOAD 0x4
0x32a: V275 = AND V274 0xffffffffffffffffffffffffffffffffffffffff
0x32b: V276 = 0x963
0x32e: JUMP 0x963
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x201, V275]
Exit stack: [V13, 0x201, V275]

================================

Block 0x32f
[0x32f:0x335]
---
Predecessors: [0xa0]
Successors: [0x336, 0x33a]
---
0x32f JUMPDEST
0x330 CALLVALUE
0x331 ISZERO
0x332 PUSH2 0x33a
0x335 JUMPI
---
0x32f: JUMPDEST 
0x330: V277 = CALLVALUE
0x331: V278 = ISZERO V277
0x332: V279 = 0x33a
0x335: JUMPI 0x33a V278
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x336
[0x336:0x339]
---
Predecessors: [0x32f]
Successors: []
---
0x336 PUSH1 0x0
0x338 DUP1
0x339 REVERT
---
0x336: V280 = 0x0
0x339: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x33a
[0x33a:0x341]
---
Predecessors: [0x32f]
Successors: [0x97e]
---
0x33a JUMPDEST
0x33b PUSH2 0x141
0x33e PUSH2 0x97e
0x341 JUMP
---
0x33a: JUMPDEST 
0x33b: V281 = 0x141
0x33e: V282 = 0x97e
0x341: JUMP 0x97e
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x141]
Exit stack: [V13, 0x141]

================================

Block 0x342
[0x342:0x348]
---
Predecessors: [0xab]
Successors: [0x349, 0x34d]
---
0x342 JUMPDEST
0x343 CALLVALUE
0x344 ISZERO
0x345 PUSH2 0x34d
0x348 JUMPI
---
0x342: JUMPDEST 
0x343: V283 = CALLVALUE
0x344: V284 = ISZERO V283
0x345: V285 = 0x34d
0x348: JUMPI 0x34d V284
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x349
[0x349:0x34c]
---
Predecessors: [0x342]
Successors: []
---
0x349 PUSH1 0x0
0x34b DUP1
0x34c REVERT
---
0x349: V286 = 0x0
0x34c: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x34d
[0x34d:0x354]
---
Predecessors: [0x342]
Successors: [0x9b5]
---
0x34d JUMPDEST
0x34e PUSH2 0x1da
0x351 PUSH2 0x9b5
0x354 JUMP
---
0x34d: JUMPDEST 
0x34e: V287 = 0x1da
0x351: V288 = 0x9b5
0x354: JUMP 0x9b5
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1da]
Exit stack: [V13, 0x1da]

================================

Block 0x355
[0x355:0x35b]
---
Predecessors: [0xb6]
Successors: [0x35c, 0x360]
---
0x355 JUMPDEST
0x356 CALLVALUE
0x357 ISZERO
0x358 PUSH2 0x360
0x35b JUMPI
---
0x355: JUMPDEST 
0x356: V289 = CALLVALUE
0x357: V290 = ISZERO V289
0x358: V291 = 0x360
0x35b: JUMPI 0x360 V290
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x35c
[0x35c:0x35f]
---
Predecessors: [0x355]
Successors: []
---
0x35c PUSH1 0x0
0x35e DUP1
0x35f REVERT
---
0x35c: V292 = 0x0
0x35f: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x360
[0x360:0x36a]
---
Predecessors: [0x355]
Successors: [0xa22]
---
0x360 JUMPDEST
0x361 PUSH2 0x12c
0x364 PUSH1 0x4
0x366 CALLDATALOAD
0x367 PUSH2 0xa22
0x36a JUMP
---
0x360: JUMPDEST 
0x361: V293 = 0x12c
0x364: V294 = 0x4
0x366: V295 = CALLDATALOAD 0x4
0x367: V296 = 0xa22
0x36a: JUMP 0xa22
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x12c, V295]
Exit stack: [V13, 0x12c, V295]

================================

Block 0x36b
[0x36b:0x371]
---
Predecessors: [0xc1]
Successors: [0x372, 0x376]
---
0x36b JUMPDEST
0x36c CALLVALUE
0x36d ISZERO
0x36e PUSH2 0x376
0x371 JUMPI
---
0x36b: JUMPDEST 
0x36c: V297 = CALLVALUE
0x36d: V298 = ISZERO V297
0x36e: V299 = 0x376
0x371: JUMPI 0x376 V298
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x372
[0x372:0x375]
---
Predecessors: [0x36b]
Successors: []
---
0x372 PUSH1 0x0
0x374 DUP1
0x375 REVERT
---
0x372: V300 = 0x0
0x375: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x376
[0x376:0x38c]
---
Predecessors: [0x36b]
Successors: [0xa78]
---
0x376 JUMPDEST
0x377 PUSH2 0x1da
0x37a PUSH1 0x1
0x37c PUSH1 0xa0
0x37e PUSH1 0x2
0x380 EXP
0x381 SUB
0x382 PUSH1 0x4
0x384 CALLDATALOAD
0x385 AND
0x386 PUSH1 0x24
0x388 CALLDATALOAD
0x389 PUSH2 0xa78
0x38c JUMP
---
0x376: JUMPDEST 
0x377: V301 = 0x1da
0x37a: V302 = 0x1
0x37c: V303 = 0xa0
0x37e: V304 = 0x2
0x380: V305 = EXP 0x2 0xa0
0x381: V306 = SUB 0x10000000000000000000000000000000000000000 0x1
0x382: V307 = 0x4
0x384: V308 = CALLDATALOAD 0x4
0x385: V309 = AND V308 0xffffffffffffffffffffffffffffffffffffffff
0x386: V310 = 0x24
0x388: V311 = CALLDATALOAD 0x24
0x389: V312 = 0xa78
0x38c: JUMP 0xa78
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1da, V309, V311]
Exit stack: [V13, 0x1da, V309, V311]

================================

Block 0x38d
[0x38d:0x393]
---
Predecessors: [0xd7]
Successors: [0x394, 0x398]
---
0x38d JUMPDEST
0x38e CALLVALUE
0x38f ISZERO
0x390 PUSH2 0x398
0x393 JUMPI
---
0x38d: JUMPDEST 
0x38e: V313 = CALLVALUE
0x38f: V314 = ISZERO V313
0x390: V315 = 0x398
0x393: JUMPI 0x398 V314
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x394
[0x394:0x397]
---
Predecessors: [0x38d]
Successors: []
---
0x394 PUSH1 0x0
0x396 DUP1
0x397 REVERT
---
0x394: V316 = 0x0
0x397: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x398
[0x398:0x39f]
---
Predecessors: [0x38d]
Successors: [0xb6f]
---
0x398 JUMPDEST
0x399 PUSH2 0x1da
0x39c PUSH2 0xb6f
0x39f JUMP
---
0x398: JUMPDEST 
0x399: V317 = 0x1da
0x39c: V318 = 0xb6f
0x39f: JUMP 0xb6f
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1da]
Exit stack: [V13, 0x1da]

================================

Block 0x3a0
[0x3a0:0x3a6]
---
Predecessors: [0xe2]
Successors: [0x3a7, 0x3ab]
---
0x3a0 JUMPDEST
0x3a1 CALLVALUE
0x3a2 ISZERO
0x3a3 PUSH2 0x3ab
0x3a6 JUMPI
---
0x3a0: JUMPDEST 
0x3a1: V319 = CALLVALUE
0x3a2: V320 = ISZERO V319
0x3a3: V321 = 0x3ab
0x3a6: JUMPI 0x3ab V320
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x3a7
[0x3a7:0x3aa]
---
Predecessors: [0x3a0]
Successors: []
---
0x3a7 PUSH1 0x0
0x3a9 DUP1
0x3aa REVERT
---
0x3a7: V322 = 0x0
0x3aa: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x3ab
[0x3ab:0x3c4]
---
Predecessors: [0x3a0]
Successors: [0xb78]
---
0x3ab JUMPDEST
0x3ac PUSH2 0x201
0x3af PUSH1 0x1
0x3b1 PUSH1 0xa0
0x3b3 PUSH1 0x2
0x3b5 EXP
0x3b6 SUB
0x3b7 PUSH1 0x4
0x3b9 CALLDATALOAD
0x3ba DUP2
0x3bb AND
0x3bc SWAP1
0x3bd PUSH1 0x24
0x3bf CALLDATALOAD
0x3c0 AND
0x3c1 PUSH2 0xb78
0x3c4 JUMP
---
0x3ab: JUMPDEST 
0x3ac: V323 = 0x201
0x3af: V324 = 0x1
0x3b1: V325 = 0xa0
0x3b3: V326 = 0x2
0x3b5: V327 = EXP 0x2 0xa0
0x3b6: V328 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b7: V329 = 0x4
0x3b9: V330 = CALLDATALOAD 0x4
0x3bb: V331 = AND 0xffffffffffffffffffffffffffffffffffffffff V330
0x3bd: V332 = 0x24
0x3bf: V333 = CALLDATALOAD 0x24
0x3c0: V334 = AND V333 0xffffffffffffffffffffffffffffffffffffffff
0x3c1: V335 = 0xb78
0x3c4: JUMP 0xb78
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x201, V331, V334]
Exit stack: [V13, 0x201, V331, V334]

================================

Block 0x3c5
[0x3c5:0x3cb]
---
Predecessors: [0xed]
Successors: [0x3cc, 0x3d0]
---
0x3c5 JUMPDEST
0x3c6 CALLVALUE
0x3c7 ISZERO
0x3c8 PUSH2 0x3d0
0x3cb JUMPI
---
0x3c5: JUMPDEST 
0x3c6: V336 = CALLVALUE
0x3c7: V337 = ISZERO V336
0x3c8: V338 = 0x3d0
0x3cb: JUMPI 0x3d0 V337
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x3cc
[0x3cc:0x3cf]
---
Predecessors: [0x3c5]
Successors: []
---
0x3cc PUSH1 0x0
0x3ce DUP1
0x3cf REVERT
---
0x3cc: V339 = 0x0
0x3cf: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x3d0
[0x3d0:0x3d7]
---
Predecessors: [0x3c5]
Successors: [0xbe9]
---
0x3d0 JUMPDEST
0x3d1 PUSH2 0x201
0x3d4 PUSH2 0xbe9
0x3d7 JUMP
---
0x3d0: JUMPDEST 
0x3d1: V340 = 0x201
0x3d4: V341 = 0xbe9
0x3d7: JUMP 0xbe9
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x201]
Exit stack: [V13, 0x201]

================================

Block 0x3d8
[0x3d8:0x3de]
---
Predecessors: [0xf8]
Successors: [0x3df, 0x3e3]
---
0x3d8 JUMPDEST
0x3d9 CALLVALUE
0x3da ISZERO
0x3db PUSH2 0x3e3
0x3de JUMPI
---
0x3d8: JUMPDEST 
0x3d9: V342 = CALLVALUE
0x3da: V343 = ISZERO V342
0x3db: V344 = 0x3e3
0x3de: JUMPI 0x3e3 V343
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x3df
[0x3df:0x3e2]
---
Predecessors: [0x3d8]
Successors: []
---
0x3df PUSH1 0x0
0x3e1 DUP1
0x3e2 REVERT
---
0x3df: V345 = 0x0
0x3e2: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x3e3
[0x3e3:0x3fc]
---
Predecessors: [0x3d8]
Successors: [0xbef]
---
0x3e3 JUMPDEST
0x3e4 PUSH2 0x201
0x3e7 PUSH1 0x1
0x3e9 PUSH1 0xa0
0x3eb PUSH1 0x2
0x3ed EXP
0x3ee SUB
0x3ef PUSH1 0x4
0x3f1 CALLDATALOAD
0x3f2 DUP2
0x3f3 AND
0x3f4 SWAP1
0x3f5 PUSH1 0x24
0x3f7 CALLDATALOAD
0x3f8 AND
0x3f9 PUSH2 0xbef
0x3fc JUMP
---
0x3e3: JUMPDEST 
0x3e4: V346 = 0x201
0x3e7: V347 = 0x1
0x3e9: V348 = 0xa0
0x3eb: V349 = 0x2
0x3ed: V350 = EXP 0x2 0xa0
0x3ee: V351 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ef: V352 = 0x4
0x3f1: V353 = CALLDATALOAD 0x4
0x3f3: V354 = AND 0xffffffffffffffffffffffffffffffffffffffff V353
0x3f5: V355 = 0x24
0x3f7: V356 = CALLDATALOAD 0x24
0x3f8: V357 = AND V356 0xffffffffffffffffffffffffffffffffffffffff
0x3f9: V358 = 0xbef
0x3fc: JUMP 0xbef
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x201, V354, V357]
Exit stack: [V13, 0x201, V354, V357]

================================

Block 0x3fd
[0x3fd:0x403]
---
Predecessors: [0x103]
Successors: [0x404, 0x408]
---
0x3fd JUMPDEST
0x3fe CALLVALUE
0x3ff ISZERO
0x400 PUSH2 0x408
0x403 JUMPI
---
0x3fd: JUMPDEST 
0x3fe: V359 = CALLVALUE
0x3ff: V360 = ISZERO V359
0x400: V361 = 0x408
0x403: JUMPI 0x408 V360
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x404
[0x404:0x407]
---
Predecessors: [0x3fd]
Successors: []
---
0x404 PUSH1 0x0
0x406 DUP1
0x407 REVERT
---
0x404: V362 = 0x0
0x407: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x408
[0x408:0x41b]
---
Predecessors: [0x3fd]
Successors: [0xc1a]
---
0x408 JUMPDEST
0x409 PUSH2 0x1da
0x40c PUSH1 0x1
0x40e PUSH1 0xa0
0x410 PUSH1 0x2
0x412 EXP
0x413 SUB
0x414 PUSH1 0x4
0x416 CALLDATALOAD
0x417 AND
0x418 PUSH2 0xc1a
0x41b JUMP
---
0x408: JUMPDEST 
0x409: V363 = 0x1da
0x40c: V364 = 0x1
0x40e: V365 = 0xa0
0x410: V366 = 0x2
0x412: V367 = EXP 0x2 0xa0
0x413: V368 = SUB 0x10000000000000000000000000000000000000000 0x1
0x414: V369 = 0x4
0x416: V370 = CALLDATALOAD 0x4
0x417: V371 = AND V370 0xffffffffffffffffffffffffffffffffffffffff
0x418: V372 = 0xc1a
0x41b: JUMP 0xc1a
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1da, V371]
Exit stack: [V13, 0x1da, V371]

================================

Block 0x41c
[0x41c:0x422]
---
Predecessors: [0x10e]
Successors: [0x423, 0x427]
---
0x41c JUMPDEST
0x41d CALLVALUE
0x41e ISZERO
0x41f PUSH2 0x427
0x422 JUMPI
---
0x41c: JUMPDEST 
0x41d: V373 = CALLVALUE
0x41e: V374 = ISZERO V373
0x41f: V375 = 0x427
0x422: JUMPI 0x427 V374
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x423
[0x423:0x426]
---
Predecessors: [0x41c]
Successors: []
---
0x423 PUSH1 0x0
0x425 DUP1
0x426 REVERT
---
0x423: V376 = 0x0
0x426: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x427
[0x427:0x42e]
---
Predecessors: [0x41c]
Successors: [0xd1e]
---
0x427 JUMPDEST
0x428 PUSH2 0x201
0x42b PUSH2 0xd1e
0x42e JUMP
---
0x427: JUMPDEST 
0x428: V377 = 0x201
0x42b: V378 = 0xd1e
0x42e: JUMP 0xd1e
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x201]
Exit stack: [V13, 0x201]

================================

Block 0x42f
[0x42f:0x435]
---
Predecessors: [0x119]
Successors: [0x436, 0x43a]
---
0x42f JUMPDEST
0x430 CALLVALUE
0x431 ISZERO
0x432 PUSH2 0x43a
0x435 JUMPI
---
0x42f: JUMPDEST 
0x430: V379 = CALLVALUE
0x431: V380 = ISZERO V379
0x432: V381 = 0x43a
0x435: JUMPI 0x43a V380
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x436
[0x436:0x439]
---
Predecessors: [0x42f]
Successors: []
---
0x436 PUSH1 0x0
0x438 DUP1
0x439 REVERT
---
0x436: V382 = 0x0
0x439: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x43a
[0x43a:0x44d]
---
Predecessors: [0x42f]
Successors: [0xd24]
---
0x43a JUMPDEST
0x43b PUSH2 0x12c
0x43e PUSH1 0x1
0x440 PUSH1 0xa0
0x442 PUSH1 0x2
0x444 EXP
0x445 SUB
0x446 PUSH1 0x4
0x448 CALLDATALOAD
0x449 AND
0x44a PUSH2 0xd24
0x44d JUMP
---
0x43a: JUMPDEST 
0x43b: V383 = 0x12c
0x43e: V384 = 0x1
0x440: V385 = 0xa0
0x442: V386 = 0x2
0x444: V387 = EXP 0x2 0xa0
0x445: V388 = SUB 0x10000000000000000000000000000000000000000 0x1
0x446: V389 = 0x4
0x448: V390 = CALLDATALOAD 0x4
0x449: V391 = AND V390 0xffffffffffffffffffffffffffffffffffffffff
0x44a: V392 = 0xd24
0x44d: JUMP 0xd24
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x12c, V391]
Exit stack: [V13, 0x12c, V391]

================================

Block 0x44e
[0x44e:0x45e]
---
Predecessors: [0x124]
Successors: [0x45f, 0x463]
---
0x44e JUMPDEST
0x44f PUSH1 0x7
0x451 SLOAD
0x452 PUSH1 0x0
0x454 SWAP1
0x455 DUP2
0x456 SWAP1
0x457 PUSH1 0xff
0x459 AND
0x45a ISZERO
0x45b PUSH2 0x463
0x45e JUMPI
---
0x44e: JUMPDEST 
0x44f: V393 = 0x7
0x451: V394 = S[0x7]
0x452: V395 = 0x0
0x457: V396 = 0xff
0x459: V397 = AND 0xff V394
0x45a: V398 = ISZERO V397
0x45b: V399 = 0x463
0x45e: JUMPI 0x463 V398
---
Entry stack: [V13, 0x12c]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V13, 0x12c, 0x0, 0x0]

================================

Block 0x45f
[0x45f:0x462]
---
Predecessors: [0x44e]
Successors: []
---
0x45f PUSH1 0x0
0x461 DUP1
0x462 REVERT
---
0x45f: V400 = 0x0
0x462: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12c, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12c, 0x0, 0x0]

================================

Block 0x463
[0x463:0x475]
---
Predecessors: [0x44e]
Successors: [0x476, 0x47a]
---
0x463 JUMPDEST
0x464 PUSH1 0x0
0x466 SWAP2
0x467 POP
0x468 PUSH6 0x9184e72a000
0x46f CALLVALUE
0x470 LT
0x471 ISZERO
0x472 PUSH2 0x47a
0x475 JUMPI
---
0x463: JUMPDEST 
0x464: V401 = 0x0
0x468: V402 = 0x9184e72a000
0x46f: V403 = CALLVALUE
0x470: V404 = LT V403 0x9184e72a000
0x471: V405 = ISZERO V404
0x472: V406 = 0x47a
0x475: JUMPI 0x47a V405
---
Entry stack: [V13, 0x12c, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V13, 0x12c, 0x0, 0x0]

================================

Block 0x476
[0x476:0x479]
---
Predecessors: [0x463]
Successors: []
---
0x476 PUSH1 0x0
0x478 DUP1
0x479 REVERT
---
0x476: V407 = 0x0
0x479: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12c, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12c, 0x0, 0x0]

================================

Block 0x47a
[0x47a:0x482]
---
Predecessors: [0x463]
Successors: [0x483, 0x487]
---
0x47a JUMPDEST
0x47b PUSH1 0x0
0x47d CALLVALUE
0x47e GT
0x47f PUSH2 0x487
0x482 JUMPI
---
0x47a: JUMPDEST 
0x47b: V408 = 0x0
0x47d: V409 = CALLVALUE
0x47e: V410 = GT V409 0x0
0x47f: V411 = 0x487
0x482: JUMPI 0x487 V410
---
Entry stack: [V13, 0x12c, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12c, 0x0, 0x0]

================================

Block 0x483
[0x483:0x486]
---
Predecessors: [0x47a]
Successors: []
---
0x483 PUSH1 0x0
0x485 DUP1
0x486 REVERT
---
0x483: V412 = 0x0
0x486: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12c, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12c, 0x0, 0x0]

================================

Block 0x487
[0x487:0x4a3]
---
Predecessors: [0x47a]
Successors: [0xd7b]
---
0x487 JUMPDEST
0x488 PUSH1 0x6
0x48a SLOAD
0x48b PUSH8 0xde0b6b3a7640000
0x494 SWAP1
0x495 PUSH2 0x4a4
0x498 SWAP1
0x499 CALLVALUE
0x49a PUSH4 0xffffffff
0x49f PUSH2 0xd7b
0x4a2 AND
0x4a3 JUMP
---
0x487: JUMPDEST 
0x488: V413 = 0x6
0x48a: V414 = S[0x6]
0x48b: V415 = 0xde0b6b3a7640000
0x495: V416 = 0x4a4
0x499: V417 = CALLVALUE
0x49a: V418 = 0xffffffff
0x49f: V419 = 0xd7b
0x4a2: V420 = AND 0xd7b 0xffffffff
0x4a3: JUMP 0xd7b
---
Entry stack: [V13, 0x12c, 0x0, 0x0]
Stack pops: 0
Stack additions: [0xde0b6b3a7640000, 0x4a4, V414, V417]
Exit stack: [V13, 0x12c, 0x0, 0x0, 0xde0b6b3a7640000, 0x4a4, V414, V417]

================================

Block 0x4a4
[0x4a4:0x4ab]
---
Predecessors: [0x5c2]
Successors: [0x4ac, 0x4ad]
---
0x4a4 JUMPDEST
0x4a5 DUP2
0x4a6 ISZERO
0x4a7 ISZERO
0x4a8 PUSH2 0x4ad
0x4ab JUMPI
---
0x4a4: JUMPDEST 
0x4a6: V421 = ISZERO S1
0x4a7: V422 = ISZERO V421
0x4a8: V423 = 0x4ad
0x4ab: JUMPI 0x4ad V422
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x4ac
[0x4ac:0x4ac]
---
Predecessors: [0x4a4]
Successors: []
---
0x4ac INVALID
---
0x4ac: INVALID 
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x4ad
[0x4ad:0x4bc]
---
Predecessors: [0x4a4]
Successors: [0x4bd, 0x4c8]
---
0x4ad JUMPDEST
0x4ae DIV
0x4af SWAP2
0x4b0 POP
0x4b1 CALLER
0x4b2 SWAP1
0x4b3 POP
0x4b4 PUSH1 0x0
0x4b6 DUP3
0x4b7 GT
0x4b8 ISZERO
0x4b9 PUSH2 0x4c8
0x4bc JUMPI
---
0x4ad: JUMPDEST 
0x4ae: V424 = DIV S0 S1
0x4b1: V425 = CALLER
0x4b4: V426 = 0x0
0x4b7: V427 = GT V424 0x0
0x4b8: V428 = ISZERO V427
0x4b9: V429 = 0x4c8
0x4bc: JUMPI 0x4c8 V428
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [V424, V425]
Exit stack: [V13, S7, S6, S5, S4, V424, V425]

================================

Block 0x4bd
[0x4bd:0x4c5]
---
Predecessors: [0x4ad]
Successors: [0xda4]
---
0x4bd PUSH2 0x4c6
0x4c0 DUP2
0x4c1 DUP4
0x4c2 PUSH2 0xda4
0x4c5 JUMP
---
0x4bd: V430 = 0x4c6
0x4c2: V431 = 0xda4
0x4c5: JUMP 0xda4
---
Entry stack: [V13, S5, S4, S3, S2, V424, V425]
Stack pops: 2
Stack additions: [S1, S0, 0x4c6, S0, S1]
Exit stack: [V13, S5, S4, S3, S2, V424, V425, 0x4c6, V425, V424]

================================

Block 0x4c6
[0x4c6:0x4c7]
---
Predecessors: [0x4e1, 0xdf6]
Successors: [0x4c8]
---
0x4c6 JUMPDEST
0x4c7 POP
---
0x4c6: JUMPDEST 
---
Entry stack: [V13, S3, S2, S1, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S3, S2, S1]

================================

Block 0x4c8
[0x4c8:0x4d3]
---
Predecessors: [0x4ad, 0x4c6]
Successors: [0x4d4, 0x4e1]
---
0x4c8 JUMPDEST
0x4c9 PUSH1 0x4
0x4cb SLOAD
0x4cc PUSH1 0x5
0x4ce SLOAD
0x4cf LT
0x4d0 PUSH2 0x4e1
0x4d3 JUMPI
---
0x4c8: JUMPDEST 
0x4c9: V432 = 0x4
0x4cb: V433 = S[0x4]
0x4cc: V434 = 0x5
0x4ce: V435 = S[0x5]
0x4cf: V436 = LT V435 V433
0x4d0: V437 = 0x4e1
0x4d3: JUMPI 0x4e1 V436
---
Entry stack: [V13, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S5, S4, S3, S2, S1, S0]

================================

Block 0x4d4
[0x4d4:0x4e0]
---
Predecessors: [0x4c8]
Successors: [0x4e1]
---
0x4d4 PUSH1 0x7
0x4d6 DUP1
0x4d7 SLOAD
0x4d8 PUSH1 0xff
0x4da NOT
0x4db AND
0x4dc PUSH1 0x1
0x4de OR
0x4df SWAP1
0x4e0 SSTORE
---
0x4d4: V438 = 0x7
0x4d7: V439 = S[0x7]
0x4d8: V440 = 0xff
0x4da: V441 = NOT 0xff
0x4db: V442 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V439
0x4dc: V443 = 0x1
0x4de: V444 = OR 0x1 V442
0x4e0: S[0x7] = V444
---
Entry stack: [V13, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S5, S4, S3, S2, S1, S0]

================================

Block 0x4e1
[0x4e1:0x4e4]
---
Predecessors: [0x4c8, 0x4d4, 0x771, 0xf39]
Successors: [0x12c, 0x1da, 0x4c6, 0x909]
---
0x4e1 JUMPDEST
0x4e2 POP
0x4e3 POP
0x4e4 JUMP
---
0x4e1: JUMPDEST 
0x4e4: JUMP S2
---
Entry stack: [V13, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V13, S5, S4, S3]

================================

Block 0x4e5
[0x4e5:0x51b]
---
Predecessors: [0x139]
Successors: [0x141]
---
0x4e5 JUMPDEST
0x4e6 PUSH1 0x40
0x4e8 DUP1
0x4e9 MLOAD
0x4ea SWAP1
0x4eb DUP2
0x4ec ADD
0x4ed PUSH1 0x40
0x4ef MSTORE
0x4f0 PUSH1 0xc
0x4f2 DUP2
0x4f3 MSTORE
0x4f4 PUSH32 0x42434544455820546f6b656e0000000000000000000000000000000000000000
0x515 PUSH1 0x20
0x517 DUP3
0x518 ADD
0x519 MSTORE
0x51a DUP2
0x51b JUMP
---
0x4e5: JUMPDEST 
0x4e6: V445 = 0x40
0x4e9: V446 = M[0x40]
0x4ec: V447 = ADD V446 0x40
0x4ed: V448 = 0x40
0x4ef: M[0x40] = V447
0x4f0: V449 = 0xc
0x4f3: M[V446] = 0xc
0x4f4: V450 = 0x42434544455820546f6b656e0000000000000000000000000000000000000000
0x515: V451 = 0x20
0x518: V452 = ADD V446 0x20
0x519: M[V452] = 0x42434544455820546f6b656e0000000000000000000000000000000000000000
0x51b: JUMP 0x141
---
Entry stack: [V13, 0x141]
Stack pops: 1
Stack additions: [S0, V446]
Exit stack: [V13, 0x141, V446]

================================

Block 0x51c
[0x51c:0x527]
---
Predecessors: [0x1c3]
Successors: [0x528, 0x551]
---
0x51c JUMPDEST
0x51d PUSH1 0x0
0x51f DUP2
0x520 ISZERO
0x521 DUP1
0x522 ISZERO
0x523 SWAP1
0x524 PUSH2 0x551
0x527 JUMPI
---
0x51c: JUMPDEST 
0x51d: V453 = 0x0
0x520: V454 = ISZERO V148
0x522: V455 = ISZERO V454
0x524: V456 = 0x551
0x527: JUMPI 0x551 V454
---
Entry stack: [V13, 0x1da, V146, V148]
Stack pops: 1
Stack additions: [S0, 0x0, V455]
Exit stack: [V13, 0x1da, V146, V148, 0x0, V455]

================================

Block 0x528
[0x528:0x550]
---
Predecessors: [0x51c]
Successors: [0x551]
---
0x528 POP
0x529 PUSH1 0x1
0x52b PUSH1 0xa0
0x52d PUSH1 0x2
0x52f EXP
0x530 SUB
0x531 CALLER
0x532 DUP2
0x533 AND
0x534 PUSH1 0x0
0x536 SWAP1
0x537 DUP2
0x538 MSTORE
0x539 PUSH1 0x3
0x53b PUSH1 0x20
0x53d SWAP1
0x53e DUP2
0x53f MSTORE
0x540 PUSH1 0x40
0x542 DUP1
0x543 DUP4
0x544 SHA3
0x545 SWAP4
0x546 DUP8
0x547 AND
0x548 DUP4
0x549 MSTORE
0x54a SWAP3
0x54b SWAP1
0x54c MSTORE
0x54d SHA3
0x54e SLOAD
0x54f ISZERO
0x550 ISZERO
---
0x529: V457 = 0x1
0x52b: V458 = 0xa0
0x52d: V459 = 0x2
0x52f: V460 = EXP 0x2 0xa0
0x530: V461 = SUB 0x10000000000000000000000000000000000000000 0x1
0x531: V462 = CALLER
0x533: V463 = AND 0xffffffffffffffffffffffffffffffffffffffff V462
0x534: V464 = 0x0
0x538: M[0x0] = V463
0x539: V465 = 0x3
0x53b: V466 = 0x20
0x53f: M[0x20] = 0x3
0x540: V467 = 0x40
0x544: V468 = SHA3 0x0 0x40
0x547: V469 = AND V146 0xffffffffffffffffffffffffffffffffffffffff
0x549: M[0x0] = V469
0x54c: M[0x20] = V468
0x54d: V470 = SHA3 0x0 0x40
0x54e: V471 = S[V470]
0x54f: V472 = ISZERO V471
0x550: V473 = ISZERO V472
---
Entry stack: [V13, 0x1da, V146, V148, 0x0, V455]
Stack pops: 4
Stack additions: [S3, S2, S1, V473]
Exit stack: [V13, 0x1da, V146, V148, 0x0, V473]

================================

Block 0x551
[0x551:0x556]
---
Predecessors: [0x51c, 0x528]
Successors: [0x557, 0x55e]
---
0x551 JUMPDEST
0x552 ISZERO
0x553 PUSH2 0x55e
0x556 JUMPI
---
0x551: JUMPDEST 
0x552: V474 = ISZERO S0
0x553: V475 = 0x55e
0x556: JUMPI 0x55e V474
---
Entry stack: [V13, 0x1da, V146, V148, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x1da, V146, V148, 0x0]

================================

Block 0x557
[0x557:0x55d]
---
Predecessors: [0x551]
Successors: [0x5c2]
---
0x557 POP
0x558 PUSH1 0x0
0x55a PUSH2 0x5c2
0x55d JUMP
---
0x558: V476 = 0x0
0x55a: V477 = 0x5c2
0x55d: JUMP 0x5c2
---
Entry stack: [V13, 0x1da, V146, V148, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V13, 0x1da, V146, V148, 0x0]

================================

Block 0x55e
[0x55e:0x5c1]
---
Predecessors: [0x551]
Successors: [0x5c2]
---
0x55e JUMPDEST
0x55f PUSH1 0x1
0x561 PUSH1 0xa0
0x563 PUSH1 0x2
0x565 EXP
0x566 SUB
0x567 CALLER
0x568 DUP2
0x569 AND
0x56a PUSH1 0x0
0x56c DUP2
0x56d DUP2
0x56e MSTORE
0x56f PUSH1 0x3
0x571 PUSH1 0x20
0x573 SWAP1
0x574 DUP2
0x575 MSTORE
0x576 PUSH1 0x40
0x578 DUP1
0x579 DUP4
0x57a SHA3
0x57b SWAP5
0x57c DUP9
0x57d AND
0x57e DUP1
0x57f DUP5
0x580 MSTORE
0x581 SWAP5
0x582 SWAP1
0x583 SWAP2
0x584 MSTORE
0x585 SWAP1
0x586 DUP2
0x587 SWAP1
0x588 SHA3
0x589 DUP6
0x58a SWAP1
0x58b SSTORE
0x58c PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x5ad SWAP1
0x5ae DUP6
0x5af SWAP1
0x5b0 MLOAD
0x5b1 SWAP1
0x5b2 DUP2
0x5b3 MSTORE
0x5b4 PUSH1 0x20
0x5b6 ADD
0x5b7 PUSH1 0x40
0x5b9 MLOAD
0x5ba DUP1
0x5bb SWAP2
0x5bc SUB
0x5bd SWAP1
0x5be LOG3
0x5bf POP
0x5c0 PUSH1 0x1
---
0x55e: JUMPDEST 
0x55f: V478 = 0x1
0x561: V479 = 0xa0
0x563: V480 = 0x2
0x565: V481 = EXP 0x2 0xa0
0x566: V482 = SUB 0x10000000000000000000000000000000000000000 0x1
0x567: V483 = CALLER
0x569: V484 = AND 0xffffffffffffffffffffffffffffffffffffffff V483
0x56a: V485 = 0x0
0x56e: M[0x0] = V484
0x56f: V486 = 0x3
0x571: V487 = 0x20
0x575: M[0x20] = 0x3
0x576: V488 = 0x40
0x57a: V489 = SHA3 0x0 0x40
0x57d: V490 = AND V146 0xffffffffffffffffffffffffffffffffffffffff
0x580: M[0x0] = V490
0x584: M[0x20] = V489
0x588: V491 = SHA3 0x0 0x40
0x58b: S[V491] = V148
0x58c: V492 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x5b0: V493 = M[0x40]
0x5b3: M[V493] = V148
0x5b4: V494 = 0x20
0x5b6: V495 = ADD 0x20 V493
0x5b7: V496 = 0x40
0x5b9: V497 = M[0x40]
0x5bc: V498 = SUB V495 V497
0x5be: LOG V497 V498 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V484 V490
0x5c0: V499 = 0x1
---
Entry stack: [V13, 0x1da, V146, V148, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x1]
Exit stack: [V13, 0x1da, V146, V148, 0x1]

================================

Block 0x5c2
[0x5c2:0x5c7]
---
Predecessors: [0x557, 0x55e, 0xd85, 0xd9c, 0xe90]
Successors: [0x1da, 0x4a4, 0x6fc, 0xb1f, 0xdca, 0xdf6, 0xef1, 0xf1d]
---
0x5c2 JUMPDEST
0x5c3 SWAP3
0x5c4 SWAP2
0x5c5 POP
0x5c6 POP
0x5c7 JUMP
---
0x5c2: JUMPDEST 
0x5c7: JUMP {0x1da, 0x4a4, 0x6fc, 0xb1f, 0xdca, 0xdf6, 0xef1, 0xf1d}
---
Entry stack: [V13, S10, S9, S8, S7, S6, S5, S4, {0x1da, 0x4a4, 0x6fc, 0xb1f, 0xdca, 0xdf6, 0xef1, 0xf1d}, S2, S1, S0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V13, S10, S9, S8, S7, S6, S5, S4, S0]

================================

Block 0x5c8
[0x5c8:0x5cd]
---
Predecessors: [0x1f9]
Successors: [0x201]
---
0x5c8 JUMPDEST
0x5c9 PUSH1 0x4
0x5cb SLOAD
0x5cc DUP2
0x5cd JUMP
---
0x5c8: JUMPDEST 
0x5c9: V500 = 0x4
0x5cb: V501 = S[0x4]
0x5cd: JUMP 0x201
---
Entry stack: [V13, 0x201]
Stack pops: 1
Stack additions: [S0, V501]
Exit stack: [V13, 0x201, V501]

================================

Block 0x5ce
[0x5ce:0x5db]
---
Predecessors: [0x21e]
Successors: [0x5dc, 0x5dd]
---
0x5ce JUMPDEST
0x5cf PUSH1 0x0
0x5d1 PUSH1 0x60
0x5d3 PUSH1 0x64
0x5d5 CALLDATASIZE
0x5d6 LT
0x5d7 ISZERO
0x5d8 PUSH2 0x5dd
0x5db JUMPI
---
0x5ce: JUMPDEST 
0x5cf: V502 = 0x0
0x5d1: V503 = 0x60
0x5d3: V504 = 0x64
0x5d5: V505 = CALLDATASIZE
0x5d6: V506 = LT V505 0x64
0x5d7: V507 = ISZERO V506
0x5d8: V508 = 0x5dd
0x5db: JUMPI 0x5dd V507
---
Entry stack: [V13, 0x1da, V184, V187, V189]
Stack pops: 0
Stack additions: [0x0, 0x60]
Exit stack: [V13, 0x1da, V184, V187, V189, 0x0, 0x60]

================================

Block 0x5dc
[0x5dc:0x5dc]
---
Predecessors: [0x5ce]
Successors: []
---
0x5dc INVALID
---
0x5dc: INVALID 
---
Entry stack: [V13, 0x1da, V184, V187, V189, 0x0, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1da, V184, V187, V189, 0x0, 0x60]

================================

Block 0x5dd
[0x5dd:0x5ed]
---
Predecessors: [0x5ce]
Successors: [0x5ee, 0x5f2]
---
0x5dd JUMPDEST
0x5de PUSH1 0x1
0x5e0 PUSH1 0xa0
0x5e2 PUSH1 0x2
0x5e4 EXP
0x5e5 SUB
0x5e6 DUP5
0x5e7 AND
0x5e8 ISZERO
0x5e9 ISZERO
0x5ea PUSH2 0x5f2
0x5ed JUMPI
---
0x5dd: JUMPDEST 
0x5de: V509 = 0x1
0x5e0: V510 = 0xa0
0x5e2: V511 = 0x2
0x5e4: V512 = EXP 0x2 0xa0
0x5e5: V513 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5e7: V514 = AND V187 0xffffffffffffffffffffffffffffffffffffffff
0x5e8: V515 = ISZERO V514
0x5e9: V516 = ISZERO V515
0x5ea: V517 = 0x5f2
0x5ed: JUMPI 0x5f2 V516
---
Entry stack: [V13, 0x1da, V184, V187, V189, 0x0, 0x60]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, 0x1da, V184, V187, V189, 0x0, 0x60]

================================

Block 0x5ee
[0x5ee:0x5f1]
---
Predecessors: [0x5dd]
Successors: []
---
0x5ee PUSH1 0x0
0x5f0 DUP1
0x5f1 REVERT
---
0x5ee: V518 = 0x0
0x5f1: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1da, V184, V187, V189, 0x0, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1da, V184, V187, V189, 0x0, 0x60]

================================

Block 0x5f2
[0x5f2:0x612]
---
Predecessors: [0x5dd]
Successors: [0x613, 0x617]
---
0x5f2 JUMPDEST
0x5f3 PUSH1 0x1
0x5f5 PUSH1 0xa0
0x5f7 PUSH1 0x2
0x5f9 EXP
0x5fa SUB
0x5fb DUP6
0x5fc AND
0x5fd PUSH1 0x0
0x5ff SWAP1
0x600 DUP2
0x601 MSTORE
0x602 PUSH1 0x2
0x604 PUSH1 0x20
0x606 MSTORE
0x607 PUSH1 0x40
0x609 SWAP1
0x60a SHA3
0x60b SLOAD
0x60c DUP4
0x60d GT
0x60e ISZERO
0x60f PUSH2 0x617
0x612 JUMPI
---
0x5f2: JUMPDEST 
0x5f3: V519 = 0x1
0x5f5: V520 = 0xa0
0x5f7: V521 = 0x2
0x5f9: V522 = EXP 0x2 0xa0
0x5fa: V523 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5fc: V524 = AND V184 0xffffffffffffffffffffffffffffffffffffffff
0x5fd: V525 = 0x0
0x601: M[0x0] = V524
0x602: V526 = 0x2
0x604: V527 = 0x20
0x606: M[0x20] = 0x2
0x607: V528 = 0x40
0x60a: V529 = SHA3 0x0 0x40
0x60b: V530 = S[V529]
0x60d: V531 = GT V189 V530
0x60e: V532 = ISZERO V531
0x60f: V533 = 0x617
0x612: JUMPI 0x617 V532
---
Entry stack: [V13, 0x1da, V184, V187, V189, 0x0, 0x60]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V13, 0x1da, V184, V187, V189, 0x0, 0x60]

================================

Block 0x613
[0x613:0x616]
---
Predecessors: [0x5f2]
Successors: []
---
0x613 PUSH1 0x0
0x615 DUP1
0x616 REVERT
---
0x613: V534 = 0x0
0x616: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1da, V184, V187, V189, 0x0, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1da, V184, V187, V189, 0x0, 0x60]

================================

Block 0x617
[0x617:0x645]
---
Predecessors: [0x5f2]
Successors: [0x646, 0x64a]
---
0x617 JUMPDEST
0x618 PUSH1 0x1
0x61a PUSH1 0xa0
0x61c PUSH1 0x2
0x61e EXP
0x61f SUB
0x620 DUP1
0x621 DUP7
0x622 AND
0x623 PUSH1 0x0
0x625 SWAP1
0x626 DUP2
0x627 MSTORE
0x628 PUSH1 0x3
0x62a PUSH1 0x20
0x62c SWAP1
0x62d DUP2
0x62e MSTORE
0x62f PUSH1 0x40
0x631 DUP1
0x632 DUP4
0x633 SHA3
0x634 CALLER
0x635 SWAP1
0x636 SWAP5
0x637 AND
0x638 DUP4
0x639 MSTORE
0x63a SWAP3
0x63b SWAP1
0x63c MSTORE
0x63d SHA3
0x63e SLOAD
0x63f DUP4
0x640 GT
0x641 ISZERO
0x642 PUSH2 0x64a
0x645 JUMPI
---
0x617: JUMPDEST 
0x618: V535 = 0x1
0x61a: V536 = 0xa0
0x61c: V537 = 0x2
0x61e: V538 = EXP 0x2 0xa0
0x61f: V539 = SUB 0x10000000000000000000000000000000000000000 0x1
0x622: V540 = AND V184 0xffffffffffffffffffffffffffffffffffffffff
0x623: V541 = 0x0
0x627: M[0x0] = V540
0x628: V542 = 0x3
0x62a: V543 = 0x20
0x62e: M[0x20] = 0x3
0x62f: V544 = 0x40
0x633: V545 = SHA3 0x0 0x40
0x634: V546 = CALLER
0x637: V547 = AND 0xffffffffffffffffffffffffffffffffffffffff V546
0x639: M[0x0] = V547
0x63c: M[0x20] = V545
0x63d: V548 = SHA3 0x0 0x40
0x63e: V549 = S[V548]
0x640: V550 = GT V189 V549
0x641: V551 = ISZERO V550
0x642: V552 = 0x64a
0x645: JUMPI 0x64a V551
---
Entry stack: [V13, 0x1da, V184, V187, V189, 0x0, 0x60]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V13, 0x1da, V184, V187, V189, 0x0, 0x60]

================================

Block 0x646
[0x646:0x649]
---
Predecessors: [0x617]
Successors: []
---
0x646 PUSH1 0x0
0x648 DUP1
0x649 REVERT
---
0x646: V553 = 0x0
0x649: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1da, V184, V187, V189, 0x0, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1da, V184, V187, V189, 0x0, 0x60]

================================

Block 0x64a
[0x64a:0x672]
---
Predecessors: [0x617]
Successors: [0xe7e]
---
0x64a JUMPDEST
0x64b PUSH1 0x1
0x64d PUSH1 0xa0
0x64f PUSH1 0x2
0x651 EXP
0x652 SUB
0x653 DUP6
0x654 AND
0x655 PUSH1 0x0
0x657 SWAP1
0x658 DUP2
0x659 MSTORE
0x65a PUSH1 0x2
0x65c PUSH1 0x20
0x65e MSTORE
0x65f PUSH1 0x40
0x661 SWAP1
0x662 SHA3
0x663 SLOAD
0x664 PUSH2 0x673
0x667 SWAP1
0x668 DUP5
0x669 PUSH4 0xffffffff
0x66e PUSH2 0xe7e
0x671 AND
0x672 JUMP
---
0x64a: JUMPDEST 
0x64b: V554 = 0x1
0x64d: V555 = 0xa0
0x64f: V556 = 0x2
0x651: V557 = EXP 0x2 0xa0
0x652: V558 = SUB 0x10000000000000000000000000000000000000000 0x1
0x654: V559 = AND V184 0xffffffffffffffffffffffffffffffffffffffff
0x655: V560 = 0x0
0x659: M[0x0] = V559
0x65a: V561 = 0x2
0x65c: V562 = 0x20
0x65e: M[0x20] = 0x2
0x65f: V563 = 0x40
0x662: V564 = SHA3 0x0 0x40
0x663: V565 = S[V564]
0x664: V566 = 0x673
0x669: V567 = 0xffffffff
0x66e: V568 = 0xe7e
0x671: V569 = AND 0xe7e 0xffffffff
0x672: JUMP 0xe7e
---
Entry stack: [V13, 0x1da, V184, V187, V189, 0x0, 0x60]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x673, V565, S2]
Exit stack: [V13, 0x1da, V184, V187, V189, 0x0, 0x60, 0x673, V565, V189]

================================

Block 0x673
[0x673:0x6b5]
---
Predecessors: [0xe8a]
Successors: [0xe7e]
---
0x673 JUMPDEST
0x674 PUSH1 0x1
0x676 PUSH1 0xa0
0x678 PUSH1 0x2
0x67a EXP
0x67b SUB
0x67c DUP1
0x67d DUP8
0x67e AND
0x67f PUSH1 0x0
0x681 SWAP1
0x682 DUP2
0x683 MSTORE
0x684 PUSH1 0x2
0x686 PUSH1 0x20
0x688 SWAP1
0x689 DUP2
0x68a MSTORE
0x68b PUSH1 0x40
0x68d DUP1
0x68e DUP4
0x68f SHA3
0x690 SWAP5
0x691 SWAP1
0x692 SWAP5
0x693 SSTORE
0x694 PUSH1 0x3
0x696 DUP2
0x697 MSTORE
0x698 DUP4
0x699 DUP3
0x69a SHA3
0x69b CALLER
0x69c SWAP1
0x69d SWAP4
0x69e AND
0x69f DUP3
0x6a0 MSTORE
0x6a1 SWAP2
0x6a2 SWAP1
0x6a3 SWAP2
0x6a4 MSTORE
0x6a5 SHA3
0x6a6 SLOAD
0x6a7 PUSH2 0x6b6
0x6aa SWAP1
0x6ab DUP5
0x6ac PUSH4 0xffffffff
0x6b1 PUSH2 0xe7e
0x6b4 AND
0x6b5 JUMP
---
0x673: JUMPDEST 
0x674: V570 = 0x1
0x676: V571 = 0xa0
0x678: V572 = 0x2
0x67a: V573 = EXP 0x2 0xa0
0x67b: V574 = SUB 0x10000000000000000000000000000000000000000 0x1
0x67e: V575 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x67f: V576 = 0x0
0x683: M[0x0] = V575
0x684: V577 = 0x2
0x686: V578 = 0x20
0x68a: M[0x20] = 0x2
0x68b: V579 = 0x40
0x68f: V580 = SHA3 0x0 0x40
0x693: S[V580] = V1295
0x694: V581 = 0x3
0x697: M[0x20] = 0x3
0x69a: V582 = SHA3 0x0 0x40
0x69b: V583 = CALLER
0x69e: V584 = AND 0xffffffffffffffffffffffffffffffffffffffff V583
0x6a0: M[0x0] = V584
0x6a4: M[0x20] = V582
0x6a5: V585 = SHA3 0x0 0x40
0x6a6: V586 = S[V585]
0x6a7: V587 = 0x6b6
0x6ac: V588 = 0xffffffff
0x6b1: V589 = 0xe7e
0x6b4: V590 = AND 0xe7e 0xffffffff
0x6b5: JUMP 0xe7e
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, V1295]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, 0x6b6, V586, S3]
Exit stack: [V13, S6, S5, S4, S3, S2, S1, 0x6b6, V586, S3]

================================

Block 0x6b6
[0x6b6:0x6fb]
---
Predecessors: [0xe8a]
Successors: [0xe90]
---
0x6b6 JUMPDEST
0x6b7 PUSH1 0x1
0x6b9 PUSH1 0xa0
0x6bb PUSH1 0x2
0x6bd EXP
0x6be SUB
0x6bf DUP1
0x6c0 DUP8
0x6c1 AND
0x6c2 PUSH1 0x0
0x6c4 SWAP1
0x6c5 DUP2
0x6c6 MSTORE
0x6c7 PUSH1 0x3
0x6c9 PUSH1 0x20
0x6cb SWAP1
0x6cc DUP2
0x6cd MSTORE
0x6ce PUSH1 0x40
0x6d0 DUP1
0x6d1 DUP4
0x6d2 SHA3
0x6d3 CALLER
0x6d4 DUP6
0x6d5 AND
0x6d6 DUP5
0x6d7 MSTORE
0x6d8 DUP3
0x6d9 MSTORE
0x6da DUP1
0x6db DUP4
0x6dc SHA3
0x6dd SWAP5
0x6de SWAP1
0x6df SWAP5
0x6e0 SSTORE
0x6e1 SWAP2
0x6e2 DUP8
0x6e3 AND
0x6e4 DUP2
0x6e5 MSTORE
0x6e6 PUSH1 0x2
0x6e8 SWAP1
0x6e9 SWAP2
0x6ea MSTORE
0x6eb SHA3
0x6ec SLOAD
0x6ed PUSH2 0x6fc
0x6f0 SWAP1
0x6f1 DUP5
0x6f2 PUSH4 0xffffffff
0x6f7 PUSH2 0xe90
0x6fa AND
0x6fb JUMP
---
0x6b6: JUMPDEST 
0x6b7: V591 = 0x1
0x6b9: V592 = 0xa0
0x6bb: V593 = 0x2
0x6bd: V594 = EXP 0x2 0xa0
0x6be: V595 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6c1: V596 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x6c2: V597 = 0x0
0x6c6: M[0x0] = V596
0x6c7: V598 = 0x3
0x6c9: V599 = 0x20
0x6cd: M[0x20] = 0x3
0x6ce: V600 = 0x40
0x6d2: V601 = SHA3 0x0 0x40
0x6d3: V602 = CALLER
0x6d5: V603 = AND 0xffffffffffffffffffffffffffffffffffffffff V602
0x6d7: M[0x0] = V603
0x6d9: M[0x20] = V601
0x6dc: V604 = SHA3 0x0 0x40
0x6e0: S[V604] = V1295
0x6e3: V605 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x6e5: M[0x0] = V605
0x6e6: V606 = 0x2
0x6ea: M[0x20] = 0x2
0x6eb: V607 = SHA3 0x0 0x40
0x6ec: V608 = S[V607]
0x6ed: V609 = 0x6fc
0x6f2: V610 = 0xffffffff
0x6f7: V611 = 0xe90
0x6fa: V612 = AND 0xe90 0xffffffff
0x6fb: JUMP 0xe90
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, V1295]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, 0x6fc, V608, S3]
Exit stack: [V13, S6, S5, S4, S3, S2, S1, 0x6fc, V608, S3]

================================

Block 0x6fc
[0x6fc:0x74b]
---
Predecessors: [0x5c2]
Successors: [0x12c, 0x1da]
---
0x6fc JUMPDEST
0x6fd PUSH1 0x1
0x6ff PUSH1 0xa0
0x701 PUSH1 0x2
0x703 EXP
0x704 SUB
0x705 DUP1
0x706 DUP7
0x707 AND
0x708 PUSH1 0x0
0x70a DUP2
0x70b DUP2
0x70c MSTORE
0x70d PUSH1 0x2
0x70f PUSH1 0x20
0x711 MSTORE
0x712 PUSH1 0x40
0x714 SWAP1
0x715 DUP2
0x716 SWAP1
0x717 SHA3
0x718 SWAP4
0x719 SWAP1
0x71a SWAP4
0x71b SSTORE
0x71c SWAP2
0x71d SWAP1
0x71e DUP8
0x71f AND
0x720 SWAP1
0x721 PUSH1 0x0
0x723 DUP1
0x724 MLOAD
0x725 PUSH1 0x20
0x727 PUSH2 0xfc0
0x72a DUP4
0x72b CODECOPY
0x72c DUP2
0x72d MLOAD
0x72e SWAP2
0x72f MSTORE
0x730 SWAP1
0x731 DUP7
0x732 SWAP1
0x733 MLOAD
0x734 SWAP1
0x735 DUP2
0x736 MSTORE
0x737 PUSH1 0x20
0x739 ADD
0x73a PUSH1 0x40
0x73c MLOAD
0x73d DUP1
0x73e SWAP2
0x73f SUB
0x740 SWAP1
0x741 LOG3
0x742 POP
0x743 PUSH1 0x1
0x745 SWAP5
0x746 SWAP4
0x747 POP
0x748 POP
0x749 POP
0x74a POP
0x74b JUMP
---
0x6fc: JUMPDEST 
0x6fd: V613 = 0x1
0x6ff: V614 = 0xa0
0x701: V615 = 0x2
0x703: V616 = EXP 0x2 0xa0
0x704: V617 = SUB 0x10000000000000000000000000000000000000000 0x1
0x707: V618 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x708: V619 = 0x0
0x70c: M[0x0] = V618
0x70d: V620 = 0x2
0x70f: V621 = 0x20
0x711: M[0x20] = 0x2
0x712: V622 = 0x40
0x717: V623 = SHA3 0x0 0x40
0x71b: S[V623] = S0
0x71f: V624 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x721: V625 = 0x0
0x724: V626 = M[0x0]
0x725: V627 = 0x20
0x727: V628 = 0xfc0
0x72b: CODECOPY 0x0 0xfc0 0x20
0x72d: V629 = M[0x0]
0x72f: M[0x0] = V626
0x733: V630 = M[0x40]
0x736: M[V630] = S3
0x737: V631 = 0x20
0x739: V632 = ADD 0x20 V630
0x73a: V633 = 0x40
0x73c: V634 = M[0x40]
0x73f: V635 = SUB V632 V634
0x741: LOG V634 V635 V629 V624 V618
0x743: V636 = 0x1
0x74b: JUMP S6
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [0x1]
Exit stack: [V13, S7, 0x1]

================================

Block 0x74c
[0x74c:0x750]
---
Predecessors: [0x246]
Successors: [0x201]
---
0x74c JUMPDEST
0x74d PUSH1 0x2
0x74f DUP2
0x750 JUMP
---
0x74c: JUMPDEST 
0x74d: V637 = 0x2
0x750: JUMP 0x201
---
Entry stack: [V13, 0x201]
Stack pops: 1
Stack additions: [S0, 0x2]
Exit stack: [V13, 0x201, 0x2]

================================

Block 0x751
[0x751:0x76c]
---
Predecessors: [0x259]
Successors: [0x76d, 0x771]
---
0x751 JUMPDEST
0x752 PUSH1 0x1
0x754 SLOAD
0x755 PUSH1 0x0
0x757 SWAP1
0x758 DUP2
0x759 SWAP1
0x75a CALLER
0x75b PUSH1 0x1
0x75d PUSH1 0xa0
0x75f PUSH1 0x2
0x761 EXP
0x762 SUB
0x763 SWAP1
0x764 DUP2
0x765 AND
0x766 SWAP2
0x767 AND
0x768 EQ
0x769 PUSH2 0x771
0x76c JUMPI
---
0x751: JUMPDEST 
0x752: V638 = 0x1
0x754: V639 = S[0x1]
0x755: V640 = 0x0
0x75a: V641 = CALLER
0x75b: V642 = 0x1
0x75d: V643 = 0xa0
0x75f: V644 = 0x2
0x761: V645 = EXP 0x2 0xa0
0x762: V646 = SUB 0x10000000000000000000000000000000000000000 0x1
0x765: V647 = AND 0xffffffffffffffffffffffffffffffffffffffff V641
0x767: V648 = AND V639 0xffffffffffffffffffffffffffffffffffffffff
0x768: V649 = EQ V648 V647
0x769: V650 = 0x771
0x76c: JUMPI 0x771 V649
---
Entry stack: [V13, 0x12c]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V13, 0x12c, 0x0, 0x0]

================================

Block 0x76d
[0x76d:0x770]
---
Predecessors: [0x751]
Successors: []
---
0x76d PUSH1 0x0
0x76f DUP1
0x770 REVERT
---
0x76d: V651 = 0x0
0x770: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12c, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12c, 0x0, 0x0]

================================

Block 0x771
[0x771:0x7a8]
---
Predecessors: [0x751]
Successors: [0x4e1, 0x7a9]
---
0x771 JUMPDEST
0x772 POP
0x773 POP
0x774 PUSH1 0x1
0x776 SLOAD
0x777 ADDRESS
0x778 SWAP1
0x779 PUSH1 0x1
0x77b PUSH1 0xa0
0x77d PUSH1 0x2
0x77f EXP
0x780 SUB
0x781 DUP1
0x782 DUP4
0x783 AND
0x784 BALANCE
0x785 SWAP2
0x786 AND
0x787 DUP2
0x788 ISZERO
0x789 PUSH2 0x8fc
0x78c MUL
0x78d DUP3
0x78e PUSH1 0x40
0x790 MLOAD
0x791 PUSH1 0x0
0x793 PUSH1 0x40
0x795 MLOAD
0x796 DUP1
0x797 DUP4
0x798 SUB
0x799 DUP2
0x79a DUP6
0x79b DUP9
0x79c DUP9
0x79d CALL
0x79e SWAP4
0x79f POP
0x7a0 POP
0x7a1 POP
0x7a2 POP
0x7a3 ISZERO
0x7a4 ISZERO
0x7a5 PUSH2 0x4e1
0x7a8 JUMPI
---
0x771: JUMPDEST 
0x774: V652 = 0x1
0x776: V653 = S[0x1]
0x777: V654 = ADDRESS
0x779: V655 = 0x1
0x77b: V656 = 0xa0
0x77d: V657 = 0x2
0x77f: V658 = EXP 0x2 0xa0
0x780: V659 = SUB 0x10000000000000000000000000000000000000000 0x1
0x783: V660 = AND V654 0xffffffffffffffffffffffffffffffffffffffff
0x784: V661 = BALANCE V660
0x786: V662 = AND V653 0xffffffffffffffffffffffffffffffffffffffff
0x788: V663 = ISZERO V661
0x789: V664 = 0x8fc
0x78c: V665 = MUL 0x8fc V663
0x78e: V666 = 0x40
0x790: V667 = M[0x40]
0x791: V668 = 0x0
0x793: V669 = 0x40
0x795: V670 = M[0x40]
0x798: V671 = SUB V667 V670
0x79d: V672 = CALL V665 V662 V661 V670 V671 V670 0x0
0x7a3: V673 = ISZERO V672
0x7a4: V674 = ISZERO V673
0x7a5: V675 = 0x4e1
0x7a8: JUMPI 0x4e1 V674
---
Entry stack: [V13, 0x12c, 0x0, 0x0]
Stack pops: 2
Stack additions: [V654, V661]
Exit stack: [V13, 0x12c, V654, V661]

================================

Block 0x7a9
[0x7a9:0x7ac]
---
Predecessors: [0x771]
Successors: []
---
0x7a9 PUSH1 0x0
0x7ab DUP1
0x7ac REVERT
---
0x7a9: V676 = 0x0
0x7ac: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12c, V654, V661]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12c, V654, V661]

================================

Block 0x7ad
[0x7ad:0x7b6]
---
Predecessors: [0x26c]
Successors: [0x201]
---
0x7ad JUMPDEST
0x7ae PUSH6 0x9184e72a000
0x7b5 DUP2
0x7b6 JUMP
---
0x7ad: JUMPDEST 
0x7ae: V677 = 0x9184e72a000
0x7b6: JUMP 0x201
---
Entry stack: [V13, 0x201]
Stack pops: 1
Stack additions: [S0, 0x9184e72a000]
Exit stack: [V13, 0x201, 0x9184e72a000]

================================

Block 0x7b7
[0x7b7:0x7d0]
---
Predecessors: [0x27f]
Successors: [0x7d1, 0x7d5]
---
0x7b7 JUMPDEST
0x7b8 PUSH1 0x1
0x7ba SLOAD
0x7bb PUSH1 0x0
0x7bd SWAP1
0x7be CALLER
0x7bf PUSH1 0x1
0x7c1 PUSH1 0xa0
0x7c3 PUSH1 0x2
0x7c5 EXP
0x7c6 SUB
0x7c7 SWAP1
0x7c8 DUP2
0x7c9 AND
0x7ca SWAP2
0x7cb AND
0x7cc EQ
0x7cd PUSH2 0x7d5
0x7d0 JUMPI
---
0x7b7: JUMPDEST 
0x7b8: V678 = 0x1
0x7ba: V679 = S[0x1]
0x7bb: V680 = 0x0
0x7be: V681 = CALLER
0x7bf: V682 = 0x1
0x7c1: V683 = 0xa0
0x7c3: V684 = 0x2
0x7c5: V685 = EXP 0x2 0xa0
0x7c6: V686 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7c9: V687 = AND 0xffffffffffffffffffffffffffffffffffffffff V681
0x7cb: V688 = AND V679 0xffffffffffffffffffffffffffffffffffffffff
0x7cc: V689 = EQ V688 V687
0x7cd: V690 = 0x7d5
0x7d0: JUMPI 0x7d5 V689
---
Entry stack: [V13, 0x12c, V215]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x12c, V215, 0x0]

================================

Block 0x7d1
[0x7d1:0x7d4]
---
Predecessors: [0x7b7]
Successors: []
---
0x7d1 PUSH1 0x0
0x7d3 DUP1
0x7d4 REVERT
---
0x7d1: V691 = 0x0
0x7d4: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12c, V215, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12c, V215, 0x0]

================================

Block 0x7d5
[0x7d5:0x7f5]
---
Predecessors: [0x7b7]
Successors: [0x7f6, 0x7fa]
---
0x7d5 JUMPDEST
0x7d6 PUSH1 0x1
0x7d8 PUSH1 0xa0
0x7da PUSH1 0x2
0x7dc EXP
0x7dd SUB
0x7de CALLER
0x7df AND
0x7e0 PUSH1 0x0
0x7e2 SWAP1
0x7e3 DUP2
0x7e4 MSTORE
0x7e5 PUSH1 0x2
0x7e7 PUSH1 0x20
0x7e9 MSTORE
0x7ea PUSH1 0x40
0x7ec SWAP1
0x7ed SHA3
0x7ee SLOAD
0x7ef DUP3
0x7f0 GT
0x7f1 ISZERO
0x7f2 PUSH2 0x7fa
0x7f5 JUMPI
---
0x7d5: JUMPDEST 
0x7d6: V692 = 0x1
0x7d8: V693 = 0xa0
0x7da: V694 = 0x2
0x7dc: V695 = EXP 0x2 0xa0
0x7dd: V696 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7de: V697 = CALLER
0x7df: V698 = AND V697 0xffffffffffffffffffffffffffffffffffffffff
0x7e0: V699 = 0x0
0x7e4: M[0x0] = V698
0x7e5: V700 = 0x2
0x7e7: V701 = 0x20
0x7e9: M[0x20] = 0x2
0x7ea: V702 = 0x40
0x7ed: V703 = SHA3 0x0 0x40
0x7ee: V704 = S[V703]
0x7f0: V705 = GT V215 V704
0x7f1: V706 = ISZERO V705
0x7f2: V707 = 0x7fa
0x7f5: JUMPI 0x7fa V706
---
Entry stack: [V13, 0x12c, V215, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x12c, V215, 0x0]

================================

Block 0x7f6
[0x7f6:0x7f9]
---
Predecessors: [0x7d5]
Successors: []
---
0x7f6 PUSH1 0x0
0x7f8 DUP1
0x7f9 REVERT
---
0x7f6: V708 = 0x0
0x7f9: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12c, V215, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12c, V215, 0x0]

================================

Block 0x7fa
[0x7fa:0x81e]
---
Predecessors: [0x7d5]
Successors: [0xe7e]
---
0x7fa JUMPDEST
0x7fb POP
0x7fc CALLER
0x7fd PUSH1 0x1
0x7ff PUSH1 0xa0
0x801 PUSH1 0x2
0x803 EXP
0x804 SUB
0x805 DUP2
0x806 AND
0x807 PUSH1 0x0
0x809 SWAP1
0x80a DUP2
0x80b MSTORE
0x80c PUSH1 0x2
0x80e PUSH1 0x20
0x810 MSTORE
0x811 PUSH1 0x40
0x813 SWAP1
0x814 SHA3
0x815 SLOAD
0x816 PUSH2 0x81f
0x819 SWAP1
0x81a DUP4
0x81b PUSH2 0xe7e
0x81e JUMP
---
0x7fa: JUMPDEST 
0x7fc: V709 = CALLER
0x7fd: V710 = 0x1
0x7ff: V711 = 0xa0
0x801: V712 = 0x2
0x803: V713 = EXP 0x2 0xa0
0x804: V714 = SUB 0x10000000000000000000000000000000000000000 0x1
0x806: V715 = AND V709 0xffffffffffffffffffffffffffffffffffffffff
0x807: V716 = 0x0
0x80b: M[0x0] = V715
0x80c: V717 = 0x2
0x80e: V718 = 0x20
0x810: M[0x20] = 0x2
0x811: V719 = 0x40
0x814: V720 = SHA3 0x0 0x40
0x815: V721 = S[V720]
0x816: V722 = 0x81f
0x81b: V723 = 0xe7e
0x81e: JUMP 0xe7e
---
Entry stack: [V13, 0x12c, V215, 0x0]
Stack pops: 2
Stack additions: [S1, V709, 0x81f, V721, S1]
Exit stack: [V13, 0x12c, V215, V709, 0x81f, V721, V215]

================================

Block 0x81f
[0x81f:0x84a]
---
Predecessors: [0xe8a]
Successors: [0xe7e]
---
0x81f JUMPDEST
0x820 PUSH1 0x1
0x822 PUSH1 0xa0
0x824 PUSH1 0x2
0x826 EXP
0x827 SUB
0x828 DUP3
0x829 AND
0x82a PUSH1 0x0
0x82c SWAP1
0x82d DUP2
0x82e MSTORE
0x82f PUSH1 0x2
0x831 PUSH1 0x20
0x833 MSTORE
0x834 PUSH1 0x40
0x836 SWAP1
0x837 SHA3
0x838 SSTORE
0x839 PUSH1 0x4
0x83b SLOAD
0x83c PUSH2 0x84b
0x83f SWAP1
0x840 DUP4
0x841 PUSH4 0xffffffff
0x846 PUSH2 0xe7e
0x849 AND
0x84a JUMP
---
0x81f: JUMPDEST 
0x820: V724 = 0x1
0x822: V725 = 0xa0
0x824: V726 = 0x2
0x826: V727 = EXP 0x2 0xa0
0x827: V728 = SUB 0x10000000000000000000000000000000000000000 0x1
0x829: V729 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x82a: V730 = 0x0
0x82e: M[0x0] = V729
0x82f: V731 = 0x2
0x831: V732 = 0x20
0x833: M[0x20] = 0x2
0x834: V733 = 0x40
0x837: V734 = SHA3 0x0 0x40
0x838: S[V734] = V1295
0x839: V735 = 0x4
0x83b: V736 = S[0x4]
0x83c: V737 = 0x84b
0x841: V738 = 0xffffffff
0x846: V739 = 0xe7e
0x849: V740 = AND 0xe7e 0xffffffff
0x84a: JUMP 0xe7e
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, V1295]
Stack pops: 3
Stack additions: [S2, S1, 0x84b, V736, S2]
Exit stack: [V13, S6, S5, S4, S3, S2, S1, 0x84b, V736, S2]

================================

Block 0x84b
[0x84b:0x860]
---
Predecessors: [0xe8a]
Successors: [0xe7e]
---
0x84b JUMPDEST
0x84c PUSH1 0x4
0x84e SSTORE
0x84f PUSH1 0x5
0x851 SLOAD
0x852 PUSH2 0x861
0x855 SWAP1
0x856 DUP4
0x857 PUSH4 0xffffffff
0x85c PUSH2 0xe7e
0x85f AND
0x860 JUMP
---
0x84b: JUMPDEST 
0x84c: V741 = 0x4
0x84e: S[0x4] = V1295
0x84f: V742 = 0x5
0x851: V743 = S[0x5]
0x852: V744 = 0x861
0x857: V745 = 0xffffffff
0x85c: V746 = 0xe7e
0x85f: V747 = AND 0xe7e 0xffffffff
0x860: JUMP 0xe7e
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, V1295]
Stack pops: 3
Stack additions: [S2, S1, 0x861, V743, S2]
Exit stack: [V13, S6, S5, S4, S3, S2, S1, 0x861, V743, S2]

================================

Block 0x861
[0x861:0x8a4]
---
Predecessors: [0xe8a]
Successors: [0x12c]
---
0x861 JUMPDEST
0x862 PUSH1 0x5
0x864 SSTORE
0x865 PUSH1 0x1
0x867 PUSH1 0xa0
0x869 PUSH1 0x2
0x86b EXP
0x86c SUB
0x86d DUP2
0x86e AND
0x86f PUSH32 0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5
0x890 DUP4
0x891 PUSH1 0x40
0x893 MLOAD
0x894 SWAP1
0x895 DUP2
0x896 MSTORE
0x897 PUSH1 0x20
0x899 ADD
0x89a PUSH1 0x40
0x89c MLOAD
0x89d DUP1
0x89e SWAP2
0x89f SUB
0x8a0 SWAP1
0x8a1 LOG2
0x8a2 POP
0x8a3 POP
0x8a4 JUMP
---
0x861: JUMPDEST 
0x862: V748 = 0x5
0x864: S[0x5] = V1295
0x865: V749 = 0x1
0x867: V750 = 0xa0
0x869: V751 = 0x2
0x86b: V752 = EXP 0x2 0xa0
0x86c: V753 = SUB 0x10000000000000000000000000000000000000000 0x1
0x86e: V754 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x86f: V755 = 0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5
0x891: V756 = 0x40
0x893: V757 = M[0x40]
0x896: M[V757] = S2
0x897: V758 = 0x20
0x899: V759 = ADD 0x20 V757
0x89a: V760 = 0x40
0x89c: V761 = M[0x40]
0x89f: V762 = SUB V759 V761
0x8a1: LOG V761 V762 0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5 V754
0x8a4: JUMP S3
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, V1295]
Stack pops: 4
Stack additions: []
Exit stack: [V13, S6, S5, S4]

================================

Block 0x8a5
[0x8a5:0x8bb]
---
Predecessors: [0x295]
Successors: [0x8bc, 0x8c0]
---
0x8a5 JUMPDEST
0x8a6 PUSH1 0x1
0x8a8 SLOAD
0x8a9 CALLER
0x8aa PUSH1 0x1
0x8ac PUSH1 0xa0
0x8ae PUSH1 0x2
0x8b0 EXP
0x8b1 SUB
0x8b2 SWAP1
0x8b3 DUP2
0x8b4 AND
0x8b5 SWAP2
0x8b6 AND
0x8b7 EQ
0x8b8 PUSH2 0x8c0
0x8bb JUMPI
---
0x8a5: JUMPDEST 
0x8a6: V763 = 0x1
0x8a8: V764 = S[0x1]
0x8a9: V765 = CALLER
0x8aa: V766 = 0x1
0x8ac: V767 = 0xa0
0x8ae: V768 = 0x2
0x8b0: V769 = EXP 0x2 0xa0
0x8b1: V770 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8b4: V771 = AND 0xffffffffffffffffffffffffffffffffffffffff V765
0x8b6: V772 = AND V764 0xffffffffffffffffffffffffffffffffffffffff
0x8b7: V773 = EQ V772 V771
0x8b8: V774 = 0x8c0
0x8bb: JUMPI 0x8c0 V773
---
Entry stack: [V13, 0x12c, V229, V231]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12c, V229, V231]

================================

Block 0x8bc
[0x8bc:0x8bf]
---
Predecessors: [0x8a5]
Successors: []
---
0x8bc PUSH1 0x0
0x8be DUP1
0x8bf REVERT
---
0x8bc: V775 = 0x0
0x8bf: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12c, V229, V231]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12c, V229, V231]

================================

Block 0x8c0
[0x8c0:0x8c9]
---
Predecessors: [0x8a5]
Successors: [0xe9d]
---
0x8c0 JUMPDEST
0x8c1 PUSH2 0x4e1
0x8c4 DUP3
0x8c5 DUP3
0x8c6 PUSH2 0xe9d
0x8c9 JUMP
---
0x8c0: JUMPDEST 
0x8c1: V776 = 0x4e1
0x8c6: V777 = 0xe9d
0x8c9: JUMP 0xe9d
---
Entry stack: [V13, 0x12c, V229, V231]
Stack pops: 2
Stack additions: [S1, S0, 0x4e1, S1, S0]
Exit stack: [V13, 0x12c, V229, V231, 0x4e1, V229, V231]

================================

Block 0x8ca
[0x8ca:0x908]
---
Predecessors: [0x2b7]
Successors: [0xda4]
---
0x8ca JUMPDEST
0x8cb PUSH1 0x1
0x8cd DUP1
0x8ce SLOAD
0x8cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8e4 NOT
0x8e5 AND
0x8e6 CALLER
0x8e7 PUSH1 0x1
0x8e9 PUSH1 0xa0
0x8eb PUSH1 0x2
0x8ed EXP
0x8ee SUB
0x8ef SWAP1
0x8f0 DUP2
0x8f1 AND
0x8f2 SWAP2
0x8f3 SWAP1
0x8f4 SWAP2
0x8f5 OR
0x8f6 SWAP2
0x8f7 DUP3
0x8f8 SWAP1
0x8f9 SSTORE
0x8fa PUSH1 0x5
0x8fc SLOAD
0x8fd PUSH2 0x909
0x900 SWAP3
0x901 SWAP1
0x902 SWAP2
0x903 AND
0x904 SWAP1
0x905 PUSH2 0xda4
0x908 JUMP
---
0x8ca: JUMPDEST 
0x8cb: V778 = 0x1
0x8ce: V779 = S[0x1]
0x8cf: V780 = 0xffffffffffffffffffffffffffffffffffffffff
0x8e4: V781 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x8e5: V782 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V779
0x8e6: V783 = CALLER
0x8e7: V784 = 0x1
0x8e9: V785 = 0xa0
0x8eb: V786 = 0x2
0x8ed: V787 = EXP 0x2 0xa0
0x8ee: V788 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8f1: V789 = AND 0xffffffffffffffffffffffffffffffffffffffff V783
0x8f5: V790 = OR V789 V782
0x8f9: S[0x1] = V790
0x8fa: V791 = 0x5
0x8fc: V792 = S[0x5]
0x8fd: V793 = 0x909
0x903: V794 = AND 0xffffffffffffffffffffffffffffffffffffffff V790
0x905: V795 = 0xda4
0x908: JUMP 0xda4
---
Entry stack: [V13, 0x12c]
Stack pops: 0
Stack additions: [0x909, V794, V792]
Exit stack: [V13, 0x12c, 0x909, V794, V792]

================================

Block 0x909
[0x909:0x90b]
---
Predecessors: [0x4e1, 0xd3f, 0xdf6]
Successors: [0x12c, 0x1da]
---
0x909 JUMPDEST
0x90a POP
0x90b JUMP
---
0x909: JUMPDEST 
0x90b: JUMP S1
---
Entry stack: [V13, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V13, S3, S2]

================================

Block 0x90c
[0x90c:0x925]
---
Predecessors: [0x2ca]
Successors: [0x926, 0x92a]
---
0x90c JUMPDEST
0x90d PUSH1 0x1
0x90f SLOAD
0x910 PUSH1 0x0
0x912 SWAP1
0x913 CALLER
0x914 PUSH1 0x1
0x916 PUSH1 0xa0
0x918 PUSH1 0x2
0x91a EXP
0x91b SUB
0x91c SWAP1
0x91d DUP2
0x91e AND
0x91f SWAP2
0x920 AND
0x921 EQ
0x922 PUSH2 0x92a
0x925 JUMPI
---
0x90c: JUMPDEST 
0x90d: V796 = 0x1
0x90f: V797 = S[0x1]
0x910: V798 = 0x0
0x913: V799 = CALLER
0x914: V800 = 0x1
0x916: V801 = 0xa0
0x918: V802 = 0x2
0x91a: V803 = EXP 0x2 0xa0
0x91b: V804 = SUB 0x10000000000000000000000000000000000000000 0x1
0x91e: V805 = AND 0xffffffffffffffffffffffffffffffffffffffff V799
0x920: V806 = AND V797 0xffffffffffffffffffffffffffffffffffffffff
0x921: V807 = EQ V806 V805
0x922: V808 = 0x92a
0x925: JUMPI 0x92a V807
---
Entry stack: [V13, 0x12c, V254, V261]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x12c, V254, V261, 0x0]

================================

Block 0x926
[0x926:0x929]
---
Predecessors: [0x90c]
Successors: []
---
0x926 PUSH1 0x0
0x928 DUP1
0x929 REVERT
---
0x926: V809 = 0x0
0x929: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12c, V254, V261, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12c, V254, V261, 0x0]

================================

Block 0x92a
[0x92a:0x92d]
---
Predecessors: [0x90c]
Successors: [0x92e]
---
0x92a JUMPDEST
0x92b POP
0x92c PUSH1 0x0
---
0x92a: JUMPDEST 
0x92c: V810 = 0x0
---
Entry stack: [V13, 0x12c, V254, V261, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V13, 0x12c, V254, V261, 0x0]

================================

Block 0x92e
[0x92e:0x937]
---
Predecessors: [0x92a, 0x956]
Successors: [0x938, 0x95e]
---
0x92e JUMPDEST
0x92f DUP3
0x930 MLOAD
0x931 DUP2
0x932 LT
0x933 ISZERO
0x934 PUSH2 0x95e
0x937 JUMPI
---
0x92e: JUMPDEST 
0x930: V811 = M[S2]
0x932: V812 = LT S0 V811
0x933: V813 = ISZERO V812
0x934: V814 = 0x95e
0x937: JUMPI 0x95e V813
---
Entry stack: [V13, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, S3, S2, S1, S0]

================================

Block 0x938
[0x938:0x944]
---
Predecessors: [0x92e]
Successors: [0x945, 0x946]
---
0x938 PUSH2 0x956
0x93b DUP4
0x93c DUP3
0x93d DUP2
0x93e MLOAD
0x93f DUP2
0x940 LT
0x941 PUSH2 0x946
0x944 JUMPI
---
0x938: V815 = 0x956
0x93e: V816 = M[S2]
0x940: V817 = LT S0 V816
0x941: V818 = 0x946
0x944: JUMPI 0x946 V817
---
Entry stack: [V13, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x956, S2, S0]
Exit stack: [V13, S3, S2, S1, S0, 0x956, S2, S0]

================================

Block 0x945
[0x945:0x945]
---
Predecessors: [0x938]
Successors: []
---
0x945 INVALID
---
0x945: INVALID 
---
Entry stack: [V13, S6, S5, S4, S3, 0x956, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S6, S5, S4, S3, 0x956, S1, S0]

================================

Block 0x946
[0x946:0x955]
---
Predecessors: [0x938]
Successors: [0xe9d]
---
0x946 JUMPDEST
0x947 SWAP1
0x948 PUSH1 0x20
0x94a ADD
0x94b SWAP1
0x94c PUSH1 0x20
0x94e MUL
0x94f ADD
0x950 MLOAD
0x951 DUP4
0x952 PUSH2 0xe9d
0x955 JUMP
---
0x946: JUMPDEST 
0x948: V819 = 0x20
0x94a: V820 = ADD 0x20 S1
0x94c: V821 = 0x20
0x94e: V822 = MUL 0x20 S0
0x94f: V823 = ADD V822 V820
0x950: V824 = M[V823]
0x952: V825 = 0xe9d
0x955: JUMP 0xe9d
---
Entry stack: [V13, S6, S5, S4, S3, 0x956, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, V824, S4]
Exit stack: [V13, S6, S5, S4, S3, 0x956, V824, S4]

================================

Block 0x956
[0x956:0x95d]
---
Predecessors: [0xf39]
Successors: [0x92e]
---
0x956 JUMPDEST
0x957 PUSH1 0x1
0x959 ADD
0x95a PUSH2 0x92e
0x95d JUMP
---
0x956: JUMPDEST 
0x957: V826 = 0x1
0x959: V827 = ADD 0x1 S0
0x95a: V828 = 0x92e
0x95d: JUMP 0x92e
---
Entry stack: [V13, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V827]
Exit stack: [V13, S3, S2, S1, V827]

================================

Block 0x95e
[0x95e:0x962]
---
Predecessors: [0x92e]
Successors: [0x12c]
---
0x95e JUMPDEST
0x95f POP
0x960 POP
0x961 POP
0x962 JUMP
---
0x95e: JUMPDEST 
0x962: JUMP S3
---
Entry stack: [V13, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13]

================================

Block 0x963
[0x963:0x97d]
---
Predecessors: [0x31b]
Successors: [0x201]
---
0x963 JUMPDEST
0x964 PUSH1 0x1
0x966 PUSH1 0xa0
0x968 PUSH1 0x2
0x96a EXP
0x96b SUB
0x96c AND
0x96d PUSH1 0x0
0x96f SWAP1
0x970 DUP2
0x971 MSTORE
0x972 PUSH1 0x2
0x974 PUSH1 0x20
0x976 MSTORE
0x977 PUSH1 0x40
0x979 SWAP1
0x97a SHA3
0x97b SLOAD
0x97c SWAP1
0x97d JUMP
---
0x963: JUMPDEST 
0x964: V829 = 0x1
0x966: V830 = 0xa0
0x968: V831 = 0x2
0x96a: V832 = EXP 0x2 0xa0
0x96b: V833 = SUB 0x10000000000000000000000000000000000000000 0x1
0x96c: V834 = AND 0xffffffffffffffffffffffffffffffffffffffff V275
0x96d: V835 = 0x0
0x971: M[0x0] = V834
0x972: V836 = 0x2
0x974: V837 = 0x20
0x976: M[0x20] = 0x2
0x977: V838 = 0x40
0x97a: V839 = SHA3 0x0 0x40
0x97b: V840 = S[V839]
0x97d: JUMP 0x201
---
Entry stack: [V13, 0x201, V275]
Stack pops: 2
Stack additions: [V840]
Exit stack: [V13, V840]

================================

Block 0x97e
[0x97e:0x9b4]
---
Predecessors: [0x33a]
Successors: [0x141]
---
0x97e JUMPDEST
0x97f PUSH1 0x40
0x981 DUP1
0x982 MLOAD
0x983 SWAP1
0x984 DUP2
0x985 ADD
0x986 PUSH1 0x40
0x988 MSTORE
0x989 PUSH1 0x4
0x98b DUP2
0x98c MSTORE
0x98d PUSH32 0x4243445800000000000000000000000000000000000000000000000000000000
0x9ae PUSH1 0x20
0x9b0 DUP3
0x9b1 ADD
0x9b2 MSTORE
0x9b3 DUP2
0x9b4 JUMP
---
0x97e: JUMPDEST 
0x97f: V841 = 0x40
0x982: V842 = M[0x40]
0x985: V843 = ADD V842 0x40
0x986: V844 = 0x40
0x988: M[0x40] = V843
0x989: V845 = 0x4
0x98c: M[V842] = 0x4
0x98d: V846 = 0x4243445800000000000000000000000000000000000000000000000000000000
0x9ae: V847 = 0x20
0x9b1: V848 = ADD V842 0x20
0x9b2: M[V848] = 0x4243445800000000000000000000000000000000000000000000000000000000
0x9b4: JUMP 0x141
---
Entry stack: [V13, 0x141]
Stack pops: 1
Stack additions: [S0, V842]
Exit stack: [V13, 0x141, V842]

================================

Block 0x9b5
[0x9b5:0x9ce]
---
Predecessors: [0x34d]
Successors: [0x9cf, 0x9d3]
---
0x9b5 JUMPDEST
0x9b6 PUSH1 0x1
0x9b8 SLOAD
0x9b9 PUSH1 0x0
0x9bb SWAP1
0x9bc CALLER
0x9bd PUSH1 0x1
0x9bf PUSH1 0xa0
0x9c1 PUSH1 0x2
0x9c3 EXP
0x9c4 SUB
0x9c5 SWAP1
0x9c6 DUP2
0x9c7 AND
0x9c8 SWAP2
0x9c9 AND
0x9ca EQ
0x9cb PUSH2 0x9d3
0x9ce JUMPI
---
0x9b5: JUMPDEST 
0x9b6: V849 = 0x1
0x9b8: V850 = S[0x1]
0x9b9: V851 = 0x0
0x9bc: V852 = CALLER
0x9bd: V853 = 0x1
0x9bf: V854 = 0xa0
0x9c1: V855 = 0x2
0x9c3: V856 = EXP 0x2 0xa0
0x9c4: V857 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9c7: V858 = AND 0xffffffffffffffffffffffffffffffffffffffff V852
0x9c9: V859 = AND V850 0xffffffffffffffffffffffffffffffffffffffff
0x9ca: V860 = EQ V859 V858
0x9cb: V861 = 0x9d3
0x9ce: JUMPI 0x9d3 V860
---
Entry stack: [V13, 0x1da]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x1da, 0x0]

================================

Block 0x9cf
[0x9cf:0x9d2]
---
Predecessors: [0x9b5]
Successors: []
---
0x9cf PUSH1 0x0
0x9d1 DUP1
0x9d2 REVERT
---
0x9cf: V862 = 0x0
0x9d2: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1da, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1da, 0x0]

================================

Block 0x9d3
[0x9d3:0x9de]
---
Predecessors: [0x9b5]
Successors: [0x9df, 0x9e3]
---
0x9d3 JUMPDEST
0x9d4 PUSH1 0x7
0x9d6 SLOAD
0x9d7 PUSH1 0xff
0x9d9 AND
0x9da ISZERO
0x9db PUSH2 0x9e3
0x9de JUMPI
---
0x9d3: JUMPDEST 
0x9d4: V863 = 0x7
0x9d6: V864 = S[0x7]
0x9d7: V865 = 0xff
0x9d9: V866 = AND 0xff V864
0x9da: V867 = ISZERO V866
0x9db: V868 = 0x9e3
0x9de: JUMPI 0x9e3 V867
---
Entry stack: [V13, 0x1da, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1da, 0x0]

================================

Block 0x9df
[0x9df:0x9e2]
---
Predecessors: [0x9d3]
Successors: []
---
0x9df PUSH1 0x0
0x9e1 DUP1
0x9e2 REVERT
---
0x9df: V869 = 0x0
0x9e2: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1da, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1da, 0x0]

================================

Block 0x9e3
[0x9e3:0xa21]
---
Predecessors: [0x9d3]
Successors: [0x1da]
---
0x9e3 JUMPDEST
0x9e4 PUSH1 0x7
0x9e6 DUP1
0x9e7 SLOAD
0x9e8 PUSH1 0xff
0x9ea NOT
0x9eb AND
0x9ec PUSH1 0x1
0x9ee OR
0x9ef SWAP1
0x9f0 SSTORE
0x9f1 PUSH32 0x7f95d919e78bdebe8a285e6e33357c2fcb65ccf66e72d7573f9f8f6caad0c4cc
0xa12 PUSH1 0x40
0xa14 MLOAD
0xa15 PUSH1 0x40
0xa17 MLOAD
0xa18 DUP1
0xa19 SWAP2
0xa1a SUB
0xa1b SWAP1
0xa1c LOG1
0xa1d POP
0xa1e PUSH1 0x1
0xa20 SWAP1
0xa21 JUMP
---
0x9e3: JUMPDEST 
0x9e4: V870 = 0x7
0x9e7: V871 = S[0x7]
0x9e8: V872 = 0xff
0x9ea: V873 = NOT 0xff
0x9eb: V874 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V871
0x9ec: V875 = 0x1
0x9ee: V876 = OR 0x1 V874
0x9f0: S[0x7] = V876
0x9f1: V877 = 0x7f95d919e78bdebe8a285e6e33357c2fcb65ccf66e72d7573f9f8f6caad0c4cc
0xa12: V878 = 0x40
0xa14: V879 = M[0x40]
0xa15: V880 = 0x40
0xa17: V881 = M[0x40]
0xa1a: V882 = SUB V879 V881
0xa1c: LOG V881 V882 0x7f95d919e78bdebe8a285e6e33357c2fcb65ccf66e72d7573f9f8f6caad0c4cc
0xa1e: V883 = 0x1
0xa21: JUMP 0x1da
---
Entry stack: [V13, 0x1da, 0x0]
Stack pops: 2
Stack additions: [0x1]
Exit stack: [V13, 0x1]

================================

Block 0xa22
[0xa22:0xa38]
---
Predecessors: [0x360]
Successors: [0xa39, 0xa3d]
---
0xa22 JUMPDEST
0xa23 PUSH1 0x1
0xa25 SLOAD
0xa26 CALLER
0xa27 PUSH1 0x1
0xa29 PUSH1 0xa0
0xa2b PUSH1 0x2
0xa2d EXP
0xa2e SUB
0xa2f SWAP1
0xa30 DUP2
0xa31 AND
0xa32 SWAP2
0xa33 AND
0xa34 EQ
0xa35 PUSH2 0xa3d
0xa38 JUMPI
---
0xa22: JUMPDEST 
0xa23: V884 = 0x1
0xa25: V885 = S[0x1]
0xa26: V886 = CALLER
0xa27: V887 = 0x1
0xa29: V888 = 0xa0
0xa2b: V889 = 0x2
0xa2d: V890 = EXP 0x2 0xa0
0xa2e: V891 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa31: V892 = AND 0xffffffffffffffffffffffffffffffffffffffff V886
0xa33: V893 = AND V885 0xffffffffffffffffffffffffffffffffffffffff
0xa34: V894 = EQ V893 V892
0xa35: V895 = 0xa3d
0xa38: JUMPI 0xa3d V894
---
Entry stack: [V13, 0x12c, V295]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12c, V295]

================================

Block 0xa39
[0xa39:0xa3c]
---
Predecessors: [0xa22]
Successors: []
---
0xa39 PUSH1 0x0
0xa3b DUP1
0xa3c REVERT
---
0xa39: V896 = 0x0
0xa3c: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12c, V295]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12c, V295]

================================

Block 0xa3d
[0xa3d:0xa77]
---
Predecessors: [0xa22]
Successors: [0x12c]
---
0xa3d JUMPDEST
0xa3e PUSH1 0x6
0xa40 DUP2
0xa41 SWAP1
0xa42 SSTORE
0xa43 PUSH32 0xf7729fa834bbef70b6d3257c2317a562aa88b56c81b544814f93dc5963a2c003
0xa64 DUP2
0xa65 PUSH1 0x40
0xa67 MLOAD
0xa68 SWAP1
0xa69 DUP2
0xa6a MSTORE
0xa6b PUSH1 0x20
0xa6d ADD
0xa6e PUSH1 0x40
0xa70 MLOAD
0xa71 DUP1
0xa72 SWAP2
0xa73 SUB
0xa74 SWAP1
0xa75 LOG1
0xa76 POP
0xa77 JUMP
---
0xa3d: JUMPDEST 
0xa3e: V897 = 0x6
0xa42: S[0x6] = V295
0xa43: V898 = 0xf7729fa834bbef70b6d3257c2317a562aa88b56c81b544814f93dc5963a2c003
0xa65: V899 = 0x40
0xa67: V900 = M[0x40]
0xa6a: M[V900] = V295
0xa6b: V901 = 0x20
0xa6d: V902 = ADD 0x20 V900
0xa6e: V903 = 0x40
0xa70: V904 = M[0x40]
0xa73: V905 = SUB V902 V904
0xa75: LOG V904 V905 0xf7729fa834bbef70b6d3257c2317a562aa88b56c81b544814f93dc5963a2c003
0xa77: JUMP 0x12c
---
Entry stack: [V13, 0x12c, V295]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0xa78
[0xa78:0xa85]
---
Predecessors: [0x376]
Successors: [0xa86, 0xa87]
---
0xa78 JUMPDEST
0xa79 PUSH1 0x0
0xa7b PUSH1 0x40
0xa7d PUSH1 0x44
0xa7f CALLDATASIZE
0xa80 LT
0xa81 ISZERO
0xa82 PUSH2 0xa87
0xa85 JUMPI
---
0xa78: JUMPDEST 
0xa79: V906 = 0x0
0xa7b: V907 = 0x40
0xa7d: V908 = 0x44
0xa7f: V909 = CALLDATASIZE
0xa80: V910 = LT V909 0x44
0xa81: V911 = ISZERO V910
0xa82: V912 = 0xa87
0xa85: JUMPI 0xa87 V911
---
Entry stack: [V13, 0x1da, V309, V311]
Stack pops: 0
Stack additions: [0x0, 0x40]
Exit stack: [V13, 0x1da, V309, V311, 0x0, 0x40]

================================

Block 0xa86
[0xa86:0xa86]
---
Predecessors: [0xa78]
Successors: []
---
0xa86 INVALID
---
0xa86: INVALID 
---
Entry stack: [V13, 0x1da, V309, V311, 0x0, 0x40]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1da, V309, V311, 0x0, 0x40]

================================

Block 0xa87
[0xa87:0xa97]
---
Predecessors: [0xa78]
Successors: [0xa98, 0xa9c]
---
0xa87 JUMPDEST
0xa88 PUSH1 0x1
0xa8a PUSH1 0xa0
0xa8c PUSH1 0x2
0xa8e EXP
0xa8f SUB
0xa90 DUP5
0xa91 AND
0xa92 ISZERO
0xa93 ISZERO
0xa94 PUSH2 0xa9c
0xa97 JUMPI
---
0xa87: JUMPDEST 
0xa88: V913 = 0x1
0xa8a: V914 = 0xa0
0xa8c: V915 = 0x2
0xa8e: V916 = EXP 0x2 0xa0
0xa8f: V917 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa91: V918 = AND V309 0xffffffffffffffffffffffffffffffffffffffff
0xa92: V919 = ISZERO V918
0xa93: V920 = ISZERO V919
0xa94: V921 = 0xa9c
0xa97: JUMPI 0xa9c V920
---
Entry stack: [V13, 0x1da, V309, V311, 0x0, 0x40]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, 0x1da, V309, V311, 0x0, 0x40]

================================

Block 0xa98
[0xa98:0xa9b]
---
Predecessors: [0xa87]
Successors: []
---
0xa98 PUSH1 0x0
0xa9a DUP1
0xa9b REVERT
---
0xa98: V922 = 0x0
0xa9b: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1da, V309, V311, 0x0, 0x40]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1da, V309, V311, 0x0, 0x40]

================================

Block 0xa9c
[0xa9c:0xabc]
---
Predecessors: [0xa87]
Successors: [0xabd, 0xac1]
---
0xa9c JUMPDEST
0xa9d PUSH1 0x1
0xa9f PUSH1 0xa0
0xaa1 PUSH1 0x2
0xaa3 EXP
0xaa4 SUB
0xaa5 CALLER
0xaa6 AND
0xaa7 PUSH1 0x0
0xaa9 SWAP1
0xaaa DUP2
0xaab MSTORE
0xaac PUSH1 0x2
0xaae PUSH1 0x20
0xab0 MSTORE
0xab1 PUSH1 0x40
0xab3 SWAP1
0xab4 SHA3
0xab5 SLOAD
0xab6 DUP4
0xab7 GT
0xab8 ISZERO
0xab9 PUSH2 0xac1
0xabc JUMPI
---
0xa9c: JUMPDEST 
0xa9d: V923 = 0x1
0xa9f: V924 = 0xa0
0xaa1: V925 = 0x2
0xaa3: V926 = EXP 0x2 0xa0
0xaa4: V927 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaa5: V928 = CALLER
0xaa6: V929 = AND V928 0xffffffffffffffffffffffffffffffffffffffff
0xaa7: V930 = 0x0
0xaab: M[0x0] = V929
0xaac: V931 = 0x2
0xaae: V932 = 0x20
0xab0: M[0x20] = 0x2
0xab1: V933 = 0x40
0xab4: V934 = SHA3 0x0 0x40
0xab5: V935 = S[V934]
0xab7: V936 = GT V311 V935
0xab8: V937 = ISZERO V936
0xab9: V938 = 0xac1
0xabc: JUMPI 0xac1 V937
---
Entry stack: [V13, 0x1da, V309, V311, 0x0, 0x40]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x1da, V309, V311, 0x0, 0x40]

================================

Block 0xabd
[0xabd:0xac0]
---
Predecessors: [0xa9c]
Successors: []
---
0xabd PUSH1 0x0
0xabf DUP1
0xac0 REVERT
---
0xabd: V939 = 0x0
0xac0: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1da, V309, V311, 0x0, 0x40]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1da, V309, V311, 0x0, 0x40]

================================

Block 0xac1
[0xac1:0xae9]
---
Predecessors: [0xa9c]
Successors: [0xe7e]
---
0xac1 JUMPDEST
0xac2 PUSH1 0x1
0xac4 PUSH1 0xa0
0xac6 PUSH1 0x2
0xac8 EXP
0xac9 SUB
0xaca CALLER
0xacb AND
0xacc PUSH1 0x0
0xace SWAP1
0xacf DUP2
0xad0 MSTORE
0xad1 PUSH1 0x2
0xad3 PUSH1 0x20
0xad5 MSTORE
0xad6 PUSH1 0x40
0xad8 SWAP1
0xad9 SHA3
0xada SLOAD
0xadb PUSH2 0xaea
0xade SWAP1
0xadf DUP5
0xae0 PUSH4 0xffffffff
0xae5 PUSH2 0xe7e
0xae8 AND
0xae9 JUMP
---
0xac1: JUMPDEST 
0xac2: V940 = 0x1
0xac4: V941 = 0xa0
0xac6: V942 = 0x2
0xac8: V943 = EXP 0x2 0xa0
0xac9: V944 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaca: V945 = CALLER
0xacb: V946 = AND V945 0xffffffffffffffffffffffffffffffffffffffff
0xacc: V947 = 0x0
0xad0: M[0x0] = V946
0xad1: V948 = 0x2
0xad3: V949 = 0x20
0xad5: M[0x20] = 0x2
0xad6: V950 = 0x40
0xad9: V951 = SHA3 0x0 0x40
0xada: V952 = S[V951]
0xadb: V953 = 0xaea
0xae0: V954 = 0xffffffff
0xae5: V955 = 0xe7e
0xae8: V956 = AND 0xe7e 0xffffffff
0xae9: JUMP 0xe7e
---
Entry stack: [V13, 0x1da, V309, V311, 0x0, 0x40]
Stack pops: 3
Stack additions: [S2, S1, S0, 0xaea, V952, S2]
Exit stack: [V13, 0x1da, V309, V311, 0x0, 0x40, 0xaea, V952, V311]

================================

Block 0xaea
[0xaea:0xb1e]
---
Predecessors: [0xe8a]
Successors: [0xe90]
---
0xaea JUMPDEST
0xaeb PUSH1 0x1
0xaed PUSH1 0xa0
0xaef PUSH1 0x2
0xaf1 EXP
0xaf2 SUB
0xaf3 CALLER
0xaf4 DUP2
0xaf5 AND
0xaf6 PUSH1 0x0
0xaf8 SWAP1
0xaf9 DUP2
0xafa MSTORE
0xafb PUSH1 0x2
0xafd PUSH1 0x20
0xaff MSTORE
0xb00 PUSH1 0x40
0xb02 DUP1
0xb03 DUP3
0xb04 SHA3
0xb05 SWAP4
0xb06 SWAP1
0xb07 SWAP4
0xb08 SSTORE
0xb09 SWAP1
0xb0a DUP7
0xb0b AND
0xb0c DUP2
0xb0d MSTORE
0xb0e SHA3
0xb0f SLOAD
0xb10 PUSH2 0xb1f
0xb13 SWAP1
0xb14 DUP5
0xb15 PUSH4 0xffffffff
0xb1a PUSH2 0xe90
0xb1d AND
0xb1e JUMP
---
0xaea: JUMPDEST 
0xaeb: V957 = 0x1
0xaed: V958 = 0xa0
0xaef: V959 = 0x2
0xaf1: V960 = EXP 0x2 0xa0
0xaf2: V961 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaf3: V962 = CALLER
0xaf5: V963 = AND 0xffffffffffffffffffffffffffffffffffffffff V962
0xaf6: V964 = 0x0
0xafa: M[0x0] = V963
0xafb: V965 = 0x2
0xafd: V966 = 0x20
0xaff: M[0x20] = 0x2
0xb00: V967 = 0x40
0xb04: V968 = SHA3 0x0 0x40
0xb08: S[V968] = V1295
0xb0b: V969 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0xb0d: M[0x0] = V969
0xb0e: V970 = SHA3 0x0 0x40
0xb0f: V971 = S[V970]
0xb10: V972 = 0xb1f
0xb15: V973 = 0xffffffff
0xb1a: V974 = 0xe90
0xb1d: V975 = AND 0xe90 0xffffffff
0xb1e: JUMP 0xe90
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, V1295]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, 0xb1f, V971, S3]
Exit stack: [V13, S6, S5, S4, S3, S2, S1, 0xb1f, V971, S3]

================================

Block 0xb1f
[0xb1f:0xb6e]
---
Predecessors: [0x5c2]
Successors: [0x12c, 0x1da]
---
0xb1f JUMPDEST
0xb20 PUSH1 0x1
0xb22 PUSH1 0xa0
0xb24 PUSH1 0x2
0xb26 EXP
0xb27 SUB
0xb28 DUP1
0xb29 DUP7
0xb2a AND
0xb2b PUSH1 0x0
0xb2d DUP2
0xb2e DUP2
0xb2f MSTORE
0xb30 PUSH1 0x2
0xb32 PUSH1 0x20
0xb34 MSTORE
0xb35 PUSH1 0x40
0xb37 SWAP1
0xb38 DUP2
0xb39 SWAP1
0xb3a SHA3
0xb3b SWAP4
0xb3c SWAP1
0xb3d SWAP4
0xb3e SSTORE
0xb3f SWAP2
0xb40 CALLER
0xb41 SWAP1
0xb42 SWAP2
0xb43 AND
0xb44 SWAP1
0xb45 PUSH1 0x0
0xb47 DUP1
0xb48 MLOAD
0xb49 PUSH1 0x20
0xb4b PUSH2 0xfc0
0xb4e DUP4
0xb4f CODECOPY
0xb50 DUP2
0xb51 MLOAD
0xb52 SWAP2
0xb53 MSTORE
0xb54 SWAP1
0xb55 DUP7
0xb56 SWAP1
0xb57 MLOAD
0xb58 SWAP1
0xb59 DUP2
0xb5a MSTORE
0xb5b PUSH1 0x20
0xb5d ADD
0xb5e PUSH1 0x40
0xb60 MLOAD
0xb61 DUP1
0xb62 SWAP2
0xb63 SUB
0xb64 SWAP1
0xb65 LOG3
0xb66 POP
0xb67 PUSH1 0x1
0xb69 SWAP4
0xb6a SWAP3
0xb6b POP
0xb6c POP
0xb6d POP
0xb6e JUMP
---
0xb1f: JUMPDEST 
0xb20: V976 = 0x1
0xb22: V977 = 0xa0
0xb24: V978 = 0x2
0xb26: V979 = EXP 0x2 0xa0
0xb27: V980 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb2a: V981 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0xb2b: V982 = 0x0
0xb2f: M[0x0] = V981
0xb30: V983 = 0x2
0xb32: V984 = 0x20
0xb34: M[0x20] = 0x2
0xb35: V985 = 0x40
0xb3a: V986 = SHA3 0x0 0x40
0xb3e: S[V986] = S0
0xb40: V987 = CALLER
0xb43: V988 = AND 0xffffffffffffffffffffffffffffffffffffffff V987
0xb45: V989 = 0x0
0xb48: V990 = M[0x0]
0xb49: V991 = 0x20
0xb4b: V992 = 0xfc0
0xb4f: CODECOPY 0x0 0xfc0 0x20
0xb51: V993 = M[0x0]
0xb53: M[0x0] = V990
0xb57: V994 = M[0x40]
0xb5a: M[V994] = S3
0xb5b: V995 = 0x20
0xb5d: V996 = ADD 0x20 V994
0xb5e: V997 = 0x40
0xb60: V998 = M[0x40]
0xb63: V999 = SUB V996 V998
0xb65: LOG V998 V999 V993 V988 V981
0xb67: V1000 = 0x1
0xb6e: JUMP S5
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [0x1]
Exit stack: [V13, S7, S6, 0x1]

================================

Block 0xb6f
[0xb6f:0xb77]
---
Predecessors: [0x398]
Successors: [0x1da]
---
0xb6f JUMPDEST
0xb70 PUSH1 0x7
0xb72 SLOAD
0xb73 PUSH1 0xff
0xb75 AND
0xb76 DUP2
0xb77 JUMP
---
0xb6f: JUMPDEST 
0xb70: V1001 = 0x7
0xb72: V1002 = S[0x7]
0xb73: V1003 = 0xff
0xb75: V1004 = AND 0xff V1002
0xb77: JUMP 0x1da
---
Entry stack: [V13, 0x1da]
Stack pops: 1
Stack additions: [S0, V1004]
Exit stack: [V13, 0x1da, V1004]

================================

Block 0xb78
[0xb78:0xbc5]
---
Predecessors: [0x3ab]
Successors: [0xbc6, 0xbca]
---
0xb78 JUMPDEST
0xb79 PUSH1 0x0
0xb7b DUP3
0xb7c DUP2
0xb7d PUSH1 0x1
0xb7f PUSH1 0xa0
0xb81 PUSH1 0x2
0xb83 EXP
0xb84 SUB
0xb85 DUP3
0xb86 AND
0xb87 PUSH4 0x70a08231
0xb8c DUP6
0xb8d PUSH1 0x40
0xb8f MLOAD
0xb90 PUSH1 0xe0
0xb92 PUSH1 0x2
0xb94 EXP
0xb95 PUSH4 0xffffffff
0xb9a DUP5
0xb9b AND
0xb9c MUL
0xb9d DUP2
0xb9e MSTORE
0xb9f PUSH1 0x1
0xba1 PUSH1 0xa0
0xba3 PUSH1 0x2
0xba5 EXP
0xba6 SUB
0xba7 SWAP1
0xba8 SWAP2
0xba9 AND
0xbaa PUSH1 0x4
0xbac DUP3
0xbad ADD
0xbae MSTORE
0xbaf PUSH1 0x24
0xbb1 ADD
0xbb2 PUSH1 0x20
0xbb4 PUSH1 0x40
0xbb6 MLOAD
0xbb7 DUP1
0xbb8 DUP4
0xbb9 SUB
0xbba DUP2
0xbbb PUSH1 0x0
0xbbd DUP8
0xbbe DUP1
0xbbf EXTCODESIZE
0xbc0 ISZERO
0xbc1 ISZERO
0xbc2 PUSH2 0xbca
0xbc5 JUMPI
---
0xb78: JUMPDEST 
0xb79: V1005 = 0x0
0xb7d: V1006 = 0x1
0xb7f: V1007 = 0xa0
0xb81: V1008 = 0x2
0xb83: V1009 = EXP 0x2 0xa0
0xb84: V1010 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb86: V1011 = AND V331 0xffffffffffffffffffffffffffffffffffffffff
0xb87: V1012 = 0x70a08231
0xb8d: V1013 = 0x40
0xb8f: V1014 = M[0x40]
0xb90: V1015 = 0xe0
0xb92: V1016 = 0x2
0xb94: V1017 = EXP 0x2 0xe0
0xb95: V1018 = 0xffffffff
0xb9b: V1019 = AND 0x70a08231 0xffffffff
0xb9c: V1020 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0xb9e: M[V1014] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xb9f: V1021 = 0x1
0xba1: V1022 = 0xa0
0xba3: V1023 = 0x2
0xba5: V1024 = EXP 0x2 0xa0
0xba6: V1025 = SUB 0x10000000000000000000000000000000000000000 0x1
0xba9: V1026 = AND V334 0xffffffffffffffffffffffffffffffffffffffff
0xbaa: V1027 = 0x4
0xbad: V1028 = ADD V1014 0x4
0xbae: M[V1028] = V1026
0xbaf: V1029 = 0x24
0xbb1: V1030 = ADD 0x24 V1014
0xbb2: V1031 = 0x20
0xbb4: V1032 = 0x40
0xbb6: V1033 = M[0x40]
0xbb9: V1034 = SUB V1030 V1033
0xbbb: V1035 = 0x0
0xbbf: V1036 = EXTCODESIZE V1011
0xbc0: V1037 = ISZERO V1036
0xbc1: V1038 = ISZERO V1037
0xbc2: V1039 = 0xbca
0xbc5: JUMPI 0xbca V1038
---
Entry stack: [V13, 0x201, V331, V334]
Stack pops: 2
Stack additions: [S1, S0, 0x0, S1, 0x0, V1011, 0x70a08231, V1030, 0x20, V1033, V1034, V1033, 0x0, V1011]
Exit stack: [V13, 0x201, V331, V334, 0x0, V331, 0x0, V1011, 0x70a08231, V1030, 0x20, V1033, V1034, V1033, 0x0, V1011]

================================

Block 0xbc6
[0xbc6:0xbc9]
---
Predecessors: [0xb78]
Successors: []
---
0xbc6 PUSH1 0x0
0xbc8 DUP1
0xbc9 REVERT
---
0xbc6: V1040 = 0x0
0xbc9: REVERT 0x0 0x0
---
Entry stack: [V13, 0x201, V331, V334, 0x0, V331, 0x0, V1011, 0x70a08231, V1030, 0x20, V1033, V1034, V1033, 0x0, V1011]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x201, V331, V334, 0x0, V331, 0x0, V1011, 0x70a08231, V1030, 0x20, V1033, V1034, V1033, 0x0, V1011]

================================

Block 0xbca
[0xbca:0xbd2]
---
Predecessors: [0xb78]
Successors: [0xbd3, 0xbd7]
---
0xbca JUMPDEST
0xbcb GAS
0xbcc CALL
0xbcd ISZERO
0xbce ISZERO
0xbcf PUSH2 0xbd7
0xbd2 JUMPI
---
0xbca: JUMPDEST 
0xbcb: V1041 = GAS
0xbcc: V1042 = CALL V1041 V1011 0x0 V1033 V1034 V1033 0x20
0xbcd: V1043 = ISZERO V1042
0xbce: V1044 = ISZERO V1043
0xbcf: V1045 = 0xbd7
0xbd2: JUMPI 0xbd7 V1044
---
Entry stack: [V13, 0x201, V331, V334, 0x0, V331, 0x0, V1011, 0x70a08231, V1030, 0x20, V1033, V1034, V1033, 0x0, V1011]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x201, V331, V334, 0x0, V331, 0x0, V1011, 0x70a08231, V1030]

================================

Block 0xbd3
[0xbd3:0xbd6]
---
Predecessors: [0xbca]
Successors: []
---
0xbd3 PUSH1 0x0
0xbd5 DUP1
0xbd6 REVERT
---
0xbd3: V1046 = 0x0
0xbd6: REVERT 0x0 0x0
---
Entry stack: [V13, 0x201, V331, V334, 0x0, V331, 0x0, V1011, 0x70a08231, V1030]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x201, V331, V334, 0x0, V331, 0x0, V1011, 0x70a08231, V1030]

================================

Block 0xbd7
[0xbd7:0xbe8]
---
Predecessors: [0xbca]
Successors: [0x201]
---
0xbd7 JUMPDEST
0xbd8 POP
0xbd9 POP
0xbda POP
0xbdb PUSH1 0x40
0xbdd MLOAD
0xbde DUP1
0xbdf MLOAD
0xbe0 SWAP7
0xbe1 SWAP6
0xbe2 POP
0xbe3 POP
0xbe4 POP
0xbe5 POP
0xbe6 POP
0xbe7 POP
0xbe8 JUMP
---
0xbd7: JUMPDEST 
0xbdb: V1047 = 0x40
0xbdd: V1048 = M[0x40]
0xbdf: V1049 = M[V1048]
0xbe8: JUMP 0x201
---
Entry stack: [V13, 0x201, V331, V334, 0x0, V331, 0x0, V1011, 0x70a08231, V1030]
Stack pops: 9
Stack additions: [V1049]
Exit stack: [V13, V1049]

================================

Block 0xbe9
[0xbe9:0xbee]
---
Predecessors: [0x3d0]
Successors: [0x201]
---
0xbe9 JUMPDEST
0xbea PUSH1 0x6
0xbec SLOAD
0xbed DUP2
0xbee JUMP
---
0xbe9: JUMPDEST 
0xbea: V1050 = 0x6
0xbec: V1051 = S[0x6]
0xbee: JUMP 0x201
---
Entry stack: [V13, 0x201]
Stack pops: 1
Stack additions: [S0, V1051]
Exit stack: [V13, 0x201, V1051]

================================

Block 0xbef
[0xbef:0xc19]
---
Predecessors: [0x3e3]
Successors: [0x201]
---
0xbef JUMPDEST
0xbf0 PUSH1 0x1
0xbf2 PUSH1 0xa0
0xbf4 PUSH1 0x2
0xbf6 EXP
0xbf7 SUB
0xbf8 SWAP2
0xbf9 DUP3
0xbfa AND
0xbfb PUSH1 0x0
0xbfd SWAP1
0xbfe DUP2
0xbff MSTORE
0xc00 PUSH1 0x3
0xc02 PUSH1 0x20
0xc04 SWAP1
0xc05 DUP2
0xc06 MSTORE
0xc07 PUSH1 0x40
0xc09 DUP1
0xc0a DUP4
0xc0b SHA3
0xc0c SWAP4
0xc0d SWAP1
0xc0e SWAP5
0xc0f AND
0xc10 DUP3
0xc11 MSTORE
0xc12 SWAP2
0xc13 SWAP1
0xc14 SWAP2
0xc15 MSTORE
0xc16 SHA3
0xc17 SLOAD
0xc18 SWAP1
0xc19 JUMP
---
0xbef: JUMPDEST 
0xbf0: V1052 = 0x1
0xbf2: V1053 = 0xa0
0xbf4: V1054 = 0x2
0xbf6: V1055 = EXP 0x2 0xa0
0xbf7: V1056 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbfa: V1057 = AND 0xffffffffffffffffffffffffffffffffffffffff V354
0xbfb: V1058 = 0x0
0xbff: M[0x0] = V1057
0xc00: V1059 = 0x3
0xc02: V1060 = 0x20
0xc06: M[0x20] = 0x3
0xc07: V1061 = 0x40
0xc0b: V1062 = SHA3 0x0 0x40
0xc0f: V1063 = AND 0xffffffffffffffffffffffffffffffffffffffff V357
0xc11: M[0x0] = V1063
0xc15: M[0x20] = V1062
0xc16: V1064 = SHA3 0x0 0x40
0xc17: V1065 = S[V1064]
0xc19: JUMP 0x201
---
Entry stack: [V13, 0x201, V354, V357]
Stack pops: 3
Stack additions: [V1065]
Exit stack: [V13, V1065]

================================

Block 0xc1a
[0xc1a:0xc37]
---
Predecessors: [0x408]
Successors: [0xc38, 0xc3c]
---
0xc1a JUMPDEST
0xc1b PUSH1 0x1
0xc1d SLOAD
0xc1e PUSH1 0x0
0xc20 SWAP1
0xc21 DUP2
0xc22 SWAP1
0xc23 DUP2
0xc24 SWAP1
0xc25 CALLER
0xc26 PUSH1 0x1
0xc28 PUSH1 0xa0
0xc2a PUSH1 0x2
0xc2c EXP
0xc2d SUB
0xc2e SWAP1
0xc2f DUP2
0xc30 AND
0xc31 SWAP2
0xc32 AND
0xc33 EQ
0xc34 PUSH2 0xc3c
0xc37 JUMPI
---
0xc1a: JUMPDEST 
0xc1b: V1066 = 0x1
0xc1d: V1067 = S[0x1]
0xc1e: V1068 = 0x0
0xc25: V1069 = CALLER
0xc26: V1070 = 0x1
0xc28: V1071 = 0xa0
0xc2a: V1072 = 0x2
0xc2c: V1073 = EXP 0x2 0xa0
0xc2d: V1074 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc30: V1075 = AND 0xffffffffffffffffffffffffffffffffffffffff V1069
0xc32: V1076 = AND V1067 0xffffffffffffffffffffffffffffffffffffffff
0xc33: V1077 = EQ V1076 V1075
0xc34: V1078 = 0xc3c
0xc37: JUMPI 0xc3c V1077
---
Entry stack: [V13, 0x1da, V371]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V13, 0x1da, V371, 0x0, 0x0, 0x0]

================================

Block 0xc38
[0xc38:0xc3b]
---
Predecessors: [0xc1a]
Successors: []
---
0xc38 PUSH1 0x0
0xc3a DUP1
0xc3b REVERT
---
0xc38: V1079 = 0x0
0xc3b: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1da, V371, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1da, V371, 0x0, 0x0, 0x0]

================================

Block 0xc3c
[0xc3c:0xc88]
---
Predecessors: [0xc1a]
Successors: [0xc89, 0xc8d]
---
0xc3c JUMPDEST
0xc3d DUP4
0xc3e SWAP2
0xc3f POP
0xc40 DUP2
0xc41 PUSH1 0x1
0xc43 PUSH1 0xa0
0xc45 PUSH1 0x2
0xc47 EXP
0xc48 SUB
0xc49 AND
0xc4a PUSH4 0x70a08231
0xc4f ADDRESS
0xc50 PUSH1 0x40
0xc52 MLOAD
0xc53 PUSH1 0xe0
0xc55 PUSH1 0x2
0xc57 EXP
0xc58 PUSH4 0xffffffff
0xc5d DUP5
0xc5e AND
0xc5f MUL
0xc60 DUP2
0xc61 MSTORE
0xc62 PUSH1 0x1
0xc64 PUSH1 0xa0
0xc66 PUSH1 0x2
0xc68 EXP
0xc69 SUB
0xc6a SWAP1
0xc6b SWAP2
0xc6c AND
0xc6d PUSH1 0x4
0xc6f DUP3
0xc70 ADD
0xc71 MSTORE
0xc72 PUSH1 0x24
0xc74 ADD
0xc75 PUSH1 0x20
0xc77 PUSH1 0x40
0xc79 MLOAD
0xc7a DUP1
0xc7b DUP4
0xc7c SUB
0xc7d DUP2
0xc7e PUSH1 0x0
0xc80 DUP8
0xc81 DUP1
0xc82 EXTCODESIZE
0xc83 ISZERO
0xc84 ISZERO
0xc85 PUSH2 0xc8d
0xc88 JUMPI
---
0xc3c: JUMPDEST 
0xc41: V1080 = 0x1
0xc43: V1081 = 0xa0
0xc45: V1082 = 0x2
0xc47: V1083 = EXP 0x2 0xa0
0xc48: V1084 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc49: V1085 = AND 0xffffffffffffffffffffffffffffffffffffffff V371
0xc4a: V1086 = 0x70a08231
0xc4f: V1087 = ADDRESS
0xc50: V1088 = 0x40
0xc52: V1089 = M[0x40]
0xc53: V1090 = 0xe0
0xc55: V1091 = 0x2
0xc57: V1092 = EXP 0x2 0xe0
0xc58: V1093 = 0xffffffff
0xc5e: V1094 = AND 0x70a08231 0xffffffff
0xc5f: V1095 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0xc61: M[V1089] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xc62: V1096 = 0x1
0xc64: V1097 = 0xa0
0xc66: V1098 = 0x2
0xc68: V1099 = EXP 0x2 0xa0
0xc69: V1100 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc6c: V1101 = AND V1087 0xffffffffffffffffffffffffffffffffffffffff
0xc6d: V1102 = 0x4
0xc70: V1103 = ADD V1089 0x4
0xc71: M[V1103] = V1101
0xc72: V1104 = 0x24
0xc74: V1105 = ADD 0x24 V1089
0xc75: V1106 = 0x20
0xc77: V1107 = 0x40
0xc79: V1108 = M[0x40]
0xc7c: V1109 = SUB V1105 V1108
0xc7e: V1110 = 0x0
0xc82: V1111 = EXTCODESIZE V1085
0xc83: V1112 = ISZERO V1111
0xc84: V1113 = ISZERO V1112
0xc85: V1114 = 0xc8d
0xc88: JUMPI 0xc8d V1113
---
Entry stack: [V13, 0x1da, V371, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S3, S0, V1085, 0x70a08231, V1105, 0x20, V1108, V1109, V1108, 0x0, V1085]
Exit stack: [V13, 0x1da, V371, 0x0, V371, 0x0, V1085, 0x70a08231, V1105, 0x20, V1108, V1109, V1108, 0x0, V1085]

================================

Block 0xc89
[0xc89:0xc8c]
---
Predecessors: [0xc3c]
Successors: []
---
0xc89 PUSH1 0x0
0xc8b DUP1
0xc8c REVERT
---
0xc89: V1115 = 0x0
0xc8c: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1da, V371, 0x0, V371, 0x0, V1085, 0x70a08231, V1105, 0x20, V1108, V1109, V1108, 0x0, V1085]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1da, V371, 0x0, V371, 0x0, V1085, 0x70a08231, V1105, 0x20, V1108, V1109, V1108, 0x0, V1085]

================================

Block 0xc8d
[0xc8d:0xc95]
---
Predecessors: [0xc3c]
Successors: [0xc96, 0xc9a]
---
0xc8d JUMPDEST
0xc8e GAS
0xc8f CALL
0xc90 ISZERO
0xc91 ISZERO
0xc92 PUSH2 0xc9a
0xc95 JUMPI
---
0xc8d: JUMPDEST 
0xc8e: V1116 = GAS
0xc8f: V1117 = CALL V1116 V1085 0x0 V1108 V1109 V1108 0x20
0xc90: V1118 = ISZERO V1117
0xc91: V1119 = ISZERO V1118
0xc92: V1120 = 0xc9a
0xc95: JUMPI 0xc9a V1119
---
Entry stack: [V13, 0x1da, V371, 0x0, V371, 0x0, V1085, 0x70a08231, V1105, 0x20, V1108, V1109, V1108, 0x0, V1085]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x1da, V371, 0x0, V371, 0x0, V1085, 0x70a08231, V1105]

================================

Block 0xc96
[0xc96:0xc99]
---
Predecessors: [0xc8d]
Successors: []
---
0xc96 PUSH1 0x0
0xc98 DUP1
0xc99 REVERT
---
0xc96: V1121 = 0x0
0xc99: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1da, V371, 0x0, V371, 0x0, V1085, 0x70a08231, V1105]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1da, V371, 0x0, V371, 0x0, V1085, 0x70a08231, V1105]

================================

Block 0xc9a
[0xc9a:0xcfb]
---
Predecessors: [0xc8d]
Successors: [0xcfc, 0xd00]
---
0xc9a JUMPDEST
0xc9b POP
0xc9c POP
0xc9d POP
0xc9e PUSH1 0x40
0xca0 MLOAD
0xca1 DUP1
0xca2 MLOAD
0xca3 PUSH1 0x1
0xca5 SLOAD
0xca6 SWAP1
0xca7 SWAP3
0xca8 POP
0xca9 PUSH1 0x1
0xcab PUSH1 0xa0
0xcad PUSH1 0x2
0xcaf EXP
0xcb0 SUB
0xcb1 DUP1
0xcb2 DUP6
0xcb3 AND
0xcb4 SWAP3
0xcb5 POP
0xcb6 PUSH4 0xa9059cbb
0xcbb SWAP2
0xcbc AND
0xcbd DUP4
0xcbe PUSH1 0x40
0xcc0 MLOAD
0xcc1 PUSH1 0xe0
0xcc3 PUSH1 0x2
0xcc5 EXP
0xcc6 PUSH4 0xffffffff
0xccb DUP6
0xccc AND
0xccd MUL
0xcce DUP2
0xccf MSTORE
0xcd0 PUSH1 0x1
0xcd2 PUSH1 0xa0
0xcd4 PUSH1 0x2
0xcd6 EXP
0xcd7 SUB
0xcd8 SWAP1
0xcd9 SWAP3
0xcda AND
0xcdb PUSH1 0x4
0xcdd DUP4
0xcde ADD
0xcdf MSTORE
0xce0 PUSH1 0x24
0xce2 DUP3
0xce3 ADD
0xce4 MSTORE
0xce5 PUSH1 0x44
0xce7 ADD
0xce8 PUSH1 0x20
0xcea PUSH1 0x40
0xcec MLOAD
0xced DUP1
0xcee DUP4
0xcef SUB
0xcf0 DUP2
0xcf1 PUSH1 0x0
0xcf3 DUP8
0xcf4 DUP1
0xcf5 EXTCODESIZE
0xcf6 ISZERO
0xcf7 ISZERO
0xcf8 PUSH2 0xd00
0xcfb JUMPI
---
0xc9a: JUMPDEST 
0xc9e: V1122 = 0x40
0xca0: V1123 = M[0x40]
0xca2: V1124 = M[V1123]
0xca3: V1125 = 0x1
0xca5: V1126 = S[0x1]
0xca9: V1127 = 0x1
0xcab: V1128 = 0xa0
0xcad: V1129 = 0x2
0xcaf: V1130 = EXP 0x2 0xa0
0xcb0: V1131 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcb3: V1132 = AND V371 0xffffffffffffffffffffffffffffffffffffffff
0xcb6: V1133 = 0xa9059cbb
0xcbc: V1134 = AND V1126 0xffffffffffffffffffffffffffffffffffffffff
0xcbe: V1135 = 0x40
0xcc0: V1136 = M[0x40]
0xcc1: V1137 = 0xe0
0xcc3: V1138 = 0x2
0xcc5: V1139 = EXP 0x2 0xe0
0xcc6: V1140 = 0xffffffff
0xccc: V1141 = AND 0xa9059cbb 0xffffffff
0xccd: V1142 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xccf: M[V1136] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xcd0: V1143 = 0x1
0xcd2: V1144 = 0xa0
0xcd4: V1145 = 0x2
0xcd6: V1146 = EXP 0x2 0xa0
0xcd7: V1147 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcda: V1148 = AND V1134 0xffffffffffffffffffffffffffffffffffffffff
0xcdb: V1149 = 0x4
0xcde: V1150 = ADD V1136 0x4
0xcdf: M[V1150] = V1148
0xce0: V1151 = 0x24
0xce3: V1152 = ADD V1136 0x24
0xce4: M[V1152] = V1124
0xce5: V1153 = 0x44
0xce7: V1154 = ADD 0x44 V1136
0xce8: V1155 = 0x20
0xcea: V1156 = 0x40
0xcec: V1157 = M[0x40]
0xcef: V1158 = SUB V1154 V1157
0xcf1: V1159 = 0x0
0xcf5: V1160 = EXTCODESIZE V1132
0xcf6: V1161 = ISZERO V1160
0xcf7: V1162 = ISZERO V1161
0xcf8: V1163 = 0xd00
0xcfb: JUMPI 0xd00 V1162
---
Entry stack: [V13, 0x1da, V371, 0x0, V371, 0x0, V1085, 0x70a08231, V1105]
Stack pops: 5
Stack additions: [S4, V1124, V1132, 0xa9059cbb, V1154, 0x20, V1157, V1158, V1157, 0x0, V1132]
Exit stack: [V13, 0x1da, V371, 0x0, V371, V1124, V1132, 0xa9059cbb, V1154, 0x20, V1157, V1158, V1157, 0x0, V1132]

================================

Block 0xcfc
[0xcfc:0xcff]
---
Predecessors: [0xc9a]
Successors: []
---
0xcfc PUSH1 0x0
0xcfe DUP1
0xcff REVERT
---
0xcfc: V1164 = 0x0
0xcff: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1da, V371, 0x0, V371, V1124, V1132, 0xa9059cbb, V1154, 0x20, V1157, V1158, V1157, 0x0, V1132]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1da, V371, 0x0, V371, V1124, V1132, 0xa9059cbb, V1154, 0x20, V1157, V1158, V1157, 0x0, V1132]

================================

Block 0xd00
[0xd00:0xd08]
---
Predecessors: [0xc9a]
Successors: [0xd09, 0xd0d]
---
0xd00 JUMPDEST
0xd01 GAS
0xd02 CALL
0xd03 ISZERO
0xd04 ISZERO
0xd05 PUSH2 0xd0d
0xd08 JUMPI
---
0xd00: JUMPDEST 
0xd01: V1165 = GAS
0xd02: V1166 = CALL V1165 V1132 0x0 V1157 V1158 V1157 0x20
0xd03: V1167 = ISZERO V1166
0xd04: V1168 = ISZERO V1167
0xd05: V1169 = 0xd0d
0xd08: JUMPI 0xd0d V1168
---
Entry stack: [V13, 0x1da, V371, 0x0, V371, V1124, V1132, 0xa9059cbb, V1154, 0x20, V1157, V1158, V1157, 0x0, V1132]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x1da, V371, 0x0, V371, V1124, V1132, 0xa9059cbb, V1154]

================================

Block 0xd09
[0xd09:0xd0c]
---
Predecessors: [0xd00]
Successors: []
---
0xd09 PUSH1 0x0
0xd0b DUP1
0xd0c REVERT
---
0xd09: V1170 = 0x0
0xd0c: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1da, V371, 0x0, V371, V1124, V1132, 0xa9059cbb, V1154]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1da, V371, 0x0, V371, V1124, V1132, 0xa9059cbb, V1154]

================================

Block 0xd0d
[0xd0d:0xd1d]
---
Predecessors: [0xd00]
Successors: [0x1da]
---
0xd0d JUMPDEST
0xd0e POP
0xd0f POP
0xd10 POP
0xd11 PUSH1 0x40
0xd13 MLOAD
0xd14 DUP1
0xd15 MLOAD
0xd16 SWAP6
0xd17 SWAP5
0xd18 POP
0xd19 POP
0xd1a POP
0xd1b POP
0xd1c POP
0xd1d JUMP
---
0xd0d: JUMPDEST 
0xd11: V1171 = 0x40
0xd13: V1172 = M[0x40]
0xd15: V1173 = M[V1172]
0xd1d: JUMP 0x1da
---
Entry stack: [V13, 0x1da, V371, 0x0, V371, V1124, V1132, 0xa9059cbb, V1154]
Stack pops: 8
Stack additions: [V1173]
Exit stack: [V13, V1173]

================================

Block 0xd1e
[0xd1e:0xd23]
---
Predecessors: [0x427]
Successors: [0x201]
---
0xd1e JUMPDEST
0xd1f PUSH1 0x5
0xd21 SLOAD
0xd22 DUP2
0xd23 JUMP
---
0xd1e: JUMPDEST 
0xd1f: V1174 = 0x5
0xd21: V1175 = S[0x5]
0xd23: JUMP 0x201
---
Entry stack: [V13, 0x201]
Stack pops: 1
Stack additions: [S0, V1175]
Exit stack: [V13, 0x201, V1175]

================================

Block 0xd24
[0xd24:0xd3a]
---
Predecessors: [0x43a]
Successors: [0xd3b, 0xd3f]
---
0xd24 JUMPDEST
0xd25 PUSH1 0x1
0xd27 SLOAD
0xd28 CALLER
0xd29 PUSH1 0x1
0xd2b PUSH1 0xa0
0xd2d PUSH1 0x2
0xd2f EXP
0xd30 SUB
0xd31 SWAP1
0xd32 DUP2
0xd33 AND
0xd34 SWAP2
0xd35 AND
0xd36 EQ
0xd37 PUSH2 0xd3f
0xd3a JUMPI
---
0xd24: JUMPDEST 
0xd25: V1176 = 0x1
0xd27: V1177 = S[0x1]
0xd28: V1178 = CALLER
0xd29: V1179 = 0x1
0xd2b: V1180 = 0xa0
0xd2d: V1181 = 0x2
0xd2f: V1182 = EXP 0x2 0xa0
0xd30: V1183 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd33: V1184 = AND 0xffffffffffffffffffffffffffffffffffffffff V1178
0xd35: V1185 = AND V1177 0xffffffffffffffffffffffffffffffffffffffff
0xd36: V1186 = EQ V1185 V1184
0xd37: V1187 = 0xd3f
0xd3a: JUMPI 0xd3f V1186
---
Entry stack: [V13, 0x12c, V391]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12c, V391]

================================

Block 0xd3b
[0xd3b:0xd3e]
---
Predecessors: [0xd24]
Successors: []
---
0xd3b PUSH1 0x0
0xd3d DUP1
0xd3e REVERT
---
0xd3b: V1188 = 0x0
0xd3e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12c, V391]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12c, V391]

================================

Block 0xd3f
[0xd3f:0xd4e]
---
Predecessors: [0xd24]
Successors: [0x909, 0xd4f]
---
0xd3f JUMPDEST
0xd40 PUSH1 0x1
0xd42 PUSH1 0xa0
0xd44 PUSH1 0x2
0xd46 EXP
0xd47 SUB
0xd48 DUP2
0xd49 AND
0xd4a ISZERO
0xd4b PUSH2 0x909
0xd4e JUMPI
---
0xd3f: JUMPDEST 
0xd40: V1189 = 0x1
0xd42: V1190 = 0xa0
0xd44: V1191 = 0x2
0xd46: V1192 = EXP 0x2 0xa0
0xd47: V1193 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd49: V1194 = AND V391 0xffffffffffffffffffffffffffffffffffffffff
0xd4a: V1195 = ISZERO V1194
0xd4b: V1196 = 0x909
0xd4e: JUMPI 0x909 V1195
---
Entry stack: [V13, 0x12c, V391]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x12c, V391]

================================

Block 0xd4f
[0xd4f:0xd7a]
---
Predecessors: [0xd3f]
Successors: [0x12c]
---
0xd4f PUSH1 0x1
0xd51 DUP1
0xd52 SLOAD
0xd53 PUSH1 0x1
0xd55 PUSH1 0xa0
0xd57 PUSH1 0x2
0xd59 EXP
0xd5a SUB
0xd5b DUP4
0xd5c AND
0xd5d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd72 NOT
0xd73 SWAP1
0xd74 SWAP2
0xd75 AND
0xd76 OR
0xd77 SWAP1
0xd78 SSTORE
0xd79 POP
0xd7a JUMP
---
0xd4f: V1197 = 0x1
0xd52: V1198 = S[0x1]
0xd53: V1199 = 0x1
0xd55: V1200 = 0xa0
0xd57: V1201 = 0x2
0xd59: V1202 = EXP 0x2 0xa0
0xd5a: V1203 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd5c: V1204 = AND V391 0xffffffffffffffffffffffffffffffffffffffff
0xd5d: V1205 = 0xffffffffffffffffffffffffffffffffffffffff
0xd72: V1206 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xd75: V1207 = AND V1198 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0xd76: V1208 = OR V1207 V1204
0xd78: S[0x1] = V1208
0xd7a: JUMP 0x12c
---
Entry stack: [V13, 0x12c, V391]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0xd7b
[0xd7b:0xd84]
---
Predecessors: [0x487]
Successors: [0xd85, 0xd8c]
---
0xd7b JUMPDEST
0xd7c PUSH1 0x0
0xd7e DUP3
0xd7f ISZERO
0xd80 ISZERO
0xd81 PUSH2 0xd8c
0xd84 JUMPI
---
0xd7b: JUMPDEST 
0xd7c: V1209 = 0x0
0xd7f: V1210 = ISZERO V414
0xd80: V1211 = ISZERO V1210
0xd81: V1212 = 0xd8c
0xd84: JUMPI 0xd8c V1211
---
Entry stack: [V13, 0x12c, 0x0, 0x0, 0xde0b6b3a7640000, 0x4a4, V414, V417]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V13, 0x12c, 0x0, 0x0, 0xde0b6b3a7640000, 0x4a4, V414, V417, 0x0]

================================

Block 0xd85
[0xd85:0xd8b]
---
Predecessors: [0xd7b]
Successors: [0x5c2]
---
0xd85 POP
0xd86 PUSH1 0x0
0xd88 PUSH2 0x5c2
0xd8b JUMP
---
0xd86: V1213 = 0x0
0xd88: V1214 = 0x5c2
0xd8b: JUMP 0x5c2
---
Entry stack: [V13, 0x12c, 0x0, 0x0, 0xde0b6b3a7640000, 0x4a4, V414, V417, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V13, 0x12c, 0x0, 0x0, 0xde0b6b3a7640000, 0x4a4, V414, V417, 0x0]

================================

Block 0xd8c
[0xd8c:0xd9a]
---
Predecessors: [0xd7b]
Successors: [0xd9b, 0xd9c]
---
0xd8c JUMPDEST
0xd8d POP
0xd8e DUP2
0xd8f DUP2
0xd90 MUL
0xd91 DUP2
0xd92 DUP4
0xd93 DUP3
0xd94 DUP2
0xd95 ISZERO
0xd96 ISZERO
0xd97 PUSH2 0xd9c
0xd9a JUMPI
---
0xd8c: JUMPDEST 
0xd90: V1215 = MUL V417 V414
0xd95: V1216 = ISZERO V414
0xd96: V1217 = ISZERO V1216
0xd97: V1218 = 0xd9c
0xd9a: JUMPI 0xd9c V1217
---
Entry stack: [V13, 0x12c, 0x0, 0x0, 0xde0b6b3a7640000, 0x4a4, V414, V417, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V1215, S1, S2, V1215]
Exit stack: [V13, 0x12c, 0x0, 0x0, 0xde0b6b3a7640000, 0x4a4, V414, V417, V1215, V417, V414, V1215]

================================

Block 0xd9b
[0xd9b:0xd9b]
---
Predecessors: [0xd8c]
Successors: []
---
0xd9b INVALID
---
0xd9b: INVALID 
---
Entry stack: [V13, 0x12c, 0x0, 0x0, 0xde0b6b3a7640000, 0x4a4, V414, V417, V1215, V417, V414, V1215]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12c, 0x0, 0x0, 0xde0b6b3a7640000, 0x4a4, V414, V417, V1215, V417, V414, V1215]

================================

Block 0xd9c
[0xd9c:0xda2]
---
Predecessors: [0xd8c]
Successors: [0x5c2, 0xda3]
---
0xd9c JUMPDEST
0xd9d DIV
0xd9e EQ
0xd9f PUSH2 0x5c2
0xda2 JUMPI
---
0xd9c: JUMPDEST 
0xd9d: V1219 = DIV V1215 V414
0xd9e: V1220 = EQ V1219 V417
0xd9f: V1221 = 0x5c2
0xda2: JUMPI 0x5c2 V1220
---
Entry stack: [V13, 0x12c, 0x0, 0x0, 0xde0b6b3a7640000, 0x4a4, V414, V417, V1215, V417, V414, V1215]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x12c, 0x0, 0x0, 0xde0b6b3a7640000, 0x4a4, V414, V417, V1215]

================================

Block 0xda3
[0xda3:0xda3]
---
Predecessors: [0xd9c]
Successors: []
---
0xda3 INVALID
---
0xda3: INVALID 
---
Entry stack: [V13, 0x12c, 0x0, 0x0, 0xde0b6b3a7640000, 0x4a4, V414, V417, V1215]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12c, 0x0, 0x0, 0xde0b6b3a7640000, 0x4a4, V414, V417, V1215]

================================

Block 0xda4
[0xda4:0xdb2]
---
Predecessors: [0x4bd, 0x8ca]
Successors: [0xdb3, 0xdb7]
---
0xda4 JUMPDEST
0xda5 PUSH1 0x7
0xda7 SLOAD
0xda8 PUSH1 0x0
0xdaa SWAP1
0xdab PUSH1 0xff
0xdad AND
0xdae ISZERO
0xdaf PUSH2 0xdb7
0xdb2 JUMPI
---
0xda4: JUMPDEST 
0xda5: V1222 = 0x7
0xda7: V1223 = S[0x7]
0xda8: V1224 = 0x0
0xdab: V1225 = 0xff
0xdad: V1226 = AND 0xff V1223
0xdae: V1227 = ISZERO V1226
0xdaf: V1228 = 0xdb7
0xdb2: JUMPI 0xdb7 V1227
---
Entry stack: [V13, S8, S7, S6, S5, S4, S3, {0x4c6, 0x909}, S1, S0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, S8, S7, S6, S5, S4, S3, {0x4c6, 0x909}, S1, S0, 0x0]

================================

Block 0xdb3
[0xdb3:0xdb6]
---
Predecessors: [0xda4]
Successors: []
---
0xdb3 PUSH1 0x0
0xdb5 DUP1
0xdb6 REVERT
---
0xdb3: V1229 = 0x0
0xdb6: REVERT 0x0 0x0
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, {0x4c6, 0x909}, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S9, S8, S7, S6, S5, S4, {0x4c6, 0x909}, S2, S1, 0x0]

================================

Block 0xdb7
[0xdb7:0xdc9]
---
Predecessors: [0xda4]
Successors: [0xe90]
---
0xdb7 JUMPDEST
0xdb8 PUSH1 0x5
0xdba SLOAD
0xdbb PUSH2 0xdca
0xdbe SWAP1
0xdbf DUP4
0xdc0 PUSH4 0xffffffff
0xdc5 PUSH2 0xe90
0xdc8 AND
0xdc9 JUMP
---
0xdb7: JUMPDEST 
0xdb8: V1230 = 0x5
0xdba: V1231 = S[0x5]
0xdbb: V1232 = 0xdca
0xdc0: V1233 = 0xffffffff
0xdc5: V1234 = 0xe90
0xdc8: V1235 = AND 0xe90 0xffffffff
0xdc9: JUMP 0xe90
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, {0x4c6, 0x909}, S2, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0xdca, V1231, S1]
Exit stack: [V13, S9, S8, S7, S6, S5, S4, {0x4c6, 0x909}, S2, S1, 0x0, 0xdca, V1231, S1]

================================

Block 0xdca
[0xdca:0xdf5]
---
Predecessors: [0x5c2]
Successors: [0xe90]
---
0xdca JUMPDEST
0xdcb PUSH1 0x5
0xdcd SSTORE
0xdce PUSH1 0x1
0xdd0 PUSH1 0xa0
0xdd2 PUSH1 0x2
0xdd4 EXP
0xdd5 SUB
0xdd6 DUP4
0xdd7 AND
0xdd8 PUSH1 0x0
0xdda SWAP1
0xddb DUP2
0xddc MSTORE
0xddd PUSH1 0x2
0xddf PUSH1 0x20
0xde1 MSTORE
0xde2 PUSH1 0x40
0xde4 SWAP1
0xde5 SHA3
0xde6 SLOAD
0xde7 PUSH2 0xdf6
0xdea SWAP1
0xdeb DUP4
0xdec PUSH4 0xffffffff
0xdf1 PUSH2 0xe90
0xdf4 AND
0xdf5 JUMP
---
0xdca: JUMPDEST 
0xdcb: V1236 = 0x5
0xdcd: S[0x5] = S0
0xdce: V1237 = 0x1
0xdd0: V1238 = 0xa0
0xdd2: V1239 = 0x2
0xdd4: V1240 = EXP 0x2 0xa0
0xdd5: V1241 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdd7: V1242 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0xdd8: V1243 = 0x0
0xddc: M[0x0] = V1242
0xddd: V1244 = 0x2
0xddf: V1245 = 0x20
0xde1: M[0x20] = 0x2
0xde2: V1246 = 0x40
0xde5: V1247 = SHA3 0x0 0x40
0xde6: V1248 = S[V1247]
0xde7: V1249 = 0xdf6
0xdec: V1250 = 0xffffffff
0xdf1: V1251 = 0xe90
0xdf4: V1252 = AND 0xe90 0xffffffff
0xdf5: JUMP 0xe90
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, 0xdf6, V1248, S2]
Exit stack: [V13, S7, S6, S5, S4, S3, S2, S1, 0xdf6, V1248, S2]

================================

Block 0xdf6
[0xdf6:0xe7d]
---
Predecessors: [0x5c2]
Successors: [0x12c, 0x4c6, 0x909]
---
0xdf6 JUMPDEST
0xdf7 PUSH1 0x1
0xdf9 PUSH1 0xa0
0xdfb PUSH1 0x2
0xdfd EXP
0xdfe SUB
0xdff DUP5
0xe00 AND
0xe01 PUSH1 0x0
0xe03 DUP2
0xe04 DUP2
0xe05 MSTORE
0xe06 PUSH1 0x2
0xe08 PUSH1 0x20
0xe0a MSTORE
0xe0b PUSH1 0x40
0xe0d SWAP1
0xe0e DUP2
0xe0f SWAP1
0xe10 SHA3
0xe11 SWAP3
0xe12 SWAP1
0xe13 SWAP3
0xe14 SSTORE
0xe15 SWAP1
0xe16 PUSH32 0x8940c4b8e215f8822c5c8f0056c12652c746cbc57eedbd2a440b175971d47a77
0xe37 SWAP1
0xe38 DUP5
0xe39 SWAP1
0xe3a MLOAD
0xe3b SWAP1
0xe3c DUP2
0xe3d MSTORE
0xe3e PUSH1 0x20
0xe40 ADD
0xe41 PUSH1 0x40
0xe43 MLOAD
0xe44 DUP1
0xe45 SWAP2
0xe46 SUB
0xe47 SWAP1
0xe48 LOG2
0xe49 PUSH1 0x1
0xe4b PUSH1 0xa0
0xe4d PUSH1 0x2
0xe4f EXP
0xe50 SUB
0xe51 DUP4
0xe52 AND
0xe53 PUSH1 0x0
0xe55 PUSH1 0x0
0xe57 DUP1
0xe58 MLOAD
0xe59 PUSH1 0x20
0xe5b PUSH2 0xfc0
0xe5e DUP4
0xe5f CODECOPY
0xe60 DUP2
0xe61 MLOAD
0xe62 SWAP2
0xe63 MSTORE
0xe64 DUP5
0xe65 PUSH1 0x40
0xe67 MLOAD
0xe68 SWAP1
0xe69 DUP2
0xe6a MSTORE
0xe6b PUSH1 0x20
0xe6d ADD
0xe6e PUSH1 0x40
0xe70 MLOAD
0xe71 DUP1
0xe72 SWAP2
0xe73 SUB
0xe74 SWAP1
0xe75 LOG3
0xe76 POP
0xe77 PUSH1 0x1
0xe79 SWAP3
0xe7a SWAP2
0xe7b POP
0xe7c POP
0xe7d JUMP
---
0xdf6: JUMPDEST 
0xdf7: V1253 = 0x1
0xdf9: V1254 = 0xa0
0xdfb: V1255 = 0x2
0xdfd: V1256 = EXP 0x2 0xa0
0xdfe: V1257 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe00: V1258 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0xe01: V1259 = 0x0
0xe05: M[0x0] = V1258
0xe06: V1260 = 0x2
0xe08: V1261 = 0x20
0xe0a: M[0x20] = 0x2
0xe0b: V1262 = 0x40
0xe10: V1263 = SHA3 0x0 0x40
0xe14: S[V1263] = S0
0xe16: V1264 = 0x8940c4b8e215f8822c5c8f0056c12652c746cbc57eedbd2a440b175971d47a77
0xe3a: V1265 = M[0x40]
0xe3d: M[V1265] = S2
0xe3e: V1266 = 0x20
0xe40: V1267 = ADD 0x20 V1265
0xe41: V1268 = 0x40
0xe43: V1269 = M[0x40]
0xe46: V1270 = SUB V1267 V1269
0xe48: LOG V1269 V1270 0x8940c4b8e215f8822c5c8f0056c12652c746cbc57eedbd2a440b175971d47a77 V1258
0xe49: V1271 = 0x1
0xe4b: V1272 = 0xa0
0xe4d: V1273 = 0x2
0xe4f: V1274 = EXP 0x2 0xa0
0xe50: V1275 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe52: V1276 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0xe53: V1277 = 0x0
0xe55: V1278 = 0x0
0xe58: V1279 = M[0x0]
0xe59: V1280 = 0x20
0xe5b: V1281 = 0xfc0
0xe5f: CODECOPY 0x0 0xfc0 0x20
0xe61: V1282 = M[0x0]
0xe63: M[0x0] = V1279
0xe65: V1283 = 0x40
0xe67: V1284 = M[0x40]
0xe6a: M[V1284] = S2
0xe6b: V1285 = 0x20
0xe6d: V1286 = ADD 0x20 V1284
0xe6e: V1287 = 0x40
0xe70: V1288 = M[0x40]
0xe73: V1289 = SUB V1286 V1288
0xe75: LOG V1288 V1289 V1282 0x0 V1276
0xe77: V1290 = 0x1
0xe7d: JUMP S4
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [0x1]
Exit stack: [V13, S7, S6, S5, 0x1]

================================

Block 0xe7e
[0xe7e:0xe88]
---
Predecessors: [0x64a, 0x673, 0x7fa, 0x81f, 0x84b, 0xac1]
Successors: [0xe89, 0xe8a]
---
0xe7e JUMPDEST
0xe7f PUSH1 0x0
0xe81 DUP3
0xe82 DUP3
0xe83 GT
0xe84 ISZERO
0xe85 PUSH2 0xe8a
0xe88 JUMPI
---
0xe7e: JUMPDEST 
0xe7f: V1291 = 0x0
0xe83: V1292 = GT S0 S1
0xe84: V1293 = ISZERO V1292
0xe85: V1294 = 0xe8a
0xe88: JUMPI 0xe8a V1293
---
Entry stack: [V13, S8, S7, S6, S5, S4, S3, {0x673, 0x6b6, 0x81f, 0x84b, 0x861, 0xaea}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V13, S8, S7, S6, S5, S4, S3, {0x673, 0x6b6, 0x81f, 0x84b, 0x861, 0xaea}, S1, S0, 0x0]

================================

Block 0xe89
[0xe89:0xe89]
---
Predecessors: [0xe7e]
Successors: []
---
0xe89 INVALID
---
0xe89: INVALID 
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, {0x673, 0x6b6, 0x81f, 0x84b, 0x861, 0xaea}, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S9, S8, S7, S6, S5, S4, {0x673, 0x6b6, 0x81f, 0x84b, 0x861, 0xaea}, S2, S1, 0x0]

================================

Block 0xe8a
[0xe8a:0xe8f]
---
Predecessors: [0xe7e]
Successors: [0x673, 0x6b6, 0x81f, 0x84b, 0x861, 0xaea]
---
0xe8a JUMPDEST
0xe8b POP
0xe8c SWAP1
0xe8d SUB
0xe8e SWAP1
0xe8f JUMP
---
0xe8a: JUMPDEST 
0xe8d: V1295 = SUB S2 S1
0xe8f: JUMP {0x673, 0x6b6, 0x81f, 0x84b, 0x861, 0xaea}
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, {0x673, 0x6b6, 0x81f, 0x84b, 0x861, 0xaea}, S2, S1, 0x0]
Stack pops: 4
Stack additions: [V1295]
Exit stack: [V13, S9, S8, S7, S6, S5, S4, V1295]

================================

Block 0xe90
[0xe90:0xe9b]
---
Predecessors: [0x6b6, 0xaea, 0xdb7, 0xdca, 0xec8, 0xef1]
Successors: [0x5c2, 0xe9c]
---
0xe90 JUMPDEST
0xe91 DUP2
0xe92 DUP2
0xe93 ADD
0xe94 DUP3
0xe95 DUP2
0xe96 LT
0xe97 ISZERO
0xe98 PUSH2 0x5c2
0xe9b JUMPI
---
0xe90: JUMPDEST 
0xe93: V1296 = ADD S0 S1
0xe96: V1297 = LT V1296 S1
0xe97: V1298 = ISZERO V1297
0xe98: V1299 = 0x5c2
0xe9b: JUMPI 0x5c2 V1298
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, S3, {0x6fc, 0xb1f, 0xdca, 0xdf6, 0xef1, 0xf1d}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V1296]
Exit stack: [V13, S9, S8, S7, S6, S5, S4, S3, {0x6fc, 0xb1f, 0xdca, 0xdf6, 0xef1, 0xf1d}, S1, S0, V1296]

================================

Block 0xe9c
[0xe9c:0xe9c]
---
Predecessors: [0xe90]
Successors: []
---
0xe9c INVALID
---
0xe9c: INVALID 
---
Entry stack: [V13, S10, S9, S8, S7, S6, S5, S4, {0x6fc, 0xb1f, 0xdca, 0xdf6, 0xef1, 0xf1d}, S2, S1, V1296]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S10, S9, S8, S7, S6, S5, S4, {0x6fc, 0xb1f, 0xdca, 0xdf6, 0xef1, 0xf1d}, S2, S1, V1296]

================================

Block 0xe9d
[0xe9d:0xea5]
---
Predecessors: [0x8c0, 0x946]
Successors: [0xea6, 0xeaa]
---
0xe9d JUMPDEST
0xe9e PUSH1 0x0
0xea0 DUP2
0xea1 GT
0xea2 PUSH2 0xeaa
0xea5 JUMPI
---
0xe9d: JUMPDEST 
0xe9e: V1300 = 0x0
0xea1: V1301 = GT S0 0x0
0xea2: V1302 = 0xeaa
0xea5: JUMPI 0xeaa V1301
---
Entry stack: [V13, S6, S5, S4, S3, {0x4e1, 0x956}, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, S6, S5, S4, S3, {0x4e1, 0x956}, S1, S0]

================================

Block 0xea6
[0xea6:0xea9]
---
Predecessors: [0xe9d]
Successors: []
---
0xea6 PUSH1 0x0
0xea8 DUP1
0xea9 REVERT
---
0xea6: V1303 = 0x0
0xea9: REVERT 0x0 0x0
---
Entry stack: [V13, S6, S5, S4, S3, {0x4e1, 0x956}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S6, S5, S4, S3, {0x4e1, 0x956}, S1, S0]

================================

Block 0xeaa
[0xeaa:0xeb3]
---
Predecessors: [0xe9d]
Successors: [0xeb4, 0xeb8]
---
0xeaa JUMPDEST
0xeab PUSH1 0x4
0xead SLOAD
0xeae DUP2
0xeaf LT
0xeb0 PUSH2 0xeb8
0xeb3 JUMPI
---
0xeaa: JUMPDEST 
0xeab: V1304 = 0x4
0xead: V1305 = S[0x4]
0xeaf: V1306 = LT S0 V1305
0xeb0: V1307 = 0xeb8
0xeb3: JUMPI 0xeb8 V1306
---
Entry stack: [V13, S6, S5, S4, S3, {0x4e1, 0x956}, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, S6, S5, S4, S3, {0x4e1, 0x956}, S1, S0]

================================

Block 0xeb4
[0xeb4:0xeb7]
---
Predecessors: [0xeaa]
Successors: []
---
0xeb4 PUSH1 0x0
0xeb6 DUP1
0xeb7 REVERT
---
0xeb4: V1308 = 0x0
0xeb7: REVERT 0x0 0x0
---
Entry stack: [V13, S6, S5, S4, S3, {0x4e1, 0x956}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S6, S5, S4, S3, {0x4e1, 0x956}, S1, S0]

================================

Block 0xeb8
[0xeb8:0xec3]
---
Predecessors: [0xeaa]
Successors: [0xec4, 0xec8]
---
0xeb8 JUMPDEST
0xeb9 PUSH1 0x4
0xebb SLOAD
0xebc PUSH1 0x5
0xebe SLOAD
0xebf LT
0xec0 PUSH2 0xec8
0xec3 JUMPI
---
0xeb8: JUMPDEST 
0xeb9: V1309 = 0x4
0xebb: V1310 = S[0x4]
0xebc: V1311 = 0x5
0xebe: V1312 = S[0x5]
0xebf: V1313 = LT V1312 V1310
0xec0: V1314 = 0xec8
0xec3: JUMPI 0xec8 V1313
---
Entry stack: [V13, S6, S5, S4, S3, {0x4e1, 0x956}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S6, S5, S4, S3, {0x4e1, 0x956}, S1, S0]

================================

Block 0xec4
[0xec4:0xec7]
---
Predecessors: [0xeb8]
Successors: []
---
0xec4 PUSH1 0x0
0xec6 DUP1
0xec7 REVERT
---
0xec4: V1315 = 0x0
0xec7: REVERT 0x0 0x0
---
Entry stack: [V13, S6, S5, S4, S3, {0x4e1, 0x956}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S6, S5, S4, S3, {0x4e1, 0x956}, S1, S0]

================================

Block 0xec8
[0xec8:0xef0]
---
Predecessors: [0xeb8]
Successors: [0xe90]
---
0xec8 JUMPDEST
0xec9 PUSH1 0x1
0xecb PUSH1 0xa0
0xecd PUSH1 0x2
0xecf EXP
0xed0 SUB
0xed1 DUP3
0xed2 AND
0xed3 PUSH1 0x0
0xed5 SWAP1
0xed6 DUP2
0xed7 MSTORE
0xed8 PUSH1 0x2
0xeda PUSH1 0x20
0xedc MSTORE
0xedd PUSH1 0x40
0xedf SWAP1
0xee0 SHA3
0xee1 SLOAD
0xee2 PUSH2 0xef1
0xee5 SWAP1
0xee6 DUP3
0xee7 PUSH4 0xffffffff
0xeec PUSH2 0xe90
0xeef AND
0xef0 JUMP
---
0xec8: JUMPDEST 
0xec9: V1316 = 0x1
0xecb: V1317 = 0xa0
0xecd: V1318 = 0x2
0xecf: V1319 = EXP 0x2 0xa0
0xed0: V1320 = SUB 0x10000000000000000000000000000000000000000 0x1
0xed2: V1321 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0xed3: V1322 = 0x0
0xed7: M[0x0] = V1321
0xed8: V1323 = 0x2
0xeda: V1324 = 0x20
0xedc: M[0x20] = 0x2
0xedd: V1325 = 0x40
0xee0: V1326 = SHA3 0x0 0x40
0xee1: V1327 = S[V1326]
0xee2: V1328 = 0xef1
0xee7: V1329 = 0xffffffff
0xeec: V1330 = 0xe90
0xeef: V1331 = AND 0xe90 0xffffffff
0xef0: JUMP 0xe90
---
Entry stack: [V13, S6, S5, S4, S3, {0x4e1, 0x956}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0xef1, V1327, S0]
Exit stack: [V13, S6, S5, S4, S3, {0x4e1, 0x956}, S1, S0, 0xef1, V1327, S0]

================================

Block 0xef1
[0xef1:0xf1c]
---
Predecessors: [0x5c2]
Successors: [0xe90]
---
0xef1 JUMPDEST
0xef2 PUSH1 0x1
0xef4 PUSH1 0xa0
0xef6 PUSH1 0x2
0xef8 EXP
0xef9 SUB
0xefa DUP4
0xefb AND
0xefc PUSH1 0x0
0xefe SWAP1
0xeff DUP2
0xf00 MSTORE
0xf01 PUSH1 0x2
0xf03 PUSH1 0x20
0xf05 MSTORE
0xf06 PUSH1 0x40
0xf08 SWAP1
0xf09 SHA3
0xf0a SSTORE
0xf0b PUSH1 0x5
0xf0d SLOAD
0xf0e PUSH2 0xf1d
0xf11 SWAP1
0xf12 DUP3
0xf13 PUSH4 0xffffffff
0xf18 PUSH2 0xe90
0xf1b AND
0xf1c JUMP
---
0xef1: JUMPDEST 
0xef2: V1332 = 0x1
0xef4: V1333 = 0xa0
0xef6: V1334 = 0x2
0xef8: V1335 = EXP 0x2 0xa0
0xef9: V1336 = SUB 0x10000000000000000000000000000000000000000 0x1
0xefb: V1337 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xefc: V1338 = 0x0
0xf00: M[0x0] = V1337
0xf01: V1339 = 0x2
0xf03: V1340 = 0x20
0xf05: M[0x20] = 0x2
0xf06: V1341 = 0x40
0xf09: V1342 = SHA3 0x0 0x40
0xf0a: S[V1342] = S0
0xf0b: V1343 = 0x5
0xf0d: V1344 = S[0x5]
0xf0e: V1345 = 0xf1d
0xf13: V1346 = 0xffffffff
0xf18: V1347 = 0xe90
0xf1b: V1348 = AND 0xe90 0xffffffff
0xf1c: JUMP 0xe90
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, 0xf1d, V1344, S1]
Exit stack: [V13, S7, S6, S5, S4, S3, S2, S1, 0xf1d, V1344, S1]

================================

Block 0xf1d
[0xf1d:0xf2b]
---
Predecessors: [0x5c2]
Successors: [0xf2c, 0xf39]
---
0xf1d JUMPDEST
0xf1e PUSH1 0x5
0xf20 DUP2
0xf21 SWAP1
0xf22 SSTORE
0xf23 PUSH1 0x4
0xf25 SLOAD
0xf26 SWAP1
0xf27 LT
0xf28 PUSH2 0xf39
0xf2b JUMPI
---
0xf1d: JUMPDEST 
0xf1e: V1349 = 0x5
0xf22: S[0x5] = S0
0xf23: V1350 = 0x4
0xf25: V1351 = S[0x4]
0xf27: V1352 = LT S0 V1351
0xf28: V1353 = 0xf39
0xf2b: JUMPI 0xf39 V1352
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0xf2c
[0xf2c:0xf38]
---
Predecessors: [0xf1d]
Successors: [0xf39]
---
0xf2c PUSH1 0x7
0xf2e DUP1
0xf2f SLOAD
0xf30 PUSH1 0xff
0xf32 NOT
0xf33 AND
0xf34 PUSH1 0x1
0xf36 OR
0xf37 SWAP1
0xf38 SSTORE
---
0xf2c: V1354 = 0x7
0xf2f: V1355 = S[0x7]
0xf30: V1356 = 0xff
0xf32: V1357 = NOT 0xff
0xf33: V1358 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1355
0xf34: V1359 = 0x1
0xf36: V1360 = OR 0x1 V1358
0xf38: S[0x7] = V1360
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xf39
[0xf39:0xfbe]
---
Predecessors: [0xf1d, 0xf2c]
Successors: [0x4e1, 0x956]
---
0xf39 JUMPDEST
0xf3a PUSH1 0x1
0xf3c PUSH1 0xa0
0xf3e PUSH1 0x2
0xf40 EXP
0xf41 SUB
0xf42 DUP3
0xf43 AND
0xf44 PUSH1 0x0
0xf46 DUP2
0xf47 DUP2
0xf48 MSTORE
0xf49 PUSH1 0x2
0xf4b PUSH1 0x20
0xf4d MSTORE
0xf4e PUSH1 0x40
0xf50 SWAP1
0xf51 DUP2
0xf52 SWAP1
0xf53 SHA3
0xf54 SLOAD
0xf55 PUSH32 0xada993ad066837289fe186cd37227aa338d27519a8a1547472ecb9831486d272
0xf76 SWAP2
0xf77 DUP5
0xf78 SWAP2
0xf79 SWAP1
0xf7a MLOAD
0xf7b SWAP2
0xf7c DUP3
0xf7d MSTORE
0xf7e PUSH1 0x20
0xf80 DUP3
0xf81 ADD
0xf82 MSTORE
0xf83 PUSH1 0x40
0xf85 SWAP1
0xf86 DUP2
0xf87 ADD
0xf88 SWAP1
0xf89 MLOAD
0xf8a DUP1
0xf8b SWAP2
0xf8c SUB
0xf8d SWAP1
0xf8e LOG2
0xf8f PUSH1 0x1
0xf91 PUSH1 0xa0
0xf93 PUSH1 0x2
0xf95 EXP
0xf96 SUB
0xf97 DUP3
0xf98 AND
0xf99 PUSH1 0x0
0xf9b PUSH1 0x0
0xf9d DUP1
0xf9e MLOAD
0xf9f PUSH1 0x20
0xfa1 PUSH2 0xfc0
0xfa4 DUP4
0xfa5 CODECOPY
0xfa6 DUP2
0xfa7 MLOAD
0xfa8 SWAP2
0xfa9 MSTORE
0xfaa DUP4
0xfab PUSH1 0x40
0xfad MLOAD
0xfae SWAP1
0xfaf DUP2
0xfb0 MSTORE
0xfb1 PUSH1 0x20
0xfb3 ADD
0xfb4 PUSH1 0x40
0xfb6 MLOAD
0xfb7 DUP1
0xfb8 SWAP2
0xfb9 SUB
0xfba SWAP1
0xfbb LOG3
0xfbc POP
0xfbd POP
0xfbe JUMP
---
0xf39: JUMPDEST 
0xf3a: V1361 = 0x1
0xf3c: V1362 = 0xa0
0xf3e: V1363 = 0x2
0xf40: V1364 = EXP 0x2 0xa0
0xf41: V1365 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf43: V1366 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0xf44: V1367 = 0x0
0xf48: M[0x0] = V1366
0xf49: V1368 = 0x2
0xf4b: V1369 = 0x20
0xf4d: M[0x20] = 0x2
0xf4e: V1370 = 0x40
0xf53: V1371 = SHA3 0x0 0x40
0xf54: V1372 = S[V1371]
0xf55: V1373 = 0xada993ad066837289fe186cd37227aa338d27519a8a1547472ecb9831486d272
0xf7a: V1374 = M[0x40]
0xf7d: M[V1374] = S0
0xf7e: V1375 = 0x20
0xf81: V1376 = ADD V1374 0x20
0xf82: M[V1376] = V1372
0xf83: V1377 = 0x40
0xf87: V1378 = ADD 0x40 V1374
0xf89: V1379 = M[0x40]
0xf8c: V1380 = SUB V1378 V1379
0xf8e: LOG V1379 V1380 0xada993ad066837289fe186cd37227aa338d27519a8a1547472ecb9831486d272 V1366
0xf8f: V1381 = 0x1
0xf91: V1382 = 0xa0
0xf93: V1383 = 0x2
0xf95: V1384 = EXP 0x2 0xa0
0xf96: V1385 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf98: V1386 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0xf99: V1387 = 0x0
0xf9b: V1388 = 0x0
0xf9e: V1389 = M[0x0]
0xf9f: V1390 = 0x20
0xfa1: V1391 = 0xfc0
0xfa5: CODECOPY 0x0 0xfc0 0x20
0xfa7: V1392 = M[0x0]
0xfa9: M[0x0] = V1389
0xfab: V1393 = 0x40
0xfad: V1394 = M[0x40]
0xfb0: M[V1394] = S0
0xfb1: V1395 = 0x20
0xfb3: V1396 = ADD 0x20 V1394
0xfb4: V1397 = 0x40
0xfb6: V1398 = M[0x40]
0xfb9: V1399 = SUB V1396 V1398
0xfbb: LOG V1398 V1399 V1392 0x0 V1386
0xfbe: JUMP S2
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V13, S6, S5, S4, S3]

================================

Block 0xfbf
[0xfbf:0x100a]
---
Predecessors: []
Successors: []
---
0xfbf STOP
0xfc0 MISSING 0xdd
0xfc1 CALLCODE
0xfc2 MSTORE
0xfc3 MISSING 0xad
0xfc4 SHL
0xfc5 MISSING 0xe2
0xfc6 MISSING 0xc8
0xfc7 SWAP12
0xfc8 PUSH10 0xc2b068fc378daa952ba7
0xfd3 CALL
0xfd4 PUSH4 0xc4a11628
0xfd9 CREATE2
0xfda GAS
0xfdb MISSING 0x4d
0xfdc CREATE2
0xfdd MISSING 0x23
0xfde MISSING 0xb3
0xfdf MISSING 0xef
0xfe0 LOG1
0xfe1 PUSH6 0x627a7a723058
0xfe8 SHA3
0xfe9 SWAP15
0xfea ORIGIN
0xfeb MISSING 0xec
0xfec LT
0xfed EQ
0xfee PUSH11 0xcd6063f4913f91461387e2
0xffa MISSING 0xc8
0xffb MULMOD
0xffc MISSING 0xf
0xffd MLOAD
0xffe MISSING 0xad
0xfff SMOD
0x1000 RETURN
0x1001 EXP
0x1002 MISSING 0xab
0x1003 MISSING 0x22
0x1004 MISSING 0x2b
0x1005 SHL
0x1006 MISSING 0xc3
0x1007 CALLVALUE
0x1008 MISSING 0xbe
0x1009 STOP
0x100a MISSING 0x29
---
0xfbf: STOP 
0xfc0: MISSING 0xdd
0xfc1: V1400 = CALLCODE S0 S1 S2 S3 S4 S5 S6
0xfc2: M[V1400] = S7
0xfc3: MISSING 0xad
0xfc4: V1401 = SHL S0 S1
0xfc5: MISSING 0xe2
0xfc6: MISSING 0xc8
0xfc8: V1402 = 0xc2b068fc378daa952ba7
0xfd3: V1403 = CALL 0xc2b068fc378daa952ba7 S12 S1 S2 S3 S4 S5
0xfd4: V1404 = 0xc4a11628
0xfd9: V1405 = CREATE2 0xc4a11628 V1403 S6 S7
0xfda: V1406 = GAS
0xfdb: MISSING 0x4d
0xfdc: V1407 = CREATE2 S0 S1 S2 S3
0xfdd: MISSING 0x23
0xfde: MISSING 0xb3
0xfdf: MISSING 0xef
0xfe0: LOG S0 S1 S2
0xfe1: V1408 = 0x627a7a723058
0xfe8: V1409 = SHA3 0x627a7a723058 S3
0xfea: V1410 = ORIGIN
0xfeb: MISSING 0xec
0xfec: V1411 = LT S0 S1
0xfed: V1412 = EQ V1411 S2
0xfee: V1413 = 0xcd6063f4913f91461387e2
0xffa: MISSING 0xc8
0xffb: V1414 = MULMOD S0 S1 S2
0xffc: MISSING 0xf
0xffd: V1415 = M[S0]
0xffe: MISSING 0xad
0xfff: V1416 = SMOD S0 S1
0x1000: RETURN V1416 S2
0x1001: V1417 = EXP S0 S1
0x1002: MISSING 0xab
0x1003: MISSING 0x22
0x1004: MISSING 0x2b
0x1005: V1418 = SHL S0 S1
0x1006: MISSING 0xc3
0x1007: V1419 = CALLVALUE
0x1008: MISSING 0xbe
0x1009: STOP 
0x100a: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V1401, V1406, V1405, S8, S9, S10, S11, S0, V1407, V1410, S18, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, V1409, 0xcd6063f4913f91461387e2, V1412, V1414, V1415, V1417, V1418, V1419]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x12e
Exit block: 0x1aa
Body: 0x12e, 0x135, 0x139, 0x141, 0x165, 0x16e, 0x17d, 0x191, 0x1aa, 0x4e5

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x1b8
Exit block: 0xe9c
Body: 0x1b8, 0x1bf, 0x1c3, 0x51c, 0x528, 0x551, 0x557, 0x55e, 0xe9c

Function 2:
Public function signature: 0x18160ddd
Entry block: 0x1ee
Exit block: 0x201
Body: 0x1ee, 0x1f5, 0x1f9, 0x201, 0x5c8

Function 3:
Public function signature: 0x23b872dd
Entry block: 0x213
Exit block: 0xe9c
Body: 0x213, 0x21a, 0x21e, 0x5ce, 0x5dc, 0x5dd, 0x5ee, 0x5f2, 0x613, 0x617, 0x646, 0x64a, 0x673, 0xe9c

Function 4:
Public function signature: 0x313ce567
Entry block: 0x23b
Exit block: 0x201
Body: 0x201, 0x23b, 0x242, 0x246, 0x74c

Function 5:
Public function signature: 0x3ccfd60b
Entry block: 0x24e
Exit block: 0x1da
Body: 0x1da, 0x24e, 0x255, 0x259, 0x751, 0x76d, 0x771, 0x7a9

Function 6:
Public function signature: 0x40650c91
Entry block: 0x261
Exit block: 0x201
Body: 0x201, 0x261, 0x268, 0x26c, 0x7ad

Function 7:
Public function signature: 0x42966c68
Entry block: 0x274
Exit block: 0xe9c
Body: 0x274, 0x27b, 0x27f, 0x7b7, 0x7d1, 0x7d5, 0x7f6, 0x7fa, 0x81f, 0xe9c

Function 8:
Public function signature: 0x4a63464d
Entry block: 0x28a
Exit block: 0xe9c
Body: 0x28a, 0x291, 0x295, 0x8a5, 0x8bc, 0x8c0, 0xe9c

Function 9:
Public function signature: 0x6338ef32
Entry block: 0x2ac
Exit block: 0x1da
Body: 0x12c, 0x1da, 0x2ac, 0x2b3, 0x2b7, 0x8ca, 0x909

Function 10:
Public function signature: 0x67220fd7
Entry block: 0x2bf
Exit block: 0x12c
Body: 0x12c, 0x2bf, 0x2c6, 0x2ca, 0x90c, 0x926, 0x92a

Function 11:
Public function signature: 0x70a08231
Entry block: 0x310
Exit block: 0x201
Body: 0x201, 0x310, 0x317, 0x31b, 0x963

Function 12:
Public function signature: 0x95d89b41
Entry block: 0x32f
Exit block: 0x1aa
Body: 0x141, 0x165, 0x16e, 0x17d, 0x191, 0x1aa, 0x32f, 0x336, 0x33a, 0x97e

Function 13:
Public function signature: 0x9b1cbccc
Entry block: 0x342
Exit block: 0x1da
Body: 0x1da, 0x342, 0x349, 0x34d, 0x9b5, 0x9cf, 0x9d3, 0x9df, 0x9e3

Function 14:
Public function signature: 0x9ea407be
Entry block: 0x355
Exit block: 0x12c
Body: 0x12c, 0x355, 0x35c, 0x360, 0xa22, 0xa39, 0xa3d

Function 15:
Public function signature: 0xa9059cbb
Entry block: 0x36b
Exit block: 0xe9c
Body: 0x36b, 0x372, 0x376, 0xa78, 0xa86, 0xa87, 0xa98, 0xa9c, 0xabd, 0xac1, 0xaea, 0xe9c

Function 16:
Public function signature: 0xaa6ca808
Entry block: 0x124
Exit block: 0xe9c
Body: 0x124, 0x44e, 0x45f, 0x463, 0x476, 0x47a, 0x483, 0x487, 0xd7b, 0xd85, 0xd8c, 0xd9b, 0xd9c, 0xda3, 0xe9c

Function 17:
Public function signature: 0xc108d542
Entry block: 0x38d
Exit block: 0x1da
Body: 0x1da, 0x38d, 0x394, 0x398, 0xb6f

Function 18:
Public function signature: 0xc489744b
Entry block: 0x3a0
Exit block: 0x201
Body: 0x201, 0x3a0, 0x3a7, 0x3ab, 0xb78, 0xbc6, 0xbca, 0xbd3, 0xbd7

Function 19:
Public function signature: 0xcbdd69b5
Entry block: 0x3c5
Exit block: 0x201
Body: 0x201, 0x3c5, 0x3cc, 0x3d0, 0xbe9

Function 20:
Public function signature: 0xdd62ed3e
Entry block: 0x3d8
Exit block: 0x201
Body: 0x201, 0x3d8, 0x3df, 0x3e3, 0xbef

Function 21:
Public function signature: 0xe58fc54c
Entry block: 0x3fd
Exit block: 0x1da
Body: 0x1da, 0x3fd, 0x404, 0x408, 0xc1a, 0xc38, 0xc3c, 0xc89, 0xc8d, 0xc96, 0xc9a, 0xcfc, 0xd00, 0xd09, 0xd0d

Function 22:
Public function signature: 0xefca2eed
Entry block: 0x41c
Exit block: 0x201
Body: 0x201, 0x41c, 0x423, 0x427, 0xd1e

Function 23:
Public function signature: 0xf2fde38b
Entry block: 0x42f
Exit block: 0x1da
Body: 0x12c, 0x1da, 0x42f, 0x436, 0x43a, 0x909, 0xd24, 0xd3b, 0xd3f, 0xd4f

Function 24:
Public fallback function
Entry block: 0x124
Exit block: 0xe9c
Body: 0x124, 0x44e, 0x45f, 0x463, 0x476, 0x47a, 0x483, 0x487, 0xd7b, 0xd85, 0xd8c, 0xd9b, 0xd9c, 0xda3, 0xe9c

Function 25:
Private function
Entry block: 0xda4
Exit block: 0xdf6
Body: 0x4a4, 0x4ad, 0x4bd, 0x4c6, 0x4c8, 0x4d4, 0x4e1, 0x5c2, 0x92e, 0x938, 0x946, 0x956, 0xda4, 0xdb7, 0xdca, 0xdca, 0xdf6, 0xe90, 0xe9d, 0xeaa, 0xeb8, 0xec8, 0xef1, 0xf1d, 0xf2c, 0xf39

Function 26:
Private function
Entry block: 0xe90
Exit block: 0x5c2
Body: 0x4a4, 0x4ad, 0x4bd, 0x5c2, 0xe90

Function 27:
Private function
Entry block: 0xe7e
Exit block: 0xe8a
Body: 0xe7e, 0xe8a

