Block 0x0
[0x0:0x38]
---
Predecessors: []
Successors: [0x39, 0x5f]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 PUSH4 0xffffffff
0x2d AND
0x2e DUP1
0x2f PUSH4 0x7f90e5d
0x34 EQ
0x35 PUSH2 0x5f
0x38 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x28: V6 = 0xffffffff
0x2d: V7 = AND 0xffffffff V5
0x2f: V8 = 0x7f90e5d
0x34: V9 = EQ 0x7f90e5d V7
0x35: V10 = 0x5f
0x38: JUMPI 0x5f V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0x0]
Successors: [0x44, 0xca]
---
0x39 DUP1
0x3a PUSH4 0x1aa3a008
0x3f EQ
0x40 PUSH2 0xca
0x43 JUMPI
---
0x3a: V11 = 0x1aa3a008
0x3f: V12 = EQ 0x1aa3a008 V7
0x40: V13 = 0xca
0x43: JUMPI 0xca V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x44
[0x44:0x4e]
---
Predecessors: [0x39]
Successors: [0x4f, 0xdf]
---
0x44 DUP1
0x45 PUSH4 0x2b68b9c6
0x4a EQ
0x4b PUSH2 0xdf
0x4e JUMPI
---
0x45: V14 = 0x2b68b9c6
0x4a: V15 = EQ 0x2b68b9c6 V7
0x4b: V16 = 0xdf
0x4e: JUMPI 0xdf V15
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x4f
[0x4f:0x59]
---
Predecessors: [0x44]
Successors: [0x5a, 0xf4]
---
0x4f DUP1
0x50 PUSH4 0x8da5cb5b
0x55 EQ
0x56 PUSH2 0xf4
0x59 JUMPI
---
0x50: V17 = 0x8da5cb5b
0x55: V18 = EQ 0x8da5cb5b V7
0x56: V19 = 0xf4
0x59: JUMPI 0xf4 V18
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x5a
[0x5a:0x5e]
---
Predecessors: [0x4f]
Successors: []
---
0x5a JUMPDEST
0x5b PUSH1 0x0
0x5d DUP1
0x5e REVERT
---
0x5a: JUMPDEST 
0x5b: V20 = 0x0
0x5e: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x5f
[0x5f:0x65]
---
Predecessors: [0x0]
Successors: [0x66, 0x6a]
---
0x5f JUMPDEST
0x60 CALLVALUE
0x61 ISZERO
0x62 PUSH2 0x6a
0x65 JUMPI
---
0x5f: JUMPDEST 
0x60: V21 = CALLVALUE
0x61: V22 = ISZERO V21
0x62: V23 = 0x6a
0x65: JUMPI 0x6a V22
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x66
[0x66:0x69]
---
Predecessors: [0x5f]
Successors: []
---
0x66 PUSH1 0x0
0x68 DUP1
0x69 REVERT
---
0x66: V24 = 0x0
0x69: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x6a
[0x6a:0x71]
---
Predecessors: [0x5f]
Successors: [0x149]
---
0x6a JUMPDEST
0x6b PUSH2 0x72
0x6e PUSH2 0x149
0x71 JUMP
---
0x6a: JUMPDEST 
0x6b: V25 = 0x72
0x6e: V26 = 0x149
0x71: JUMP 0x149
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x72]
Exit stack: [V7, 0x72]

================================

Block 0x72
[0x72:0x99]
---
Predecessors: [0x1db]
Successors: [0x9a]
---
0x72 JUMPDEST
0x73 PUSH1 0x40
0x75 MLOAD
0x76 DUP1
0x77 DUP1
0x78 PUSH1 0x20
0x7a ADD
0x7b DUP3
0x7c DUP2
0x7d SUB
0x7e DUP3
0x7f MSTORE
0x80 DUP4
0x81 DUP2
0x82 DUP2
0x83 MLOAD
0x84 DUP2
0x85 MSTORE
0x86 PUSH1 0x20
0x88 ADD
0x89 SWAP2
0x8a POP
0x8b DUP1
0x8c MLOAD
0x8d SWAP1
0x8e PUSH1 0x20
0x90 ADD
0x91 SWAP1
0x92 PUSH1 0x20
0x94 MUL
0x95 DUP1
0x96 DUP4
0x97 DUP4
0x98 PUSH1 0x0
---
0x72: JUMPDEST 
0x73: V27 = 0x40
0x75: V28 = M[0x40]
0x78: V29 = 0x20
0x7a: V30 = ADD 0x20 V28
0x7d: V31 = SUB V30 V28
0x7f: M[V28] = V31
0x83: V32 = M[V92]
0x85: M[V30] = V32
0x86: V33 = 0x20
0x88: V34 = ADD 0x20 V30
0x8c: V35 = M[V92]
0x8e: V36 = 0x20
0x90: V37 = ADD 0x20 V92
0x92: V38 = 0x20
0x94: V39 = MUL 0x20 V35
0x98: V40 = 0x0
---
Entry stack: [V7, V92]
Stack pops: 1
Stack additions: [S0, V28, V28, V34, V37, V39, V39, V34, V37, 0x0]
Exit stack: [V7, V92, V28, V28, V34, V37, V39, V39, V34, V37, 0x0]

================================

Block 0x9a
[0x9a:0xa2]
---
Predecessors: [0x72, 0xab]
Successors: [0xa3, 0xb6]
---
0x9a JUMPDEST
0x9b DUP4
0x9c DUP2
0x9d LT
0x9e ISZERO
0x9f PUSH2 0xb6
0xa2 JUMPI
---
0x9a: JUMPDEST 
0x9d: V41 = LT S0 V39
0x9e: V42 = ISZERO V41
0x9f: V43 = 0xb6
0xa2: JUMPI 0xb6 V42
---
Entry stack: [V7, V92, V28, V28, V34, V37, V39, V39, V34, V37, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V7, V92, V28, V28, V34, V37, V39, V39, V34, V37, S0]

================================

Block 0xa3
[0xa3:0xaa]
---
Predecessors: [0x9a]
Successors: [0xab]
---
0xa3 DUP1
0xa4 DUP3
0xa5 ADD
0xa6 MLOAD
0xa7 DUP2
0xa8 DUP5
0xa9 ADD
0xaa MSTORE
---
0xa5: V44 = ADD V37 S0
0xa6: V45 = M[V44]
0xa9: V46 = ADD V34 S0
0xaa: M[V46] = V45
---
Entry stack: [V7, V92, V28, V28, V34, V37, V39, V39, V34, V37, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V7, V92, V28, V28, V34, V37, V39, V39, V34, V37, S0]

================================

Block 0xab
[0xab:0xb5]
---
Predecessors: [0xa3]
Successors: [0x9a]
---
0xab JUMPDEST
0xac PUSH1 0x20
0xae DUP2
0xaf ADD
0xb0 SWAP1
0xb1 POP
0xb2 PUSH2 0x9a
0xb5 JUMP
---
0xab: JUMPDEST 
0xac: V47 = 0x20
0xaf: V48 = ADD S0 0x20
0xb2: V49 = 0x9a
0xb5: JUMP 0x9a
---
Entry stack: [V7, V92, V28, V28, V34, V37, V39, V39, V34, V37, S0]
Stack pops: 1
Stack additions: [V48]
Exit stack: [V7, V92, V28, V28, V34, V37, V39, V39, V34, V37, V48]

================================

Block 0xb6
[0xb6:0xc9]
---
Predecessors: [0x9a]
Successors: []
---
0xb6 JUMPDEST
0xb7 POP
0xb8 POP
0xb9 POP
0xba POP
0xbb SWAP1
0xbc POP
0xbd ADD
0xbe SWAP3
0xbf POP
0xc0 POP
0xc1 POP
0xc2 PUSH1 0x40
0xc4 MLOAD
0xc5 DUP1
0xc6 SWAP2
0xc7 SUB
0xc8 SWAP1
0xc9 RETURN
---
0xb6: JUMPDEST 
0xbd: V50 = ADD V39 V34
0xc2: V51 = 0x40
0xc4: V52 = M[0x40]
0xc7: V53 = SUB V50 V52
0xc9: RETURN V52 V53
---
Entry stack: [V7, V92, V28, V28, V34, V37, V39, V39, V34, V37, S0]
Stack pops: 10
Stack additions: []
Exit stack: [V7]

================================

Block 0xca
[0xca:0xd0]
---
Predecessors: [0x39]
Successors: [0xd1, 0xd5]
---
0xca JUMPDEST
0xcb CALLVALUE
0xcc ISZERO
0xcd PUSH2 0xd5
0xd0 JUMPI
---
0xca: JUMPDEST 
0xcb: V54 = CALLVALUE
0xcc: V55 = ISZERO V54
0xcd: V56 = 0xd5
0xd0: JUMPI 0xd5 V55
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xd1
[0xd1:0xd4]
---
Predecessors: [0xca]
Successors: []
---
0xd1 PUSH1 0x0
0xd3 DUP1
0xd4 REVERT
---
0xd1: V57 = 0x0
0xd4: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xd5
[0xd5:0xdc]
---
Predecessors: [0xca]
Successors: [0x1de]
---
0xd5 JUMPDEST
0xd6 PUSH2 0xdd
0xd9 PUSH2 0x1de
0xdc JUMP
---
0xd5: JUMPDEST 
0xd6: V58 = 0xdd
0xd9: V59 = 0x1de
0xdc: JUMP 0x1de
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0xdd]
Exit stack: [V7, 0xdd]

================================

Block 0xdd
[0xdd:0xde]
---
Predecessors: [0x302]
Successors: []
---
0xdd JUMPDEST
0xde STOP
---
0xdd: JUMPDEST 
0xde: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xdf
[0xdf:0xe5]
---
Predecessors: [0x44]
Successors: [0xe6, 0xea]
---
0xdf JUMPDEST
0xe0 CALLVALUE
0xe1 ISZERO
0xe2 PUSH2 0xea
0xe5 JUMPI
---
0xdf: JUMPDEST 
0xe0: V60 = CALLVALUE
0xe1: V61 = ISZERO V60
0xe2: V62 = 0xea
0xe5: JUMPI 0xea V61
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xe6
[0xe6:0xe9]
---
Predecessors: [0xdf]
Successors: []
---
0xe6 PUSH1 0x0
0xe8 DUP1
0xe9 REVERT
---
0xe6: V63 = 0x0
0xe9: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xea
[0xea:0xf1]
---
Predecessors: [0xdf]
Successors: [0x304]
---
0xea JUMPDEST
0xeb PUSH2 0xf2
0xee PUSH2 0x304
0xf1 JUMP
---
0xea: JUMPDEST 
0xeb: V64 = 0xf2
0xee: V65 = 0x304
0xf1: JUMP 0x304
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0xf2]
Exit stack: [V7, 0xf2]

================================

Block 0xf2
[0xf2:0xf3]
---
Predecessors: []
Successors: []
---
0xf2 JUMPDEST
0xf3 STOP
---
0xf2: JUMPDEST 
0xf3: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xf4
[0xf4:0xfa]
---
Predecessors: [0x4f]
Successors: [0xfb, 0xff]
---
0xf4 JUMPDEST
0xf5 CALLVALUE
0xf6 ISZERO
0xf7 PUSH2 0xff
0xfa JUMPI
---
0xf4: JUMPDEST 
0xf5: V66 = CALLVALUE
0xf6: V67 = ISZERO V66
0xf7: V68 = 0xff
0xfa: JUMPI 0xff V67
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xfb
[0xfb:0xfe]
---
Predecessors: [0xf4]
Successors: []
---
0xfb PUSH1 0x0
0xfd DUP1
0xfe REVERT
---
0xfb: V69 = 0x0
0xfe: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xff
[0xff:0x106]
---
Predecessors: [0xf4]
Successors: [0x3c8]
---
0xff JUMPDEST
0x100 PUSH2 0x107
0x103 PUSH2 0x3c8
0x106 JUMP
---
0xff: JUMPDEST 
0x100: V70 = 0x107
0x103: V71 = 0x3c8
0x106: JUMP 0x3c8
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x107]
Exit stack: [V7, 0x107]

================================

Block 0x107
[0x107:0x148]
---
Predecessors: [0x3c8]
Successors: []
---
0x107 JUMPDEST
0x108 PUSH1 0x40
0x10a MLOAD
0x10b DUP1
0x10c DUP3
0x10d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x122 AND
0x123 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x138 AND
0x139 DUP2
0x13a MSTORE
0x13b PUSH1 0x20
0x13d ADD
0x13e SWAP2
0x13f POP
0x140 POP
0x141 PUSH1 0x40
0x143 MLOAD
0x144 DUP1
0x145 SWAP2
0x146 SUB
0x147 SWAP1
0x148 RETURN
---
0x107: JUMPDEST 
0x108: V72 = 0x40
0x10a: V73 = M[0x40]
0x10d: V74 = 0xffffffffffffffffffffffffffffffffffffffff
0x122: V75 = AND 0xffffffffffffffffffffffffffffffffffffffff V214
0x123: V76 = 0xffffffffffffffffffffffffffffffffffffffff
0x138: V77 = AND 0xffffffffffffffffffffffffffffffffffffffff V75
0x13a: M[V73] = V77
0x13b: V78 = 0x20
0x13d: V79 = ADD 0x20 V73
0x141: V80 = 0x40
0x143: V81 = M[0x40]
0x146: V82 = SUB V79 V81
0x148: RETURN V81 V82
---
Entry stack: [V7, 0x107, V214]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0x107]

================================

Block 0x149
[0x149:0x150]
---
Predecessors: [0x6a]
Successors: [0x3ed]
---
0x149 JUMPDEST
0x14a PUSH2 0x151
0x14d PUSH2 0x3ed
0x150 JUMP
---
0x149: JUMPDEST 
0x14a: V83 = 0x151
0x14d: V84 = 0x3ed
0x150: JUMP 0x3ed
---
Entry stack: [V7, 0x72]
Stack pops: 0
Stack additions: [0x151]
Exit stack: [V7, 0x72, 0x151]

================================

Block 0x151
[0x151:0x178]
---
Predecessors: [0x3ed]
Successors: [0x179, 0x1d3]
---
0x151 JUMPDEST
0x152 PUSH1 0x1
0x154 DUP1
0x155 SLOAD
0x156 DUP1
0x157 PUSH1 0x20
0x159 MUL
0x15a PUSH1 0x20
0x15c ADD
0x15d PUSH1 0x40
0x15f MLOAD
0x160 SWAP1
0x161 DUP2
0x162 ADD
0x163 PUSH1 0x40
0x165 MSTORE
0x166 DUP1
0x167 SWAP3
0x168 SWAP2
0x169 SWAP1
0x16a DUP2
0x16b DUP2
0x16c MSTORE
0x16d PUSH1 0x20
0x16f ADD
0x170 DUP3
0x171 DUP1
0x172 SLOAD
0x173 DUP1
0x174 ISZERO
0x175 PUSH2 0x1d3
0x178 JUMPI
---
0x151: JUMPDEST 
0x152: V85 = 0x1
0x155: V86 = S[0x1]
0x157: V87 = 0x20
0x159: V88 = MUL 0x20 V86
0x15a: V89 = 0x20
0x15c: V90 = ADD 0x20 V88
0x15d: V91 = 0x40
0x15f: V92 = M[0x40]
0x162: V93 = ADD V92 V90
0x163: V94 = 0x40
0x165: M[0x40] = V93
0x16c: M[V92] = V86
0x16d: V95 = 0x20
0x16f: V96 = ADD 0x20 V92
0x172: V97 = S[0x1]
0x174: V98 = ISZERO V97
0x175: V99 = 0x1d3
0x178: JUMPI 0x1d3 V98
---
Entry stack: [V7, 0x72, V217]
Stack pops: 0
Stack additions: [V92, 0x1, V86, V96, 0x1, V97]
Exit stack: [V7, 0x72, V217, V92, 0x1, V86, V96, 0x1, V97]

================================

Block 0x179
[0x179:0x188]
---
Predecessors: [0x151]
Successors: [0x189]
---
0x179 PUSH1 0x20
0x17b MUL
0x17c DUP3
0x17d ADD
0x17e SWAP2
0x17f SWAP1
0x180 PUSH1 0x0
0x182 MSTORE
0x183 PUSH1 0x20
0x185 PUSH1 0x0
0x187 SHA3
0x188 SWAP1
---
0x179: V100 = 0x20
0x17b: V101 = MUL 0x20 V97
0x17d: V102 = ADD V96 V101
0x180: V103 = 0x0
0x182: M[0x0] = 0x1
0x183: V104 = 0x20
0x185: V105 = 0x0
0x187: V106 = SHA3 0x0 0x20
---
Entry stack: [V7, 0x72, V217, V92, 0x1, V86, V96, 0x1, V97]
Stack pops: 3
Stack additions: [V102, V106, S2]
Exit stack: [V7, 0x72, V217, V92, 0x1, V86, V102, V106, V96]

================================

Block 0x189
[0x189:0x1d2]
---
Predecessors: [0x179, 0x189]
Successors: [0x189, 0x1d3]
---
0x189 JUMPDEST
0x18a DUP2
0x18b PUSH1 0x0
0x18d SWAP1
0x18e SLOAD
0x18f SWAP1
0x190 PUSH2 0x100
0x193 EXP
0x194 SWAP1
0x195 DIV
0x196 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ab AND
0x1ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c1 AND
0x1c2 DUP2
0x1c3 MSTORE
0x1c4 PUSH1 0x20
0x1c6 ADD
0x1c7 SWAP1
0x1c8 PUSH1 0x1
0x1ca ADD
0x1cb SWAP1
0x1cc DUP1
0x1cd DUP4
0x1ce GT
0x1cf PUSH2 0x189
0x1d2 JUMPI
---
0x189: JUMPDEST 
0x18b: V107 = 0x0
0x18e: V108 = S[S1]
0x190: V109 = 0x100
0x193: V110 = EXP 0x100 0x0
0x195: V111 = DIV V108 0x1
0x196: V112 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ab: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x1ac: V114 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c1: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x1c3: M[S0] = V115
0x1c4: V116 = 0x20
0x1c6: V117 = ADD 0x20 S0
0x1c8: V118 = 0x1
0x1ca: V119 = ADD 0x1 S1
0x1ce: V120 = GT V102 V117
0x1cf: V121 = 0x189
0x1d2: JUMPI 0x189 V120
---
Entry stack: [V7, 0x72, V217, V92, 0x1, V86, V102, S1, S0]
Stack pops: 3
Stack additions: [S2, V119, V117]
Exit stack: [V7, 0x72, V217, V92, 0x1, V86, V102, V119, V117]

================================

Block 0x1d3
[0x1d3:0x1da]
---
Predecessors: [0x151, 0x189]
Successors: [0x1db]
---
0x1d3 JUMPDEST
0x1d4 POP
0x1d5 POP
0x1d6 POP
0x1d7 POP
0x1d8 POP
0x1d9 SWAP1
0x1da POP
---
0x1d3: JUMPDEST 
---
Entry stack: [V7, 0x72, V217, V92, 0x1, V86, S2, S1, S0]
Stack pops: 7
Stack additions: [S5]
Exit stack: [V7, 0x72, V92]

================================

Block 0x1db
[0x1db:0x1dd]
---
Predecessors: [0x1d3]
Successors: [0x72]
---
0x1db JUMPDEST
0x1dc SWAP1
0x1dd JUMP
---
0x1db: JUMPDEST 
0x1dd: JUMP 0x72
---
Entry stack: [V7, 0x72, V92]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V7, V92]

================================

Block 0x1de
[0x1de:0x234]
---
Predecessors: [0xd5]
Successors: [0x235, 0x239]
---
0x1de JUMPDEST
0x1df PUSH1 0x0
0x1e1 DUP1
0x1e2 SWAP1
0x1e3 SLOAD
0x1e4 SWAP1
0x1e5 PUSH2 0x100
0x1e8 EXP
0x1e9 SWAP1
0x1ea DIV
0x1eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x200 AND
0x201 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x216 AND
0x217 ORIGIN
0x218 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22d AND
0x22e EQ
0x22f ISZERO
0x230 ISZERO
0x231 PUSH2 0x239
0x234 JUMPI
---
0x1de: JUMPDEST 
0x1df: V122 = 0x0
0x1e3: V123 = S[0x0]
0x1e5: V124 = 0x100
0x1e8: V125 = EXP 0x100 0x0
0x1ea: V126 = DIV V123 0x1
0x1eb: V127 = 0xffffffffffffffffffffffffffffffffffffffff
0x200: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x201: V129 = 0xffffffffffffffffffffffffffffffffffffffff
0x216: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x217: V131 = ORIGIN
0x218: V132 = 0xffffffffffffffffffffffffffffffffffffffff
0x22d: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff V131
0x22e: V134 = EQ V133 V130
0x22f: V135 = ISZERO V134
0x230: V136 = ISZERO V135
0x231: V137 = 0x239
0x234: JUMPI 0x239 V136
---
Entry stack: [V7, 0xdd]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xdd]

================================

Block 0x235
[0x235:0x238]
---
Predecessors: [0x1de]
Successors: []
---
0x235 PUSH1 0x0
0x237 DUP1
0x238 REVERT
---
0x235: V138 = 0x0
0x238: REVERT 0x0 0x0
---
Entry stack: [V7, 0xdd]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xdd]

================================

Block 0x239
[0x239:0x24c]
---
Predecessors: [0x1de]
Successors: [0x401]
---
0x239 JUMPDEST
0x23a PUSH1 0x1
0x23c DUP1
0x23d SLOAD
0x23e DUP1
0x23f PUSH1 0x1
0x241 ADD
0x242 DUP3
0x243 DUP2
0x244 PUSH2 0x24d
0x247 SWAP2
0x248 SWAP1
0x249 PUSH2 0x401
0x24c JUMP
---
0x239: JUMPDEST 
0x23a: V139 = 0x1
0x23d: V140 = S[0x1]
0x23f: V141 = 0x1
0x241: V142 = ADD 0x1 V140
0x244: V143 = 0x24d
0x249: V144 = 0x401
0x24c: JUMP 0x401
---
Entry stack: [V7, 0xdd]
Stack pops: 0
Stack additions: [0x1, V140, V142, 0x24d, 0x1, V142]
Exit stack: [V7, 0xdd, 0x1, V140, V142, 0x24d, 0x1, V142]

================================

Block 0x24d
[0x24d:0x25a]
---
Predecessors: [0x428]
Successors: [0x25b]
---
0x24d JUMPDEST
0x24e SWAP2
0x24f PUSH1 0x0
0x251 MSTORE
0x252 PUSH1 0x20
0x254 PUSH1 0x0
0x256 SHA3
0x257 SWAP1
0x258 ADD
0x259 PUSH1 0x0
---
0x24d: JUMPDEST 
0x24f: V145 = 0x0
0x251: M[0x0] = 0x1
0x252: V146 = 0x20
0x254: V147 = 0x0
0x256: V148 = SHA3 0x0 0x20
0x258: V149 = ADD V140 V148
0x259: V150 = 0x0
---
Entry stack: [V7, 0xdd, 0x1, V140, V142]
Stack pops: 3
Stack additions: [S0, V149, 0x0]
Exit stack: [V7, 0xdd, V142, V149, 0x0]

================================

Block 0x25b
[0x25b:0x300]
---
Predecessors: [0x24d]
Successors: [0x301]
---
0x25b JUMPDEST
0x25c CALLER
0x25d SWAP1
0x25e SWAP2
0x25f SWAP1
0x260 SWAP2
0x261 PUSH2 0x100
0x264 EXP
0x265 DUP2
0x266 SLOAD
0x267 DUP2
0x268 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27d MUL
0x27e NOT
0x27f AND
0x280 SWAP1
0x281 DUP4
0x282 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x297 AND
0x298 MUL
0x299 OR
0x29a SWAP1
0x29b SSTORE
0x29c POP
0x29d POP
0x29e PUSH32 0xeeda149c76076b34d4b9d8896c2f7efc0d33d1c7b53ea3c5db490d64613f603a
0x2bf CALLER
0x2c0 PUSH1 0x40
0x2c2 MLOAD
0x2c3 DUP1
0x2c4 DUP3
0x2c5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2da AND
0x2db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f0 AND
0x2f1 DUP2
0x2f2 MSTORE
0x2f3 PUSH1 0x20
0x2f5 ADD
0x2f6 SWAP2
0x2f7 POP
0x2f8 POP
0x2f9 PUSH1 0x40
0x2fb MLOAD
0x2fc DUP1
0x2fd SWAP2
0x2fe SUB
0x2ff SWAP1
0x300 LOG1
---
0x25b: JUMPDEST 
0x25c: V151 = CALLER
0x261: V152 = 0x100
0x264: V153 = EXP 0x100 0x0
0x266: V154 = S[V149]
0x268: V155 = 0xffffffffffffffffffffffffffffffffffffffff
0x27d: V156 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x27e: V157 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x27f: V158 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V154
0x282: V159 = 0xffffffffffffffffffffffffffffffffffffffff
0x297: V160 = AND 0xffffffffffffffffffffffffffffffffffffffff V151
0x298: V161 = MUL V160 0x1
0x299: V162 = OR V161 V158
0x29b: S[V149] = V162
0x29e: V163 = 0xeeda149c76076b34d4b9d8896c2f7efc0d33d1c7b53ea3c5db490d64613f603a
0x2bf: V164 = CALLER
0x2c0: V165 = 0x40
0x2c2: V166 = M[0x40]
0x2c5: V167 = 0xffffffffffffffffffffffffffffffffffffffff
0x2da: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x2db: V169 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f0: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff V168
0x2f2: M[V166] = V170
0x2f3: V171 = 0x20
0x2f5: V172 = ADD 0x20 V166
0x2f9: V173 = 0x40
0x2fb: V174 = M[0x40]
0x2fe: V175 = SUB V172 V174
0x300: LOG V174 V175 0xeeda149c76076b34d4b9d8896c2f7efc0d33d1c7b53ea3c5db490d64613f603a
---
Entry stack: [V7, 0xdd, V142, V149, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: [V7, 0xdd]

================================

Block 0x301
[0x301:0x301]
---
Predecessors: [0x25b]
Successors: [0x302]
---
0x301 JUMPDEST
---
0x301: JUMPDEST 
---
Entry stack: [V7, 0xdd]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xdd]

================================

Block 0x302
[0x302:0x303]
---
Predecessors: [0x301]
Successors: [0xdd]
---
0x302 JUMPDEST
0x303 JUMP
---
0x302: JUMPDEST 
0x303: JUMP 0xdd
---
Entry stack: [V7, 0xdd]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Block 0x304
[0x304:0x35a]
---
Predecessors: [0xea]
Successors: [0x35b, 0x35f]
---
0x304 JUMPDEST
0x305 PUSH1 0x0
0x307 DUP1
0x308 SWAP1
0x309 SLOAD
0x30a SWAP1
0x30b PUSH2 0x100
0x30e EXP
0x30f SWAP1
0x310 DIV
0x311 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x326 AND
0x327 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x33c AND
0x33d ORIGIN
0x33e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x353 AND
0x354 EQ
0x355 ISZERO
0x356 ISZERO
0x357 PUSH2 0x35f
0x35a JUMPI
---
0x304: JUMPDEST 
0x305: V176 = 0x0
0x309: V177 = S[0x0]
0x30b: V178 = 0x100
0x30e: V179 = EXP 0x100 0x0
0x310: V180 = DIV V177 0x1
0x311: V181 = 0xffffffffffffffffffffffffffffffffffffffff
0x326: V182 = AND 0xffffffffffffffffffffffffffffffffffffffff V180
0x327: V183 = 0xffffffffffffffffffffffffffffffffffffffff
0x33c: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V182
0x33d: V185 = ORIGIN
0x33e: V186 = 0xffffffffffffffffffffffffffffffffffffffff
0x353: V187 = AND 0xffffffffffffffffffffffffffffffffffffffff V185
0x354: V188 = EQ V187 V184
0x355: V189 = ISZERO V188
0x356: V190 = ISZERO V189
0x357: V191 = 0x35f
0x35a: JUMPI 0x35f V190
---
Entry stack: [V7, 0xf2]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xf2]

================================

Block 0x35b
[0x35b:0x35e]
---
Predecessors: [0x304]
Successors: []
---
0x35b PUSH1 0x0
0x35d DUP1
0x35e REVERT
---
0x35b: V192 = 0x0
0x35e: REVERT 0x0 0x0
---
Entry stack: [V7, 0xf2]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xf2]

================================

Block 0x35f
[0x35f:0x3c4]
---
Predecessors: [0x304]
Successors: []
---
0x35f JUMPDEST
0x360 PUSH32 0xf58fef8e187ef8dfd7bef096c1ef3e4f3c54f98d95b8ad5659349b07e61204df
0x381 PUSH1 0x40
0x383 MLOAD
0x384 PUSH1 0x40
0x386 MLOAD
0x387 DUP1
0x388 SWAP2
0x389 SUB
0x38a SWAP1
0x38b LOG1
0x38c PUSH1 0x0
0x38e DUP1
0x38f SWAP1
0x390 SLOAD
0x391 SWAP1
0x392 PUSH2 0x100
0x395 EXP
0x396 SWAP1
0x397 DIV
0x398 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ad AND
0x3ae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c3 AND
0x3c4 SELFDESTRUCT
---
0x35f: JUMPDEST 
0x360: V193 = 0xf58fef8e187ef8dfd7bef096c1ef3e4f3c54f98d95b8ad5659349b07e61204df
0x381: V194 = 0x40
0x383: V195 = M[0x40]
0x384: V196 = 0x40
0x386: V197 = M[0x40]
0x389: V198 = SUB V195 V197
0x38b: LOG V197 V198 0xf58fef8e187ef8dfd7bef096c1ef3e4f3c54f98d95b8ad5659349b07e61204df
0x38c: V199 = 0x0
0x390: V200 = S[0x0]
0x392: V201 = 0x100
0x395: V202 = EXP 0x100 0x0
0x397: V203 = DIV V200 0x1
0x398: V204 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ad: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff V203
0x3ae: V206 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c3: V207 = AND 0xffffffffffffffffffffffffffffffffffffffff V205
0x3c4: SELFDESTRUCT V207
---
Entry stack: [V7, 0xf2]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xf2]

================================

Block 0x3c5
[0x3c5:0x3c5]
---
Predecessors: []
Successors: [0x3c6]
---
0x3c5 JUMPDEST
---
0x3c5: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3c6
[0x3c6:0x3c7]
---
Predecessors: [0x3c5]
Successors: []
Has unresolved jump.
---
0x3c6 JUMPDEST
0x3c7 JUMP
---
0x3c6: JUMPDEST 
0x3c7: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3c8
[0x3c8:0x3ec]
---
Predecessors: [0xff]
Successors: [0x107]
---
0x3c8 JUMPDEST
0x3c9 PUSH1 0x0
0x3cb DUP1
0x3cc SWAP1
0x3cd SLOAD
0x3ce SWAP1
0x3cf PUSH2 0x100
0x3d2 EXP
0x3d3 SWAP1
0x3d4 DIV
0x3d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ea AND
0x3eb DUP2
0x3ec JUMP
---
0x3c8: JUMPDEST 
0x3c9: V208 = 0x0
0x3cd: V209 = S[0x0]
0x3cf: V210 = 0x100
0x3d2: V211 = EXP 0x100 0x0
0x3d4: V212 = DIV V209 0x1
0x3d5: V213 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ea: V214 = AND 0xffffffffffffffffffffffffffffffffffffffff V212
0x3ec: JUMP 0x107
---
Entry stack: [V7, 0x107]
Stack pops: 1
Stack additions: [S0, V214]
Exit stack: [V7, 0x107, V214]

================================

Block 0x3ed
[0x3ed:0x400]
---
Predecessors: [0x149]
Successors: [0x151]
---
0x3ed JUMPDEST
0x3ee PUSH1 0x20
0x3f0 PUSH1 0x40
0x3f2 MLOAD
0x3f3 SWAP1
0x3f4 DUP2
0x3f5 ADD
0x3f6 PUSH1 0x40
0x3f8 MSTORE
0x3f9 DUP1
0x3fa PUSH1 0x0
0x3fc DUP2
0x3fd MSTORE
0x3fe POP
0x3ff SWAP1
0x400 JUMP
---
0x3ed: JUMPDEST 
0x3ee: V215 = 0x20
0x3f0: V216 = 0x40
0x3f2: V217 = M[0x40]
0x3f5: V218 = ADD V217 0x20
0x3f6: V219 = 0x40
0x3f8: M[0x40] = V218
0x3fa: V220 = 0x0
0x3fd: M[V217] = 0x0
0x400: JUMP 0x151
---
Entry stack: [V7, 0x72, 0x151]
Stack pops: 1
Stack additions: [V217]
Exit stack: [V7, 0x72, V217]

================================

Block 0x401
[0x401:0x40e]
---
Predecessors: [0x239]
Successors: [0x40f, 0x428]
---
0x401 JUMPDEST
0x402 DUP2
0x403 SLOAD
0x404 DUP2
0x405 DUP4
0x406 SSTORE
0x407 DUP2
0x408 DUP2
0x409 ISZERO
0x40a GT
0x40b PUSH2 0x428
0x40e JUMPI
---
0x401: JUMPDEST 
0x403: V221 = S[0x1]
0x406: S[0x1] = V142
0x409: V222 = ISZERO V221
0x40a: V223 = GT V222 V142
0x40b: V224 = 0x428
0x40e: JUMPI 0x428 V223
---
Entry stack: [V7, 0xdd, 0x1, V140, V142, 0x24d, 0x1, V142]
Stack pops: 2
Stack additions: [S1, S0, V221]
Exit stack: [V7, 0xdd, 0x1, V140, V142, 0x24d, 0x1, V142, V221]

================================

Block 0x40f
[0x40f:0x426]
---
Predecessors: [0x401]
Successors: [0x42d]
---
0x40f DUP2
0x410 DUP4
0x411 PUSH1 0x0
0x413 MSTORE
0x414 PUSH1 0x20
0x416 PUSH1 0x0
0x418 SHA3
0x419 SWAP2
0x41a DUP3
0x41b ADD
0x41c SWAP2
0x41d ADD
0x41e PUSH2 0x427
0x421 SWAP2
0x422 SWAP1
0x423 PUSH2 0x42d
0x426 JUMP
---
0x411: V225 = 0x0
0x413: M[0x0] = 0x1
0x414: V226 = 0x20
0x416: V227 = 0x0
0x418: V228 = SHA3 0x0 0x20
0x41b: V229 = ADD V228 V221
0x41d: V230 = ADD V228 V142
0x41e: V231 = 0x427
0x423: V232 = 0x42d
0x426: JUMP 0x42d
---
Entry stack: [V7, 0xdd, 0x1, V140, V142, 0x24d, 0x1, V142, V221]
Stack pops: 3
Stack additions: [S2, S1, 0x427, V229, V230]
Exit stack: [V7, 0xdd, 0x1, V140, V142, 0x24d, 0x1, V142, 0x427, V229, V230]

================================

Block 0x427
[0x427:0x427]
---
Predecessors: [0x44f]
Successors: [0x428]
---
0x427 JUMPDEST
---
0x427: JUMPDEST 
---
Entry stack: [V7, 0xdd, 0x1, V140, V142, 0x24d, 0x1, V142, V229]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xdd, 0x1, V140, V142, 0x24d, 0x1, V142, V229]

================================

Block 0x428
[0x428:0x42c]
---
Predecessors: [0x401, 0x427]
Successors: [0x24d]
---
0x428 JUMPDEST
0x429 POP
0x42a POP
0x42b POP
0x42c JUMP
---
0x428: JUMPDEST 
0x42c: JUMP 0x24d
---
Entry stack: [V7, 0xdd, 0x1, V140, V142, 0x24d, 0x1, V142, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V7, 0xdd, 0x1, V140, V142]

================================

Block 0x42d
[0x42d:0x432]
---
Predecessors: [0x40f]
Successors: [0x433]
---
0x42d JUMPDEST
0x42e PUSH2 0x44f
0x431 SWAP2
0x432 SWAP1
---
0x42d: JUMPDEST 
0x42e: V233 = 0x44f
---
Entry stack: [V7, 0xdd, 0x1, V140, V142, 0x24d, 0x1, V142, 0x427, V229, V230]
Stack pops: 2
Stack additions: [0x44f, S1, S0]
Exit stack: [V7, 0xdd, 0x1, V140, V142, 0x24d, 0x1, V142, 0x427, 0x44f, V229, V230]

================================

Block 0x433
[0x433:0x43b]
---
Predecessors: [0x42d, 0x43c]
Successors: [0x43c, 0x44b]
---
0x433 JUMPDEST
0x434 DUP1
0x435 DUP3
0x436 GT
0x437 ISZERO
0x438 PUSH2 0x44b
0x43b JUMPI
---
0x433: JUMPDEST 
0x436: V234 = GT V229 S0
0x437: V235 = ISZERO V234
0x438: V236 = 0x44b
0x43b: JUMPI 0x44b V235
---
Entry stack: [V7, 0xdd, 0x1, V140, V142, 0x24d, 0x1, V142, 0x427, 0x44f, V229, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V7, 0xdd, 0x1, V140, V142, 0x24d, 0x1, V142, 0x427, 0x44f, V229, S0]

================================

Block 0x43c
[0x43c:0x44a]
---
Predecessors: [0x433]
Successors: [0x433]
---
0x43c PUSH1 0x0
0x43e DUP2
0x43f PUSH1 0x0
0x441 SWAP1
0x442 SSTORE
0x443 POP
0x444 PUSH1 0x1
0x446 ADD
0x447 PUSH2 0x433
0x44a JUMP
---
0x43c: V237 = 0x0
0x43f: V238 = 0x0
0x442: S[S0] = 0x0
0x444: V239 = 0x1
0x446: V240 = ADD 0x1 S0
0x447: V241 = 0x433
0x44a: JUMP 0x433
---
Entry stack: [V7, 0xdd, 0x1, V140, V142, 0x24d, 0x1, V142, 0x427, 0x44f, V229, S0]
Stack pops: 1
Stack additions: [V240]
Exit stack: [V7, 0xdd, 0x1, V140, V142, 0x24d, 0x1, V142, 0x427, 0x44f, V229, V240]

================================

Block 0x44b
[0x44b:0x44e]
---
Predecessors: [0x433]
Successors: [0x44f]
---
0x44b JUMPDEST
0x44c POP
0x44d SWAP1
0x44e JUMP
---
0x44b: JUMPDEST 
0x44e: JUMP 0x44f
---
Entry stack: [V7, 0xdd, 0x1, V140, V142, 0x24d, 0x1, V142, 0x427, 0x44f, V229, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V7, 0xdd, 0x1, V140, V142, 0x24d, 0x1, V142, 0x427, V229]

================================

Block 0x44f
[0x44f:0x451]
---
Predecessors: [0x44b]
Successors: [0x427]
---
0x44f JUMPDEST
0x450 SWAP1
0x451 JUMP
---
0x44f: JUMPDEST 
0x451: JUMP 0x427
---
Entry stack: [V7, 0xdd, 0x1, V140, V142, 0x24d, 0x1, V142, 0x427, V229]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V7, 0xdd, 0x1, V140, V142, 0x24d, 0x1, V142, V229]

================================

Block 0x452
[0x452:0x47d]
---
Predecessors: []
Successors: []
---
0x452 STOP
0x453 LOG1
0x454 PUSH6 0x627a7a723058
0x45b SHA3
0x45c DUP15
0x45d EXTCODESIZE
0x45e BYTE
0x45f EXP
0x460 MISSING 0x46
0x461 GASLIMIT
0x462 MISSING 0xef
0x463 CALLDATACOPY
0x464 MISSING 0x1f
0x465 MISSING 0x4b
0x466 SIGNEXTEND
0x467 SLOAD
0x468 PUSH18 0x89dbc203802c9f7c06c40034c631f9d0e41b
0x47b PUSH2 0x29
---
0x452: STOP 
0x453: LOG S0 S1 S2
0x454: V242 = 0x627a7a723058
0x45b: V243 = SHA3 0x627a7a723058 S3
0x45d: V244 = EXTCODESIZE S17
0x45e: V245 = BYTE V244 V243
0x45f: V246 = EXP V245 S4
0x460: MISSING 0x46
0x461: V247 = GASLIMIT
0x462: MISSING 0xef
0x463: CALLDATACOPY S0 S1 S2
0x464: MISSING 0x1f
0x465: MISSING 0x4b
0x466: V248 = SIGNEXTEND S0 S1
0x467: V249 = S[V248]
0x468: V250 = 0x89dbc203802c9f7c06c40034c631f9d0e41b
0x47b: V251 = 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V246, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, V247, 0x29, 0x89dbc203802c9f7c06c40034c631f9d0e41b, V249]
Exit stack: []

================================

Function 0:
Public function signature: 0x7f90e5d
Entry block: 0x5f
Exit block: 0xb6
Body: 0x5f, 0x66, 0x6a, 0x72, 0x9a, 0xa3, 0xab, 0xb6, 0x149, 0x151, 0x179, 0x189, 0x1d3, 0x1db, 0x3ed

Function 1:
Public function signature: 0x1aa3a008
Entry block: 0xca
Exit block: 0xdd
Body: 0xca, 0xd1, 0xd5, 0xdd, 0x1de, 0x235, 0x239, 0x24d, 0x25b, 0x301, 0x302, 0x401, 0x40f, 0x427, 0x428, 0x42d, 0x433, 0x43c, 0x44b, 0x44f

Function 2:
Public function signature: 0x2b68b9c6
Entry block: 0xdf
Exit block: 0x35b
Body: 0xdf, 0xe6, 0xea, 0x304, 0x35b, 0x35f

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0xf4
Exit block: 0x107
Body: 0xf4, 0xfb, 0xff, 0x107, 0x3c8

Function 4:
Public fallback function
Entry block: 0x5a
Exit block: 0x5a
Body: 0x5a

