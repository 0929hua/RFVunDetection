Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x7d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x7d
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x7d
0xa: JUMPI 0x7d V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x86]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x2e1a7d4d
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x86
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x2e1a7d4d
0x20: V14 = EQ V12 0x2e1a7d4d
0x21: V15 = 0x86
0x24: JUMPI 0x86 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x9b]
---
0x25 DUP1
0x26 PUSH4 0x4313b9e5
0x2b EQ
0x2c PUSH2 0x9b
0x2f JUMPI
---
0x26: V16 = 0x4313b9e5
0x2b: V17 = EQ 0x4313b9e5 V12
0x2c: V18 = 0x9b
0x2f: JUMPI 0x9b V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xb0]
---
0x30 DUP1
0x31 PUSH4 0x4fb2e45d
0x36 EQ
0x37 PUSH2 0xb0
0x3a JUMPI
---
0x31: V19 = 0x4fb2e45d
0x36: V20 = EQ 0x4fb2e45d V12
0x37: V21 = 0xb0
0x3a: JUMPI 0xb0 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0xce]
---
0x3b DUP1
0x3c PUSH4 0x52efea6e
0x41 EQ
0x42 PUSH2 0xce
0x45 JUMPI
---
0x3c: V22 = 0x52efea6e
0x41: V23 = EQ 0x52efea6e V12
0x42: V24 = 0xce
0x45: JUMPI 0xce V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0xe0]
---
0x46 DUP1
0x47 PUSH4 0x8f32d59b
0x4c EQ
0x4d PUSH2 0xe0
0x50 JUMPI
---
0x47: V25 = 0x8f32d59b
0x4c: V26 = EQ 0x8f32d59b V12
0x4d: V27 = 0xe0
0x50: JUMPI 0xe0 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x104]
---
0x51 DUP1
0x52 PUSH4 0xb4a99a4e
0x57 EQ
0x58 PUSH2 0x104
0x5b JUMPI
---
0x52: V28 = 0xb4a99a4e
0x57: V29 = EQ 0xb4a99a4e V12
0x58: V30 = 0x104
0x5b: JUMPI 0x104 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x130]
---
0x5c DUP1
0x5d PUSH4 0xd0e30db0
0x62 EQ
0x63 PUSH2 0x130
0x66 JUMPI
---
0x5d: V31 = 0xd0e30db0
0x62: V32 = EQ 0xd0e30db0 V12
0x63: V33 = 0x130
0x66: JUMPI 0x130 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x13a]
---
0x67 DUP1
0x68 PUSH4 0xec8cb281
0x6d EQ
0x6e PUSH2 0x13a
0x71 JUMPI
---
0x68: V34 = 0xec8cb281
0x6d: V35 = EQ 0xec8cb281 V12
0x6e: V36 = 0x13a
0x71: JUMPI 0x13a V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x15c]
---
0x72 DUP1
0x73 PUSH4 0xfc7e286d
0x78 EQ
0x79 PUSH2 0x15c
0x7c JUMPI
---
0x73: V37 = 0xfc7e286d
0x78: V38 = EQ 0xfc7e286d V12
0x79: V39 = 0x15c
0x7c: JUMPI 0x15c V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x80]
---
Predecessors: [0x0, 0x72]
Successors: [0x81]
---
0x7d JUMPDEST
0x7e PUSH2 0x84
---
0x7d: JUMPDEST 
0x7e: V40 = 0x84
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x84]
Exit stack: [V12, 0x84]

================================

Block 0x81
[0x81:0x81]
---
Predecessors: [0x7d, 0x27d, 0x2c9]
Successors: [0x82]
---
0x81 JUMPDEST
---
0x81: JUMPDEST 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0x82
[0x82:0x83]
---
Predecessors: [0x81]
Successors: [0x84]
---
0x82 JUMPDEST
0x83 JUMP
---
0x82: JUMPDEST 
0x83: JUMP S0
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S2, S1]

================================

Block 0x84
[0x84:0x85]
---
Predecessors: [0x82, 0x206, 0x238, 0x272, 0x2f8]
Successors: []
---
0x84 JUMPDEST
0x85 STOP
---
0x84: JUMPDEST 
0x85: STOP 
---
Entry stack: [V12, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, S0]

================================

Block 0x86
[0x86:0x8c]
---
Predecessors: [0xb]
Successors: [0x8d, 0x8e]
---
0x86 JUMPDEST
0x87 CALLVALUE
0x88 ISZERO
0x89 PUSH2 0x8e
0x8c JUMPI
---
0x86: JUMPDEST 
0x87: V41 = CALLVALUE
0x88: V42 = ISZERO V41
0x89: V43 = 0x8e
0x8c: JUMPI 0x8e V42
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8d
[0x8d:0x8d]
---
Predecessors: [0x86]
Successors: []
---
0x8d INVALID
---
0x8d: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8e
[0x8e:0x98]
---
Predecessors: [0x86]
Successors: [0x18a]
---
0x8e JUMPDEST
0x8f PUSH2 0x84
0x92 PUSH1 0x4
0x94 CALLDATALOAD
0x95 PUSH2 0x18a
0x98 JUMP
---
0x8e: JUMPDEST 
0x8f: V44 = 0x84
0x92: V45 = 0x4
0x94: V46 = CALLDATALOAD 0x4
0x95: V47 = 0x18a
0x98: JUMP 0x18a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x84, V46]
Exit stack: [V12, 0x84, V46]

================================

Block 0x99
[0x99:0x9a]
---
Predecessors: []
Successors: []
---
0x99 JUMPDEST
0x9a STOP
---
0x99: JUMPDEST 
0x9a: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x9b
[0x9b:0xa1]
---
Predecessors: [0x25]
Successors: [0xa2, 0xa3]
---
0x9b JUMPDEST
0x9c CALLVALUE
0x9d ISZERO
0x9e PUSH2 0xa3
0xa1 JUMPI
---
0x9b: JUMPDEST 
0x9c: V48 = CALLVALUE
0x9d: V49 = ISZERO V48
0x9e: V50 = 0xa3
0xa1: JUMPI 0xa3 V49
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa2
[0xa2:0xa2]
---
Predecessors: [0x9b]
Successors: []
---
0xa2 INVALID
---
0xa2: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa3
[0xa3:0xad]
---
Predecessors: [0x9b]
Successors: [0x20a]
---
0xa3 JUMPDEST
0xa4 PUSH2 0x84
0xa7 PUSH1 0x4
0xa9 CALLDATALOAD
0xaa PUSH2 0x20a
0xad JUMP
---
0xa3: JUMPDEST 
0xa4: V51 = 0x84
0xa7: V52 = 0x4
0xa9: V53 = CALLDATALOAD 0x4
0xaa: V54 = 0x20a
0xad: JUMP 0x20a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x84, V53]
Exit stack: [V12, 0x84, V53]

================================

Block 0xae
[0xae:0xaf]
---
Predecessors: []
Successors: []
---
0xae JUMPDEST
0xaf STOP
---
0xae: JUMPDEST 
0xaf: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb0
[0xb0:0xb6]
---
Predecessors: [0x30]
Successors: [0xb7, 0xb8]
---
0xb0 JUMPDEST
0xb1 CALLVALUE
0xb2 ISZERO
0xb3 PUSH2 0xb8
0xb6 JUMPI
---
0xb0: JUMPDEST 
0xb1: V55 = CALLVALUE
0xb2: V56 = ISZERO V55
0xb3: V57 = 0xb8
0xb6: JUMPI 0xb8 V56
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb7
[0xb7:0xb7]
---
Predecessors: [0xb0]
Successors: []
---
0xb7 INVALID
---
0xb7: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb8
[0xb8:0xcb]
---
Predecessors: [0xb0]
Successors: [0x23b]
---
0xb8 JUMPDEST
0xb9 PUSH2 0x84
0xbc PUSH1 0x1
0xbe PUSH1 0xa0
0xc0 PUSH1 0x2
0xc2 EXP
0xc3 SUB
0xc4 PUSH1 0x4
0xc6 CALLDATALOAD
0xc7 AND
0xc8 PUSH2 0x23b
0xcb JUMP
---
0xb8: JUMPDEST 
0xb9: V58 = 0x84
0xbc: V59 = 0x1
0xbe: V60 = 0xa0
0xc0: V61 = 0x2
0xc2: V62 = EXP 0x2 0xa0
0xc3: V63 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc4: V64 = 0x4
0xc6: V65 = CALLDATALOAD 0x4
0xc7: V66 = AND V65 0xffffffffffffffffffffffffffffffffffffffff
0xc8: V67 = 0x23b
0xcb: JUMP 0x23b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x84, V66]
Exit stack: [V12, 0x84, V66]

================================

Block 0xcc
[0xcc:0xcd]
---
Predecessors: []
Successors: []
---
0xcc JUMPDEST
0xcd STOP
---
0xcc: JUMPDEST 
0xcd: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xce
[0xce:0xd4]
---
Predecessors: [0x3b]
Successors: [0xd5, 0xd6]
---
0xce JUMPDEST
0xcf CALLVALUE
0xd0 ISZERO
0xd1 PUSH2 0xd6
0xd4 JUMPI
---
0xce: JUMPDEST 
0xcf: V68 = CALLVALUE
0xd0: V69 = ISZERO V68
0xd1: V70 = 0xd6
0xd4: JUMPI 0xd6 V69
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xd5]
---
Predecessors: [0xce]
Successors: []
---
0xd5 INVALID
---
0xd5: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd6
[0xd6:0xdd]
---
Predecessors: [0xce]
Successors: [0x275]
---
0xd6 JUMPDEST
0xd7 PUSH2 0x84
0xda PUSH2 0x275
0xdd JUMP
---
0xd6: JUMPDEST 
0xd7: V71 = 0x84
0xda: V72 = 0x275
0xdd: JUMP 0x275
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x84]
Exit stack: [V12, 0x84]

================================

Block 0xde
[0xde:0xdf]
---
Predecessors: []
Successors: []
---
0xde JUMPDEST
0xdf STOP
---
0xde: JUMPDEST 
0xdf: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xe0
[0xe0:0xe6]
---
Predecessors: [0x46]
Successors: [0xe7, 0xe8]
---
0xe0 JUMPDEST
0xe1 CALLVALUE
0xe2 ISZERO
0xe3 PUSH2 0xe8
0xe6 JUMPI
---
0xe0: JUMPDEST 
0xe1: V73 = CALLVALUE
0xe2: V74 = ISZERO V73
0xe3: V75 = 0xe8
0xe6: JUMPI 0xe8 V74
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe7
[0xe7:0xe7]
---
Predecessors: [0xe0]
Successors: []
---
0xe7 INVALID
---
0xe7: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe8
[0xe8:0xef]
---
Predecessors: [0xe0]
Successors: [0x293]
---
0xe8 JUMPDEST
0xe9 PUSH2 0xf0
0xec PUSH2 0x293
0xef JUMP
---
0xe8: JUMPDEST 
0xe9: V76 = 0xf0
0xec: V77 = 0x293
0xef: JUMP 0x293
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xf0]
Exit stack: [V12, 0xf0]

================================

Block 0xf0
[0xf0:0x103]
---
Predecessors: [0x2b7]
Successors: []
---
0xf0 JUMPDEST
0xf1 PUSH1 0x40
0xf3 DUP1
0xf4 MLOAD
0xf5 SWAP2
0xf6 ISZERO
0xf7 ISZERO
0xf8 DUP3
0xf9 MSTORE
0xfa MLOAD
0xfb SWAP1
0xfc DUP2
0xfd SWAP1
0xfe SUB
0xff PUSH1 0x20
0x101 ADD
0x102 SWAP1
0x103 RETURN
---
0xf0: JUMPDEST 
0xf1: V78 = 0x40
0xf4: V79 = M[0x40]
0xf6: V80 = ISZERO {0x0, 0x1}
0xf7: V81 = ISZERO V80
0xf9: M[V79] = V81
0xfa: V82 = M[0x40]
0xfe: V83 = SUB V79 V82
0xff: V84 = 0x20
0x101: V85 = ADD 0x20 V83
0x103: RETURN V82 V85
---
Entry stack: [V12, S3, S2, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S3, S2, S1]

================================

Block 0x104
[0x104:0x10a]
---
Predecessors: [0x51]
Successors: [0x10b, 0x10c]
---
0x104 JUMPDEST
0x105 CALLVALUE
0x106 ISZERO
0x107 PUSH2 0x10c
0x10a JUMPI
---
0x104: JUMPDEST 
0x105: V86 = CALLVALUE
0x106: V87 = ISZERO V86
0x107: V88 = 0x10c
0x10a: JUMPI 0x10c V87
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x10b
[0x10b:0x10b]
---
Predecessors: [0x104]
Successors: []
---
0x10b INVALID
---
0x10b: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x10c
[0x10c:0x113]
---
Predecessors: [0x104]
Successors: [0x2ba]
---
0x10c JUMPDEST
0x10d PUSH2 0x114
0x110 PUSH2 0x2ba
0x113 JUMP
---
0x10c: JUMPDEST 
0x10d: V89 = 0x114
0x110: V90 = 0x2ba
0x113: JUMP 0x2ba
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x114]
Exit stack: [V12, 0x114]

================================

Block 0x114
[0x114:0x12f]
---
Predecessors: [0x2ba]
Successors: []
---
0x114 JUMPDEST
0x115 PUSH1 0x40
0x117 DUP1
0x118 MLOAD
0x119 PUSH1 0x1
0x11b PUSH1 0xa0
0x11d PUSH1 0x2
0x11f EXP
0x120 SUB
0x121 SWAP1
0x122 SWAP3
0x123 AND
0x124 DUP3
0x125 MSTORE
0x126 MLOAD
0x127 SWAP1
0x128 DUP2
0x129 SWAP1
0x12a SUB
0x12b PUSH1 0x20
0x12d ADD
0x12e SWAP1
0x12f RETURN
---
0x114: JUMPDEST 
0x115: V91 = 0x40
0x118: V92 = M[0x40]
0x119: V93 = 0x1
0x11b: V94 = 0xa0
0x11d: V95 = 0x2
0x11f: V96 = EXP 0x2 0xa0
0x120: V97 = SUB 0x10000000000000000000000000000000000000000 0x1
0x123: V98 = AND V249 0xffffffffffffffffffffffffffffffffffffffff
0x125: M[V92] = V98
0x126: V99 = M[0x40]
0x12a: V100 = SUB V92 V99
0x12b: V101 = 0x20
0x12d: V102 = ADD 0x20 V100
0x12f: RETURN V99 V102
---
Entry stack: [V12, 0x114, V249]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x114]

================================

Block 0x130
[0x130:0x137]
---
Predecessors: [0x5c]
Successors: [0x2c9]
---
0x130 JUMPDEST
0x131 PUSH2 0x84
0x134 PUSH2 0x2c9
0x137 JUMP
---
0x130: JUMPDEST 
0x131: V103 = 0x84
0x134: V104 = 0x2c9
0x137: JUMP 0x2c9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x84]
Exit stack: [V12, 0x84]

================================

Block 0x138
[0x138:0x139]
---
Predecessors: []
Successors: []
---
0x138 JUMPDEST
0x139 STOP
---
0x138: JUMPDEST 
0x139: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x13a
[0x13a:0x140]
---
Predecessors: [0x67]
Successors: [0x141, 0x142]
---
0x13a JUMPDEST
0x13b CALLVALUE
0x13c ISZERO
0x13d PUSH2 0x142
0x140 JUMPI
---
0x13a: JUMPDEST 
0x13b: V105 = CALLVALUE
0x13c: V106 = ISZERO V105
0x13d: V107 = 0x142
0x140: JUMPI 0x142 V106
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x141
[0x141:0x141]
---
Predecessors: [0x13a]
Successors: []
---
0x141 INVALID
---
0x141: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x142
[0x142:0x149]
---
Predecessors: [0x13a]
Successors: [0x2fa]
---
0x142 JUMPDEST
0x143 PUSH2 0x14a
0x146 PUSH2 0x2fa
0x149 JUMP
---
0x142: JUMPDEST 
0x143: V108 = 0x14a
0x146: V109 = 0x2fa
0x149: JUMP 0x2fa
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x14a]
Exit stack: [V12, 0x14a]

================================

Block 0x14a
[0x14a:0x15b]
---
Predecessors: [0x2fa, 0x300]
Successors: []
---
0x14a JUMPDEST
0x14b PUSH1 0x40
0x14d DUP1
0x14e MLOAD
0x14f SWAP2
0x150 DUP3
0x151 MSTORE
0x152 MLOAD
0x153 SWAP1
0x154 DUP2
0x155 SWAP1
0x156 SUB
0x157 PUSH1 0x20
0x159 ADD
0x15a SWAP1
0x15b RETURN
---
0x14a: JUMPDEST 
0x14b: V110 = 0x40
0x14e: V111 = M[0x40]
0x151: M[V111] = S0
0x152: V112 = M[0x40]
0x156: V113 = SUB V111 V112
0x157: V114 = 0x20
0x159: V115 = ADD 0x20 V113
0x15b: RETURN V112 V115
---
Entry stack: [V12, 0x14a, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x14a]

================================

Block 0x15c
[0x15c:0x162]
---
Predecessors: [0x72]
Successors: [0x163, 0x164]
---
0x15c JUMPDEST
0x15d CALLVALUE
0x15e ISZERO
0x15f PUSH2 0x164
0x162 JUMPI
---
0x15c: JUMPDEST 
0x15d: V116 = CALLVALUE
0x15e: V117 = ISZERO V116
0x15f: V118 = 0x164
0x162: JUMPI 0x164 V117
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x163
[0x163:0x163]
---
Predecessors: [0x15c]
Successors: []
---
0x163 INVALID
---
0x163: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x164
[0x164:0x177]
---
Predecessors: [0x15c]
Successors: [0x300]
---
0x164 JUMPDEST
0x165 PUSH2 0x14a
0x168 PUSH1 0x1
0x16a PUSH1 0xa0
0x16c PUSH1 0x2
0x16e EXP
0x16f SUB
0x170 PUSH1 0x4
0x172 CALLDATALOAD
0x173 AND
0x174 PUSH2 0x300
0x177 JUMP
---
0x164: JUMPDEST 
0x165: V119 = 0x14a
0x168: V120 = 0x1
0x16a: V121 = 0xa0
0x16c: V122 = 0x2
0x16e: V123 = EXP 0x2 0xa0
0x16f: V124 = SUB 0x10000000000000000000000000000000000000000 0x1
0x170: V125 = 0x4
0x172: V126 = CALLDATALOAD 0x4
0x173: V127 = AND V126 0xffffffffffffffffffffffffffffffffffffffff
0x174: V128 = 0x300
0x177: JUMP 0x300
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x14a, V127]
Exit stack: [V12, 0x14a, V127]

================================

Block 0x178
[0x178:0x189]
---
Predecessors: []
Successors: []
---
0x178 JUMPDEST
0x179 PUSH1 0x40
0x17b DUP1
0x17c MLOAD
0x17d SWAP2
0x17e DUP3
0x17f MSTORE
0x180 MLOAD
0x181 SWAP1
0x182 DUP2
0x183 SWAP1
0x184 SUB
0x185 PUSH1 0x20
0x187 ADD
0x188 SWAP1
0x189 RETURN
---
0x178: JUMPDEST 
0x179: V129 = 0x40
0x17c: V130 = M[0x40]
0x17f: M[V130] = S0
0x180: V131 = M[0x40]
0x184: V132 = SUB V130 V131
0x185: V133 = 0x20
0x187: V134 = ADD 0x20 V132
0x189: RETURN V131 V134
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x18a
[0x18a:0x193]
---
Predecessors: [0x8e]
Successors: [0x293]
---
0x18a JUMPDEST
0x18b PUSH1 0x0
0x18d PUSH2 0x194
0x190 PUSH2 0x293
0x193 JUMP
---
0x18a: JUMPDEST 
0x18b: V135 = 0x0
0x18d: V136 = 0x194
0x190: V137 = 0x293
0x193: JUMP 0x293
---
Entry stack: [V12, 0x84, V46]
Stack pops: 0
Stack additions: [0x0, 0x194]
Exit stack: [V12, 0x84, V46, 0x0, 0x194]

================================

Block 0x194
[0x194:0x19a]
---
Predecessors: [0x2b7]
Successors: [0x19b, 0x1a2]
---
0x194 JUMPDEST
0x195 DUP1
0x196 ISZERO
0x197 PUSH2 0x1a2
0x19a JUMPI
---
0x194: JUMPDEST 
0x196: V138 = ISZERO {0x0, 0x1}
0x197: V139 = 0x1a2
0x19a: JUMPI 0x1a2 V138
---
Entry stack: [V12, S3, S2, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, S3, S2, S1, {0x0, 0x1}]

================================

Block 0x19b
[0x19b:0x1a1]
---
Predecessors: [0x194]
Successors: [0x1a2]
---
0x19b POP
0x19c PUSH1 0x2
0x19e SLOAD
0x19f TIMESTAMP
0x1a0 LT
0x1a1 ISZERO
---
0x19c: V140 = 0x2
0x19e: V141 = S[0x2]
0x19f: V142 = TIMESTAMP
0x1a0: V143 = LT V142 V141
0x1a1: V144 = ISZERO V143
---
Entry stack: [V12, S3, S2, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: [V144]
Exit stack: [V12, S3, S2, S1, V144]

================================

Block 0x1a2
[0x1a2:0x1a7]
---
Predecessors: [0x194, 0x19b]
Successors: [0x1a8, 0x203]
---
0x1a2 JUMPDEST
0x1a3 ISZERO
0x1a4 PUSH2 0x203
0x1a7 JUMPI
---
0x1a2: JUMPDEST 
0x1a3: V145 = ISZERO S0
0x1a4: V146 = 0x203
0x1a7: JUMPI 0x203 V145
---
Entry stack: [V12, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S3, S2, S1]

================================

Block 0x1a8
[0x1a8:0x1cb]
---
Predecessors: [0x1a2]
Successors: [0x1cc, 0x1d1]
---
0x1a8 POP
0x1a9 PUSH1 0x1
0x1ab PUSH1 0xa0
0x1ad PUSH1 0x2
0x1af EXP
0x1b0 SUB
0x1b1 CALLER
0x1b2 AND
0x1b3 PUSH1 0x0
0x1b5 SWAP1
0x1b6 DUP2
0x1b7 MSTORE
0x1b8 PUSH1 0x1
0x1ba PUSH1 0x20
0x1bc MSTORE
0x1bd PUSH1 0x40
0x1bf SWAP1
0x1c0 SHA3
0x1c1 SLOAD
0x1c2 DUP1
0x1c3 DUP3
0x1c4 GT
0x1c5 DUP1
0x1c6 ISZERO
0x1c7 SWAP1
0x1c8 PUSH2 0x1d1
0x1cb JUMPI
---
0x1a9: V147 = 0x1
0x1ab: V148 = 0xa0
0x1ad: V149 = 0x2
0x1af: V150 = EXP 0x2 0xa0
0x1b0: V151 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b1: V152 = CALLER
0x1b2: V153 = AND V152 0xffffffffffffffffffffffffffffffffffffffff
0x1b3: V154 = 0x0
0x1b7: M[0x0] = V153
0x1b8: V155 = 0x1
0x1ba: V156 = 0x20
0x1bc: M[0x20] = 0x1
0x1bd: V157 = 0x40
0x1c0: V158 = SHA3 0x0 0x40
0x1c1: V159 = S[V158]
0x1c4: V160 = GT S1 V159
0x1c6: V161 = ISZERO V160
0x1c8: V162 = 0x1d1
0x1cb: JUMPI 0x1d1 V160
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, V159, V161]
Exit stack: [V12, S2, S1, V159, V161]

================================

Block 0x1cc
[0x1cc:0x1d0]
---
Predecessors: [0x1a8]
Successors: [0x1d1]
---
0x1cc POP
0x1cd PUSH1 0x0
0x1cf DUP2
0x1d0 GT
---
0x1cd: V163 = 0x0
0x1d0: V164 = GT V159 0x0
---
Entry stack: [V12, S3, S2, V159, V161]
Stack pops: 2
Stack additions: [S1, V164]
Exit stack: [V12, S3, S2, V159, V164]

================================

Block 0x1d1
[0x1d1:0x1d6]
---
Predecessors: [0x1a8, 0x1cc]
Successors: [0x1d7, 0x203]
---
0x1d1 JUMPDEST
0x1d2 ISZERO
0x1d3 PUSH2 0x203
0x1d6 JUMPI
---
0x1d1: JUMPDEST 
0x1d2: V165 = ISZERO S0
0x1d3: V166 = 0x203
0x1d6: JUMPI 0x203 V165
---
Entry stack: [V12, S3, S2, V159, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S3, S2, V159]

================================

Block 0x1d7
[0x1d7:0x201]
---
Predecessors: [0x1d1]
Successors: [0x202, 0x203]
---
0x1d7 PUSH1 0x40
0x1d9 MLOAD
0x1da PUSH1 0x1
0x1dc PUSH1 0xa0
0x1de PUSH1 0x2
0x1e0 EXP
0x1e1 SUB
0x1e2 CALLER
0x1e3 AND
0x1e4 SWAP1
0x1e5 DUP4
0x1e6 ISZERO
0x1e7 PUSH2 0x8fc
0x1ea MUL
0x1eb SWAP1
0x1ec DUP5
0x1ed SWAP1
0x1ee PUSH1 0x0
0x1f0 DUP2
0x1f1 DUP2
0x1f2 DUP2
0x1f3 DUP6
0x1f4 DUP9
0x1f5 DUP9
0x1f6 CALL
0x1f7 SWAP4
0x1f8 POP
0x1f9 POP
0x1fa POP
0x1fb POP
0x1fc ISZERO
0x1fd ISZERO
0x1fe PUSH2 0x203
0x201 JUMPI
---
0x1d7: V167 = 0x40
0x1d9: V168 = M[0x40]
0x1da: V169 = 0x1
0x1dc: V170 = 0xa0
0x1de: V171 = 0x2
0x1e0: V172 = EXP 0x2 0xa0
0x1e1: V173 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e2: V174 = CALLER
0x1e3: V175 = AND V174 0xffffffffffffffffffffffffffffffffffffffff
0x1e6: V176 = ISZERO S1
0x1e7: V177 = 0x8fc
0x1ea: V178 = MUL 0x8fc V176
0x1ee: V179 = 0x0
0x1f6: V180 = CALL V178 V175 S1 V168 0x0 V168 0x0
0x1fc: V181 = ISZERO V180
0x1fd: V182 = ISZERO V181
0x1fe: V183 = 0x203
0x201: JUMPI 0x203 V182
---
Entry stack: [V12, S2, S1, V159]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, S2, S1, V159]

================================

Block 0x202
[0x202:0x202]
---
Predecessors: [0x1d7]
Successors: []
---
0x202 INVALID
---
0x202: INVALID 
---
Entry stack: [V12, S2, S1, V159]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, V159]

================================

Block 0x203
[0x203:0x203]
---
Predecessors: [0x1a2, 0x1d1, 0x1d7]
Successors: [0x204]
---
0x203 JUMPDEST
---
0x203: JUMPDEST 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0x204
[0x204:0x204]
---
Predecessors: [0x203]
Successors: [0x205]
---
0x204 JUMPDEST
---
0x204: JUMPDEST 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0x205
[0x205:0x205]
---
Predecessors: [0x204]
Successors: [0x206]
---
0x205 JUMPDEST
---
0x205: JUMPDEST 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0x206
[0x206:0x209]
---
Predecessors: [0x205]
Successors: [0x84]
---
0x206 JUMPDEST
0x207 POP
0x208 POP
0x209 JUMP
---
0x206: JUMPDEST 
0x209: JUMP S2
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x20a
[0x20a:0x237]
---
Predecessors: [0xa3]
Successors: [0x238]
---
0x20a JUMPDEST
0x20b PUSH1 0x3
0x20d DUP1
0x20e SLOAD
0x20f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x224 NOT
0x225 AND
0x226 CALLER
0x227 PUSH1 0x1
0x229 PUSH1 0xa0
0x22b PUSH1 0x2
0x22d EXP
0x22e SUB
0x22f AND
0x230 OR
0x231 SWAP1
0x232 SSTORE
0x233 PUSH1 0x2
0x235 DUP2
0x236 SWAP1
0x237 SSTORE
---
0x20a: JUMPDEST 
0x20b: V184 = 0x3
0x20e: V185 = S[0x3]
0x20f: V186 = 0xffffffffffffffffffffffffffffffffffffffff
0x224: V187 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x225: V188 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V185
0x226: V189 = CALLER
0x227: V190 = 0x1
0x229: V191 = 0xa0
0x22b: V192 = 0x2
0x22d: V193 = EXP 0x2 0xa0
0x22e: V194 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22f: V195 = AND 0xffffffffffffffffffffffffffffffffffffffff V189
0x230: V196 = OR V195 V188
0x232: S[0x3] = V196
0x233: V197 = 0x2
0x237: S[0x2] = V53
---
Entry stack: [V12, 0x84, V53]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x84, V53]

================================

Block 0x238
[0x238:0x23a]
---
Predecessors: [0x20a, 0x243]
Successors: [0x84]
---
0x238 JUMPDEST
0x239 POP
0x23a JUMP
---
0x238: JUMPDEST 
0x23a: JUMP S1
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, S2]

================================

Block 0x23b
[0x23b:0x242]
---
Predecessors: [0xb8]
Successors: [0x293]
---
0x23b JUMPDEST
0x23c PUSH2 0x243
0x23f PUSH2 0x293
0x242 JUMP
---
0x23b: JUMPDEST 
0x23c: V198 = 0x243
0x23f: V199 = 0x293
0x242: JUMP 0x293
---
Entry stack: [V12, 0x84, V66]
Stack pops: 0
Stack additions: [0x243]
Exit stack: [V12, 0x84, V66, 0x243]

================================

Block 0x243
[0x243:0x248]
---
Predecessors: [0x2b7]
Successors: [0x238, 0x249]
---
0x243 JUMPDEST
0x244 ISZERO
0x245 PUSH2 0x238
0x248 JUMPI
---
0x243: JUMPDEST 
0x244: V200 = ISZERO {0x0, 0x1}
0x245: V201 = 0x238
0x248: JUMPI 0x238 V200
---
Entry stack: [V12, S3, S2, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S3, S2, S1]

================================

Block 0x249
[0x249:0x270]
---
Predecessors: [0x243]
Successors: [0x271]
---
0x249 PUSH1 0x0
0x24b DUP1
0x24c SLOAD
0x24d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x262 NOT
0x263 AND
0x264 PUSH1 0x1
0x266 PUSH1 0xa0
0x268 PUSH1 0x2
0x26a EXP
0x26b SUB
0x26c DUP4
0x26d AND
0x26e OR
0x26f SWAP1
0x270 SSTORE
---
0x249: V202 = 0x0
0x24c: V203 = S[0x0]
0x24d: V204 = 0xffffffffffffffffffffffffffffffffffffffff
0x262: V205 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x263: V206 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V203
0x264: V207 = 0x1
0x266: V208 = 0xa0
0x268: V209 = 0x2
0x26a: V210 = EXP 0x2 0xa0
0x26b: V211 = SUB 0x10000000000000000000000000000000000000000 0x1
0x26d: V212 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x26e: V213 = OR V212 V206
0x270: S[0x0] = V213
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, S2, S1, S0]

================================

Block 0x271
[0x271:0x271]
---
Predecessors: [0x249]
Successors: [0x272]
---
0x271 JUMPDEST
---
0x271: JUMPDEST 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0x272
[0x272:0x274]
---
Predecessors: [0x271]
Successors: [0x84]
---
0x272 JUMPDEST
0x273 POP
0x274 JUMP
---
0x272: JUMPDEST 
0x274: JUMP S1
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, S2]

================================

Block 0x275
[0x275:0x27c]
---
Predecessors: [0xd6]
Successors: [0x293]
---
0x275 JUMPDEST
0x276 PUSH2 0x27d
0x279 PUSH2 0x293
0x27c JUMP
---
0x275: JUMPDEST 
0x276: V214 = 0x27d
0x279: V215 = 0x293
0x27c: JUMP 0x293
---
Entry stack: [V12, 0x84]
Stack pops: 0
Stack additions: [0x27d]
Exit stack: [V12, 0x84, 0x27d]

================================

Block 0x27d
[0x27d:0x282]
---
Predecessors: [0x2b7]
Successors: [0x81, 0x283]
---
0x27d JUMPDEST
0x27e ISZERO
0x27f PUSH2 0x81
0x282 JUMPI
---
0x27d: JUMPDEST 
0x27e: V216 = ISZERO {0x0, 0x1}
0x27f: V217 = 0x81
0x282: JUMPI 0x81 V216
---
Entry stack: [V12, S3, S2, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S3, S2, S1]

================================

Block 0x283
[0x283:0x28f]
---
Predecessors: [0x27d]
Successors: []
---
0x283 PUSH1 0x0
0x285 SLOAD
0x286 PUSH1 0x1
0x288 PUSH1 0xa0
0x28a PUSH1 0x2
0x28c EXP
0x28d SUB
0x28e AND
0x28f SELFDESTRUCT
---
0x283: V218 = 0x0
0x285: V219 = S[0x0]
0x286: V220 = 0x1
0x288: V221 = 0xa0
0x28a: V222 = 0x2
0x28c: V223 = EXP 0x2 0xa0
0x28d: V224 = SUB 0x10000000000000000000000000000000000000000 0x1
0x28e: V225 = AND 0xffffffffffffffffffffffffffffffffffffffff V219
0x28f: SELFDESTRUCT V225
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0x290
[0x290:0x290]
---
Predecessors: []
Successors: [0x291]
---
0x290 JUMPDEST
---
0x290: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x291
[0x291:0x292]
---
Predecessors: [0x290]
Successors: []
Has unresolved jump.
---
0x291 JUMPDEST
0x292 JUMP
---
0x291: JUMPDEST 
0x292: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x293
[0x293:0x2ab]
---
Predecessors: [0xe8, 0x18a, 0x23b, 0x275]
Successors: [0x2ac, 0x2b3]
---
0x293 JUMPDEST
0x294 PUSH1 0x0
0x296 DUP1
0x297 SLOAD
0x298 CALLER
0x299 PUSH1 0x1
0x29b PUSH1 0xa0
0x29d PUSH1 0x2
0x29f EXP
0x2a0 SUB
0x2a1 SWAP1
0x2a2 DUP2
0x2a3 AND
0x2a4 SWAP2
0x2a5 AND
0x2a6 EQ
0x2a7 ISZERO
0x2a8 PUSH2 0x2b3
0x2ab JUMPI
---
0x293: JUMPDEST 
0x294: V226 = 0x0
0x297: V227 = S[0x0]
0x298: V228 = CALLER
0x299: V229 = 0x1
0x29b: V230 = 0xa0
0x29d: V231 = 0x2
0x29f: V232 = EXP 0x2 0xa0
0x2a0: V233 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a3: V234 = AND 0xffffffffffffffffffffffffffffffffffffffff V228
0x2a5: V235 = AND V227 0xffffffffffffffffffffffffffffffffffffffff
0x2a6: V236 = EQ V235 V234
0x2a7: V237 = ISZERO V236
0x2a8: V238 = 0x2b3
0x2ab: JUMPI 0x2b3 V237
---
Entry stack: [V12, S3, S2, S1, {0xf0, 0x194, 0x243, 0x27d}]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, S3, S2, S1, {0xf0, 0x194, 0x243, 0x27d}, 0x0]

================================

Block 0x2ac
[0x2ac:0x2b2]
---
Predecessors: [0x293]
Successors: [0x2b7]
---
0x2ac POP
0x2ad PUSH1 0x1
0x2af PUSH2 0x2b7
0x2b2 JUMP
---
0x2ad: V239 = 0x1
0x2af: V240 = 0x2b7
0x2b2: JUMP 0x2b7
---
Entry stack: [V12, S4, S3, S2, {0xf0, 0x194, 0x243, 0x27d}, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V12, S4, S3, S2, {0xf0, 0x194, 0x243, 0x27d}, 0x1]

================================

Block 0x2b3
[0x2b3:0x2b6]
---
Predecessors: [0x293]
Successors: [0x2b7]
---
0x2b3 JUMPDEST
0x2b4 POP
0x2b5 PUSH1 0x0
---
0x2b3: JUMPDEST 
0x2b5: V241 = 0x0
---
Entry stack: [V12, S4, S3, S2, {0xf0, 0x194, 0x243, 0x27d}, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, S4, S3, S2, {0xf0, 0x194, 0x243, 0x27d}, 0x0]

================================

Block 0x2b7
[0x2b7:0x2b9]
---
Predecessors: [0x2ac, 0x2b3]
Successors: [0xf0, 0x194, 0x243, 0x27d]
---
0x2b7 JUMPDEST
0x2b8 SWAP1
0x2b9 JUMP
---
0x2b7: JUMPDEST 
0x2b9: JUMP {0xf0, 0x194, 0x243, 0x27d}
---
Entry stack: [V12, S4, S3, S2, {0xf0, 0x194, 0x243, 0x27d}, {0x0, 0x1}]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, S4, S3, S2, {0x0, 0x1}]

================================

Block 0x2ba
[0x2ba:0x2c8]
---
Predecessors: [0x10c]
Successors: [0x114]
---
0x2ba JUMPDEST
0x2bb PUSH1 0x3
0x2bd SLOAD
0x2be PUSH1 0x1
0x2c0 PUSH1 0xa0
0x2c2 PUSH1 0x2
0x2c4 EXP
0x2c5 SUB
0x2c6 AND
0x2c7 DUP2
0x2c8 JUMP
---
0x2ba: JUMPDEST 
0x2bb: V242 = 0x3
0x2bd: V243 = S[0x3]
0x2be: V244 = 0x1
0x2c0: V245 = 0xa0
0x2c2: V246 = 0x2
0x2c4: V247 = EXP 0x2 0xa0
0x2c5: V248 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c6: V249 = AND 0xffffffffffffffffffffffffffffffffffffffff V243
0x2c8: JUMP 0x114
---
Entry stack: [V12, 0x114]
Stack pops: 1
Stack additions: [S0, V249]
Exit stack: [V12, 0x114, V249]

================================

Block 0x2c9
[0x2c9:0x2d8]
---
Predecessors: [0x130]
Successors: [0x81, 0x2d9]
---
0x2c9 JUMPDEST
0x2ca PUSH8 0x6f05b59d3b20000
0x2d3 CALLVALUE
0x2d4 LT
0x2d5 PUSH2 0x81
0x2d8 JUMPI
---
0x2c9: JUMPDEST 
0x2ca: V250 = 0x6f05b59d3b20000
0x2d3: V251 = CALLVALUE
0x2d4: V252 = LT V251 0x6f05b59d3b20000
0x2d5: V253 = 0x81
0x2d8: JUMPI 0x81 V252
---
Entry stack: [V12, 0x84]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84]

================================

Block 0x2d9
[0x2d9:0x2f6]
---
Predecessors: [0x2c9]
Successors: [0x2f7]
---
0x2d9 PUSH1 0x1
0x2db PUSH1 0xa0
0x2dd PUSH1 0x2
0x2df EXP
0x2e0 SUB
0x2e1 CALLER
0x2e2 AND
0x2e3 PUSH1 0x0
0x2e5 SWAP1
0x2e6 DUP2
0x2e7 MSTORE
0x2e8 PUSH1 0x1
0x2ea PUSH1 0x20
0x2ec MSTORE
0x2ed PUSH1 0x40
0x2ef SWAP1
0x2f0 SHA3
0x2f1 DUP1
0x2f2 SLOAD
0x2f3 CALLVALUE
0x2f4 ADD
0x2f5 SWAP1
0x2f6 SSTORE
---
0x2d9: V254 = 0x1
0x2db: V255 = 0xa0
0x2dd: V256 = 0x2
0x2df: V257 = EXP 0x2 0xa0
0x2e0: V258 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e1: V259 = CALLER
0x2e2: V260 = AND V259 0xffffffffffffffffffffffffffffffffffffffff
0x2e3: V261 = 0x0
0x2e7: M[0x0] = V260
0x2e8: V262 = 0x1
0x2ea: V263 = 0x20
0x2ec: M[0x20] = 0x1
0x2ed: V264 = 0x40
0x2f0: V265 = SHA3 0x0 0x40
0x2f2: V266 = S[V265]
0x2f3: V267 = CALLVALUE
0x2f4: V268 = ADD V267 V266
0x2f6: S[V265] = V268
---
Entry stack: [V12, 0x84]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84]

================================

Block 0x2f7
[0x2f7:0x2f7]
---
Predecessors: [0x2d9]
Successors: [0x2f8]
---
0x2f7 JUMPDEST
---
0x2f7: JUMPDEST 
---
Entry stack: [V12, 0x84]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84]

================================

Block 0x2f8
[0x2f8:0x2f9]
---
Predecessors: [0x2f7]
Successors: [0x84]
---
0x2f8 JUMPDEST
0x2f9 JUMP
---
0x2f8: JUMPDEST 
0x2f9: JUMP 0x84
---
Entry stack: [V12, 0x84]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x2fa
[0x2fa:0x2ff]
---
Predecessors: [0x142]
Successors: [0x14a]
---
0x2fa JUMPDEST
0x2fb PUSH1 0x2
0x2fd SLOAD
0x2fe DUP2
0x2ff JUMP
---
0x2fa: JUMPDEST 
0x2fb: V269 = 0x2
0x2fd: V270 = S[0x2]
0x2ff: JUMP 0x14a
---
Entry stack: [V12, 0x14a]
Stack pops: 1
Stack additions: [S0, V270]
Exit stack: [V12, 0x14a, V270]

================================

Block 0x300
[0x300:0x311]
---
Predecessors: [0x164]
Successors: [0x14a]
---
0x300 JUMPDEST
0x301 PUSH1 0x1
0x303 PUSH1 0x20
0x305 MSTORE
0x306 PUSH1 0x0
0x308 SWAP1
0x309 DUP2
0x30a MSTORE
0x30b PUSH1 0x40
0x30d SWAP1
0x30e SHA3
0x30f SLOAD
0x310 DUP2
0x311 JUMP
---
0x300: JUMPDEST 
0x301: V271 = 0x1
0x303: V272 = 0x20
0x305: M[0x20] = 0x1
0x306: V273 = 0x0
0x30a: M[0x0] = V127
0x30b: V274 = 0x40
0x30e: V275 = SHA3 0x0 0x40
0x30f: V276 = S[V275]
0x311: JUMP 0x14a
---
Entry stack: [V12, 0x14a, V127]
Stack pops: 2
Stack additions: [S1, V276]
Exit stack: [V12, 0x14a, V276]

================================

Block 0x312
[0x312:0x33d]
---
Predecessors: []
Successors: []
---
0x312 STOP
0x313 LOG1
0x314 PUSH6 0x627a7a723058
0x31b SHA3
0x31c PUSH5 0x1ae536ee24
0x322 EQ
0x323 ORIGIN
0x324 SWAP10
0x325 CALLVALUE
0x326 CALL
0x327 MISSING 0x21
0x328 MISSING 0xa5
0x329 MISSING 0xb3
0x32a SWAP2
0x32b MISSING 0xa8
0x32c MISSING 0xc8
0x32d MISSING 0xe8
0x32e EXTCODEHASH
0x32f MISSING 0xec
0x330 CODESIZE
0x331 MISSING 0xd8
0x332 MISSING 0x25
0x333 MISSING 0x27
0x334 MISSING 0x2b
0x335 TIMESTAMP
0x336 MISSING 0xb2
0x337 MISSING 0xe
0x338 MISSING 0xea
0x339 MISSING 0xc4
0x33a LOG0
0x33b GAS
0x33c STOP
0x33d MISSING 0x29
---
0x312: STOP 
0x313: LOG S0 S1 S2
0x314: V277 = 0x627a7a723058
0x31b: V278 = SHA3 0x627a7a723058 S3
0x31c: V279 = 0x1ae536ee24
0x322: V280 = EQ 0x1ae536ee24 V278
0x323: V281 = ORIGIN
0x325: V282 = CALLVALUE
0x326: V283 = CALL V282 S12 V280 S4 S5 S6 S7
0x327: MISSING 0x21
0x328: MISSING 0xa5
0x329: MISSING 0xb3
0x32b: MISSING 0xa8
0x32c: MISSING 0xc8
0x32d: MISSING 0xe8
0x32e: V284 = EXTCODEHASH S0
0x32f: MISSING 0xec
0x330: V285 = CODESIZE
0x331: MISSING 0xd8
0x332: MISSING 0x25
0x333: MISSING 0x27
0x334: MISSING 0x2b
0x335: V286 = TIMESTAMP
0x336: MISSING 0xb2
0x337: MISSING 0xe
0x338: MISSING 0xea
0x339: MISSING 0xc4
0x33a: LOG S0 S1
0x33b: V287 = GAS
0x33c: STOP 
0x33d: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V283, S8, S9, S10, S11, V281, S2, S1, S0, V284, V285, V286, V287]
Exit stack: []

================================

Function 0:
Public function signature: 0x2e1a7d4d
Entry block: 0x86
Exit block: 0x84
Body: 0x84, 0x86, 0x8d, 0x8e, 0x18a, 0x194, 0x19b, 0x1a2, 0x1a8, 0x1cc, 0x1d1, 0x1d7, 0x202, 0x203, 0x204, 0x205, 0x206

Function 1:
Public function signature: 0x4313b9e5
Entry block: 0x9b
Exit block: 0x84
Body: 0x84, 0x9b, 0xa2, 0xa3, 0x20a, 0x238

Function 2:
Public function signature: 0x4fb2e45d
Entry block: 0xb0
Exit block: 0x84
Body: 0x84, 0xb0, 0xb7, 0xb8, 0x238, 0x23b, 0x243, 0x249, 0x271, 0x272

Function 3:
Public function signature: 0x52efea6e
Entry block: 0xce
Exit block: 0x84
Body: 0x81, 0x82, 0x84, 0xce, 0xd5, 0xd6, 0x275, 0x27d, 0x283

Function 4:
Public function signature: 0x8f32d59b
Entry block: 0xe0
Exit block: 0xf0
Body: 0xe0, 0xe7, 0xe8, 0xf0

Function 5:
Public function signature: 0xb4a99a4e
Entry block: 0x104
Exit block: 0x114
Body: 0x104, 0x10b, 0x10c, 0x114, 0x2ba

Function 6:
Public function signature: 0xd0e30db0
Entry block: 0x130
Exit block: 0x84
Body: 0x81, 0x82, 0x84, 0x130, 0x2c9, 0x2d9, 0x2f7, 0x2f8

Function 7:
Public function signature: 0xec8cb281
Entry block: 0x13a
Exit block: 0x14a
Body: 0x13a, 0x141, 0x142, 0x14a, 0x2fa

Function 8:
Public function signature: 0xfc7e286d
Entry block: 0x15c
Exit block: 0x14a
Body: 0x14a, 0x15c, 0x163, 0x164, 0x300

Function 9:
Public fallback function
Entry block: 0x7d
Exit block: 0x84
Body: 0x7d, 0x81, 0x82, 0x84

Function 10:
Private function
Entry block: 0x293
Exit block: 0x2b7
Body: 0x293, 0x2ac, 0x2b3, 0x2b7

